(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    869960,      16736]
NotebookOptionsPosition[    852259,      16436]
NotebookOutlinePosition[    852654,      16453]
CellTagsIndexPosition[    852611,      16450]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Finite N Sachdev-Ye-Kitaev model", "Title",
 CellChangeTimes->{{3.7770142480556498`*^9, 
  3.777014271303727*^9}},ExpressionUUID->"ec764c89-c64c-4887-bf19-\
b4004e9bb687"],

Cell["\<\
Direct diagonalization of the SYK Hamiltonian to analyze its spectral \
properties. We practice working with large matrices, memoization, function \
compilation, and various optimization techniques.\
\>", "Subtitle",
 CellChangeTimes->{{3.7770142620396852`*^9, 
  3.7770143496386886`*^9}},ExpressionUUID->"5e63d016-1cad-4eac-9c22-\
eef1a37bc86d"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Preliminaries", "Section"]], "Section",
 CellChangeTimes->{{3.77701435419969*^9, 
  3.7770143767906876`*^9}},ExpressionUUID->"60663fdc-62c2-4f45-9293-\
3c0c5a742cac"],

Cell["\<\
We will want to save data, so better have it in the \
Notebook\[CloseCurlyQuote]s directory\
\>", "Text",
 CellChangeTimes->{{3.777014379720714*^9, 
  3.7770144036706877`*^9}},ExpressionUUID->"c9baf84a-9889-494a-a9dc-\
3efc9158eea0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7743549141505384`*^9, 3.7743549186295385`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"9d73f7a0-515c-4291-8c59-8868d52901a2"],

Cell["\<\
Mathematica 12\[CloseCurlyQuote]s compilation to C is sometimes a bit broken \
in Windows\
\>", "Text",
 CellChangeTimes->{{3.777014407607718*^9, 
  3.7770144337506895`*^9}},ExpressionUUID->"d9ffa46d-eff5-4ab0-91f9-\
8a346ceb31e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.774778592869917*^9, 3.7747786033389215`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a2464c78-c19e-402e-852e-f63dc48352fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$CCompiler", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<Generic C Compiler\>\""}], ",", 
     RowBox[{
     "\"\<Compiler\>\"", "\[Rule]", 
      "CCompilerDriver`GenericCCompiler`GenericCCompiler"}], ",", 
     RowBox[{
     "\"\<CompilerInstallation\>\"", "\[Rule]", 
      "\"\<C:\\\\TDM-GCC-64\\\\bin\>\""}], ",", 
     RowBox[{"\"\<CompilerName\>\"", "\[Rule]", "\"\<gcc.exe\>\""}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.774778607308922*^9, 3.774778690411982*^9}, 
   3.7747788619651775`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"4284db04-0fe0-44df-a5ca-2e42a84077a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["KroneckerProduct implementation of Dirac gamma matrices", "Section",
 CellChangeTimes->{{3.7741813669200296`*^9, 3.7741813717550354`*^9}, {
  3.7746102194425287`*^9, 3.7746102214685335`*^9}, {3.777014616389703*^9, 
  3.777014620997702*^9}},ExpressionUUID->"d2044a06-64bc-4e1f-ab04-\
7d53089f9773"],

Cell["\<\
There is a different implementation at the end of this notebook. For the \
purposes of this problem, this more naive implementation is actually better.\
\>", "Text",
 CellChangeTimes->{{3.7770152690766907`*^9, 
  3.777015300484693*^9}},ExpressionUUID->"e2723a58-861d-4c35-a90e-\
54ce1f0e375d"],

Cell[CellGroupData[{

Cell["Recursive definition of Gamma matrices", "Subsection",
 CellChangeTimes->{{3.774610236509547*^9, 3.774610245947509*^9}, {
  3.777014625270735*^9, 
  3.7770146327107325`*^9}},ExpressionUUID->"36f645d8-5231-47ff-b962-\
2712904d9a03"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "\[DoubleStruckOne]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckOne]", "[", "n_Integer", "]"}], ":=", 
   RowBox[{
    RowBox[{"\[DoubleStruckOne]", "[", "n", "]"}], "=", 
    RowBox[{"IdentityMatrix", "[", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"Floor", "[", 
        RowBox[{"n", "/", "2"}], "]"}]], ",", "SparseArray"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.688334601095879*^9, 3.688334651942316*^9}, {
  3.6883351025897493`*^9, 3.688335118725726*^9}, {3.688335339815968*^9, 
  3.6883353427586184`*^9}, {3.688335412917341*^9, 3.6883354242854443`*^9}, {
  3.688335525590406*^9, 3.688335582349256*^9}, {3.6883358390782623`*^9, 
  3.6883358480533*^9}, {3.7701191496834793`*^9, 3.7701191604954753`*^9}, {
  3.7701198511194515`*^9, 3.7701198539834476`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"1ae86c48-897e-4983-8f88-8e01d801fb9e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "\[CapitalGamma]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalGamma]", "[", "2", "]"}], "[", "1", "]"}], "=", 
   RowBox[{"SparseArray", "@", 
    RowBox[{"PauliMatrix", "@", "1"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalGamma]", "[", "2", "]"}], "[", "2", "]"}], "=", 
   RowBox[{"SparseArray", "@", 
    RowBox[{"PauliMatrix", "@", "2"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", 
      RowBox[{"n_Integer", "?", "EvenQ"}], "]"}], "[", "a_Integer", "]"}], "/;", 
    RowBox[{"a", "\[LessEqual]", 
     RowBox[{"n", "-", "2"}]}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], "=", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", 
        RowBox[{"n", "-", "2"}], "]"}], "[", "a", "]"}], ",", 
      RowBox[{"PauliMatrix", "@", "3"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", 
      RowBox[{"n_Integer", "?", "EvenQ"}], "]"}], "[", "a_Integer", "]"}], "/;", 
    RowBox[{"a", "\[Equal]", 
     RowBox[{"n", "-", "1"}]}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], "=", 
    RowBox[{"-", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[DoubleStruckOne]", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ",", 
       RowBox[{"PauliMatrix", "@", "1"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", 
      RowBox[{"n_Integer", "?", "EvenQ"}], "]"}], "[", "a_Integer", "]"}], "/;", 
    RowBox[{"a", "\[Equal]", "n"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], "=", 
    RowBox[{"-", 
     RowBox[{"KroneckerProduct", "[", 
      RowBox[{
       RowBox[{"\[DoubleStruckOne]", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ",", 
       RowBox[{"PauliMatrix", "@", "2"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", 
      RowBox[{"n_Integer", "?", "OddQ"}], "]"}], "[", "a_Integer", "]"}], "/;", 
    RowBox[{"a", "<", "n"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], "=", 
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", 
      RowBox[{"n", "-", "1"}], "]"}], "[", "a", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", 
      RowBox[{"n_Integer", "?", "OddQ"}], "]"}], "[", "a_Integer", "]"}], "/;", 
    RowBox[{"a", "\[Equal]", "n"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], "=", 
    RowBox[{
     SuperscriptBox["\[ImaginaryI]", 
      FractionBox[
       RowBox[{"n", "-", "1"}], "2"]], " ", 
     RowBox[{"Dot", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", 
          RowBox[{"n", "-", "1"}], "]"}], "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6883334589895353`*^9, 3.688333474771318*^9}, 
   3.6883335124235477`*^9, {3.688333556224598*^9, 3.688333741200082*^9}, {
   3.6883337779448357`*^9, 3.688333887016243*^9}, {3.68833396220844*^9, 
   3.688333980471264*^9}, {3.688334562223674*^9, 3.688334573542512*^9}, {
   3.688334729630495*^9, 3.68833474123827*^9}, {3.6883349211275454`*^9, 
   3.6883349233101587`*^9}, {3.688334996798181*^9, 3.688335056262494*^9}, {
   3.6883351001201878`*^9, 3.688335147789673*^9}, {3.688335322454672*^9, 
   3.688335334183578*^9}, {3.688335375526884*^9, 3.688335392178022*^9}, {
   3.6883354517185383`*^9, 3.6883354582134323`*^9}, {3.688335746867311*^9, 
   3.688335765998025*^9}, {3.6883359240861473`*^9, 3.688335975182886*^9}, {
   3.68833609942206*^9, 3.688336104349493*^9}, {3.7701191703684764`*^9, 
   3.7701192833914747`*^9}, {3.770119619823243*^9, 3.770119703629829*^9}, {
   3.770119753997826*^9, 3.770119769309826*^9}, {3.7701200658706512`*^9, 
   3.7701200665106516`*^9}, {3.77012009986266*^9, 3.7701201226686525`*^9}, {
   3.770120240959305*^9, 3.7701202494373035`*^9}, {3.770120385446847*^9, 
   3.7701204105728474`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"7a77583f-3f46-432a-b9b5-024f3cb01ea2"],

Cell[CellGroupData[{

Cell["Check commutation relations", "Subsubsection",
 CellChangeTimes->{{3.774610226106505*^9, 
  3.774610231340502*^9}},ExpressionUUID->"3c9f5345-1549-4709-ba56-\
8d62af2e7116"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "i", "]"}], ".", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "j", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "j", "]"}], ".", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "i", "]"}]}]}], 
      "\[Equal]", 
      RowBox[{"2", 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"i", ",", "j"}], "]"}], 
       RowBox[{"\[DoubleStruckOne]", "[", "n", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "n"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.697164833564404*^9, 3.6971649801140623`*^9}, {
  3.770119317280476*^9, 3.7701193349694743`*^9}, {3.770119778591827*^9, 
  3.770119793473378*^9}, {3.7701198607184477`*^9, 3.7701199194545307`*^9}, {
  3.770120071184657*^9, 3.770120078749653*^9}, {3.770120256607304*^9, 
  3.770120256653305*^9}, {3.77012040143685*^9, 3.7701204232468476`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"83b120b5-92a7-4318-8bc8-90226f9d6cb6"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.69716490478409*^9, 3.6971649821703672`*^9}, 
   3.697172291630641*^9, 3.6971724886521482`*^9, 3.69717276636171*^9, 
   3.697229844207767*^9, 3.697230266637361*^9, 3.697231285957897*^9, 
   3.697231367349205*^9, 3.697232385964863*^9, 3.6972328360061703`*^9, 
   3.6972334388994503`*^9, 3.6972373264632463`*^9, {3.697240166065744*^9, 
   3.697240180072813*^9}, 3.697240364733605*^9, {3.697249139908813*^9, 
   3.69724916750249*^9}, 3.6972495955871572`*^9, 3.697249666004722*^9, 
   3.6974125881463614`*^9, 3.697510501763171*^9, 3.697511239972961*^9, {
   3.6975199727371693`*^9, 3.697519988971203*^9}, 3.69752125467649*^9, 
   3.6975298091703186`*^9, 3.697531666414787*^9, 3.6977494031513557`*^9, 
   3.697750066868318*^9, 3.697750121034515*^9, 3.697750440911481*^9, 
   3.697750493610681*^9, 3.6977506657403507`*^9, 3.697751305396433*^9, 
   3.6977539700677433`*^9, 3.697755467949174*^9, 3.697769106568337*^9, 
   3.697852518152404*^9, 3.697852676890718*^9, {3.697852769713846*^9, 
   3.69785279534233*^9}, 3.697852948874928*^9, {3.697854828979073*^9, 
   3.697854858841174*^9}, 3.697922141021935*^9, 3.6979308526432333`*^9, 
   3.697931952414686*^9, 3.697937704342104*^9, 3.697938142447056*^9, 
   3.697938836409835*^9, 3.697942097885775*^9, 3.697944454009883*^9, 
   3.6979452514906397`*^9, 3.697945573980688*^9, 3.698009446989613*^9, 
   3.698011049116207*^9, 3.698033398564436*^9, 3.698035592897196*^9, 
   3.698098954405211*^9, 3.698103553647838*^9, {3.6981038015323477`*^9, 
   3.6981038056939774`*^9}, 3.698123490660983*^9, 3.698204587015677*^9, 
   3.698207848212618*^9, 3.6982078979707203`*^9, 3.698357278986821*^9, 
   3.698360670755072*^9, 3.698361945727047*^9, 3.69836235374809*^9, 
   3.6983646151155167`*^9, {3.698365124642248*^9, 3.698365152358053*^9}, 
   3.6983652687532177`*^9, 3.698369980369801*^9, 3.698370059730554*^9, 
   3.698440627963516*^9, 3.698447655105554*^9, 3.698553391296356*^9, 
   3.698641244996687*^9, 3.698642810171537*^9, 3.698977400909627*^9, 
   3.698977923983203*^9, 3.7216485280454903`*^9, 3.721651305090769*^9, 
   3.7217145830696526`*^9, 3.721716323950529*^9, 3.7217307486236367`*^9, 
   3.721906255382742*^9, 3.721971675578227*^9, 3.722164749270523*^9, 
   3.7221718515354004`*^9, 3.722172084572548*^9, 3.7226826222109246`*^9, 
   3.7279304459276447`*^9, 3.7279932123061805`*^9, 3.731911487311075*^9, 
   3.731926023116619*^9, 3.7320001033459697`*^9, 3.732012538548157*^9, 
   3.73225937576191*^9, 3.732264820489915*^9, 3.7324297872587986`*^9, 
   3.732432347106765*^9, 3.7324334656585903`*^9, 3.73243357730158*^9, 
   3.7324336827720118`*^9, 3.7324349104594316`*^9, 3.732439631909133*^9, 
   3.7324403566583347`*^9, 3.73244340088116*^9, 3.732443505945067*^9, 
   3.732524945940613*^9, 3.7326152207928596`*^9, 3.732647129447178*^9, 
   3.732683698148796*^9, 3.732697454786936*^9, 3.732715311436591*^9, 
   3.73275863340905*^9, 3.732782604623102*^9, 3.732874643080162*^9, 
   3.732905822763811*^9, 3.7331645658189077`*^9, 3.734497278450241*^9, 
   3.734533661633026*^9, 3.735921307067354*^9, 3.7359341908065968`*^9, 
   3.7518688229211483`*^9, 3.765534491048552*^9, 3.765794714508608*^9, 
   3.7664112492902665`*^9, 3.7701193399814777`*^9, {3.7701197888948507`*^9, 
   3.770119793878379*^9}, {3.7701198562944474`*^9, 3.770119919661531*^9}, {
   3.7701200749736576`*^9, 3.770120124997653*^9}, {3.770120245924306*^9, 
   3.770120257095306*^9}, {3.770120398065852*^9, 3.7701204278888474`*^9}, 
   3.7741775862573385`*^9, 3.774184293348422*^9, 3.774258238039913*^9, 
   3.774349155027931*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"1aa3755d-a2b8-4b7f-8b64-ee0f84c6bbf5"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Memoizing Gamma matrix products can save time", "Subsection",
 CellChangeTimes->{{3.7770146429827332`*^9, 
  3.777014676773702*^9}},ExpressionUUID->"f08c7519-51f1-4da4-96ff-\
dd8d7db14c57"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", "n_Integer", "]"}], "[", 
     RowBox[{"a_Integer", ",", "b_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "a", "<", "b", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", 
     RowBox[{"a", ",", "b"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], ".", 
     RowBox[{
      RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "b", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", "n_Integer", "]"}], "[", 
     RowBox[{
     "a_Integer", ",", "b_Integer", ",", "c_Integer", ",", "d_Integer"}], 
     "]"}], "/;", 
    RowBox[{
    "1", "\[LessEqual]", "a", "<", "b", "<", "c", "<", "d", "\[LessEqual]", 
     "n"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", 
      RowBox[{"a", ",", "b"}], "]"}], ".", 
     RowBox[{
      RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", 
      RowBox[{"c", ",", "d"}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7741790313611364`*^9, 3.7741790982427616`*^9}, {
  3.7741793669597654`*^9, 3.774179398211853*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"1fd11f44-9733-40c0-82ae-5218ecbae9d6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Definition of the SYK Hamiltonian", "Section",
 CellChangeTimes->{{3.7746102590225163`*^9, 3.774610260475504*^9}, {
  3.7770146841017036`*^9, 
  3.7770146893017025`*^9}},ExpressionUUID->"3326fcb1-8cc1-4982-9f16-\
678dea9a82e4"],

Cell[CellGroupData[{

Cell["The Hamiltonian and random couplings", "Subsection",
 CellChangeTimes->{{3.7770153153006587`*^9, 
  3.7770153231876574`*^9}},ExpressionUUID->"e4ce44a5-0c5f-4e61-a85b-\
b1ba8164b47d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Coupling", "[", "n_Integer", "]"}], ":=", 
   RowBox[{"RandomVariate", "@", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"0", ",", 
      SqrtBox[
       FractionBox["6", 
        SuperscriptBox["n", "3"]]]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7741776758553967`*^9, 3.774177728118479*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"fa128d58-41a3-4666-8920-78343b80f5a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "H"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "[", "n_Integer", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Coupling", "@", "n"}], " ", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", 
       RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"l", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"k", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.774180127357785*^9, 3.7741801560779395`*^9}, {
  3.774258243296979*^9, 3.7742582574279757`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"4caec03b-2077-4ae2-a57a-6d3da8d9540a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Direct diagonalization (including matrix deflation)", "Subsection",
 CellChangeTimes->{{3.774610274941512*^9, 3.7746102767325015`*^9}, {
   3.777015012645463*^9, 3.777015028052463*^9}, 
   3.777015331236658*^9},ExpressionUUID->"c9ad6da9-0238-46f1-86cb-\
dbed9d90a730"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "P"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", "n_Integer", "]"}], ":=", 
   RowBox[{
    RowBox[{"P", "[", "n", "]"}], "=", 
    RowBox[{"Sort", "/@", 
     RowBox[{"ConnectedComponents", "@", 
      RowBox[{"AdjacencyGraph", "@", 
       RowBox[{"Unitize", "@", 
        RowBox[{"H", "[", "n", "]"}]}]}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.774177851465844*^9, 3.774177880627857*^9}, {
  3.774177987956462*^9, 3.7741780328552294`*^9}, {3.7741784849989767`*^9, 
  3.774178515236001*^9}, {3.774178583269699*^9, 3.774178588611699*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"b746cefa-7b8b-4e44-9b54-19fc23729291"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "Spectrum"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Spectrum", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"Sort", "@", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Eigenvalues", "/@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"H", "[", "n", "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"#", ",", "#"}], "\[RightDoubleBracket]"}], "&"}], "/@", 
       RowBox[{"P", "[", "n", "]"}]}], ")"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.774353309384817*^9, 3.7743533246498165`*^9}, {
  3.774353373130818*^9, 3.774353431657335*^9}, {3.7743535020753336`*^9, 
  3.7743535026973352`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"76cd20cf-8d80-4059-9e0b-70d6f8ed9b36"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Timings", "Subsection",
 CellChangeTimes->{{3.7746102647505093`*^9, 
  3.774610265403503*^9}},ExpressionUUID->"5052dcb9-f46d-4f5d-a793-\
beb7b4450d0a"],

Cell[CellGroupData[{

Cell["Hamiltonian construction", "Subsubsection",
 CellChangeTimes->{{3.7770151612536592`*^9, 
  3.7770151658286624`*^9}},ExpressionUUID->"90ba2a21-e14e-47f6-93aa-\
3bd0075125e9"],

Cell[TextData[{
 "These timings were run on different days with various other tasks in the \
background. Though not the best of settings, they still show construction \
time for the SYK Hamiltonian is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"~", 
     SuperscriptBox["10", 
      RowBox[{"-", "5"}]]}], " ", 
    SuperscriptBox["2", "n"], "s"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1a012a52-c61b-4207-bb87-c1af090218b4"]
}], "Text",
 CellChangeTimes->{{3.7770153853806562`*^9, 
  3.7770155232527876`*^9}},ExpressionUUID->"ed9aa7a9-bc4c-449e-839a-\
ce50ae3ff854"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "@", 
  RowBox[{"H", "[", "20", "]"}]}]], "Input",
 CellChangeTimes->{3.7741826250430837`*^9, 3.774353276794799*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"997f2288-5c9e-4ef1-9ccc-10896a3ba2a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0608121`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["262144", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1024", ",", "1024"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["262144", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1024", ",", "1024"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.25`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.03571888071868757`"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "385"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.05290851986139727`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.04554647253674589`", " ", "\[ImaginaryI]"}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "641"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.04819241522491316`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.010873416938485585`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "321"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.006722816170080477`"}], "-", 
                    
                    RowBox[{"0.0026949827619467646`", " ", 
                    "\[ImaginaryI]"}]}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local6"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 6301424, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8265514358795931086377305468918913317729052096826047595136, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local6", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<262144>, {1024, 1024}]"& )],
    False,
    BoxID -> 8265514358795931086377305468918913317729052096826047595136,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.774182626313039*^9, {3.7743532804278*^9, 3.774353283361801*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"17ed9499-f6ca-4388-a5d0-74556d59609a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "@", 
  RowBox[{"H", "[", "22", "]"}]}]], "Input",
 CellChangeTimes->{3.7770147329677334`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"34939057-4c3d-4e3a-a5d7-5c0ed863b62b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.0842424`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["790528", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2048", ",", "2048"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["790528", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2048", ",", "2048"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.1884765625`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.06940645219588812`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "769"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.03492044489573716`"}], "-", 
                    RowBox[{"0.0323023077247642`", " ", "\[ImaginaryI]"}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1281"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.013463870899276975`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.038056200615668466`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "641"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.0027626955644866873`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.03729758894935211`", " ", "\[ImaginaryI]"}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local6"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 18991856, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8271457970941814219188814979073750758648880972647898995464, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local6", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<790528>, {2048, 2048}]"& )],
    False,
    BoxID -> 8271457970941814219188814979073750758648880972647898995464,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7770147375517015`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"6109be97-fbb9-49ef-bfe5-af2bd55c45a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "@", 
  RowBox[{"H", "[", "24", "]"}]}]], "Input",
 CellChangeTimes->{{3.774182515763591*^9, 3.7741825200695896`*^9}, 
   3.7741826220200434`*^9, 
   3.7743547551905394`*^9},ExpressionUUID->"edf77c7c-1d5c-4f32-8bf4-\
db4f30ba747e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14.1126916`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2301952", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"4096", ",", "4096"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2301952", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"4096", ",", "4096"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.13720703125`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.015405374863530006`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1537"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.014480276225211152`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.02037556427630505`", " ", "\[ImaginaryI]"}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2561"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.019794710970263633`"}], "-", 
                    RowBox[{"0.015143110010904447`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1281"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.024700980237708295`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.021733856840549494`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local8"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 55284464, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8265131352024098734893816990031016524771604419273910777856, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local8", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<2301952>, {4096, 4096}]"& )],
    False,
    BoxID -> 8265131352024098734893816990031016524771604419273910777856,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.7741825172435913`*^9, 3.774182534424589*^9}},
 CellLabel->
  "Out[223]=",ExpressionUUID->"2ec00bbc-28e9-4117-83cd-fccbd20c21d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "@", 
  RowBox[{"H", "[", "26", "]"}]}]], "Input",
 CellChangeTimes->{3.777014738037734*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"41b120fa-0739-42b7-bd8c-050ea7b562db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"65.1826217`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6504448", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"8192", ",", "8192"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6504448", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"8192", ",", "8192"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.096923828125`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.02586260788200343`"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3073"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.022309400116722587`"}], "+", 
                    RowBox[{"0.009173871765400896`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5121"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.03205584558770469`", "\[VeryThinSpace]"}], "+", 
                    
                    RowBox[{"0.0011258342241791785`", " ", 
                    "\[ImaginaryI]"}]}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2561"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.0260104373616657`"}], "-", 
                    RowBox[{"0.008977226039390062`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local6"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 156173080, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8271457970941814219188814979073750758667327716722083703336, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local6", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<6504448>, {8192, 8192}]"& )],
    False,
    BoxID -> 8271457970941814219188814979073750758667327716722083703336,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7770148035352173`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"2d82950c-9e7a-4ffe-9108-1cc05163be39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "@", 
  RowBox[{"H", "[", "28", "]"}]}]], "Input",
 CellChangeTimes->{{3.774178965815629*^9, 3.7741789913502197`*^9}, {
   3.7741791452861633`*^9, 3.7741791606633005`*^9}, 3.7741794826655564`*^9, {
   3.774179858975276*^9, 3.774179865442298*^9}, {3.774179982207741*^9, 
   3.7741799824137716`*^9}, {3.774180109088791*^9, 3.774180113376739*^9}, {
   3.774180172511591*^9, 3.774180182109764*^9}, {3.774180223494034*^9, 
   3.774180223675001*^9}, 
   3.7743547568375397`*^9},ExpressionUUID->"8158ac2a-78ed-4a74-a512-\
1a8dc660b169"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"141.9368386`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["17907712", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"16384", ",", "16384"}], "}"}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["17907712", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"16384", ",", "16384"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.06671142578125`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.028433707349248376`"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "6145"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.01221649973117936`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.012730835503004462`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "10241"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.02190869074301885`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.01669140799899286`", " ", "\[ImaginaryI]"}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5121"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.0038600999879208567`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.024972078139870915`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local8"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 429916952, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8265131352024098734893816990031016524697817442967545388176, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local8", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<17907712>, {16384, 16384}]"& )],
    False,
    BoxID -> 8265131352024098734893816990031016524697817442967545388176,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.7741789785036163`*^9, 3.774179007048218*^9}, {
   3.774179128895111*^9, 3.7741791706292405`*^9}, {3.774179432498808*^9, 
   3.7741794434328055`*^9}, 3.7741795121025066`*^9, 3.774179863579238*^9, 
   3.7741798956042385`*^9, {3.7741801035057387`*^9, 3.77418011514574*^9}, {
   3.7741801653519373`*^9, 3.774180214522729*^9}, 3.774180399028966*^9, 
   3.7741807127919655`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"7578781f-20bd-470c-a465-b8df6d04bd39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "@", 
  RowBox[{"H", "[", "30", "]"}]}]], "Input",
 CellChangeTimes->{{3.7746122753996906`*^9, 3.7746122771176834`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"9588f5ac-425b-48af-8978-629c0f385593"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"304.6240726`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["48201728", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"32768", ",", "32768"}], "}"}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["48201728", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"32768", ",", "32768"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.044891357421875`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.019501280279173375`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "12289"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.0038106584273913105`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.016270888086243294`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "20481"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.014944905738577924`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.029123808410209825`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "10241"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.01364361635776644`"}], "-", 
                    RowBox[{"0.010936201128519205`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local6"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 1157104408, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8266238312152570837302933565086659863340855666751744102232, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local6", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<48201728>, {32768, 32768}]"& )],
    False,
    BoxID -> 8266238312152570837302933565086659863340855666751744102232,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7746134386660905`*^9, 3.7746736724228144`*^9, 
  3.7746745337153096`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"897c9ccd-cdeb-4b9e-9c07-e64cf460f7e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConstructionTimingData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "1.0608121`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "4.0842424`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "14.1126916`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26", ",", "65.1826217`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "141.9368386`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "304.6240726`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7770147553047023`*^9, 3.777014814567217*^9}, {
  3.777015364469685*^9, 3.777015365748684*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"1f5d9a74-854e-4832-be43-f0ccb1965d19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "@", "ConstructionTimingData"}]], "Input",
 CellChangeTimes->{{3.777014818055216*^9, 3.7770148245192223`*^9}, {
   3.777014912663464*^9, 3.777014914277499*^9}, 3.7770153690776606`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"a6ba0b3e-7716-40d1-b7af-63a501425701"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{20., 0.05903474687007867}, {22., 1.407136252115992}, {24., 
      2.6470745060000938`}, {26., 4.177192895061392}, {28., 
      4.955382160057474}, {30., 5.719078467541885}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{19.791666666666668`, -0.3838957951896625},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{19.791666666666668`, 30.}, {-0.3838957951896625, 
   5.719078467541885}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.313220387090301, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.824046010856292, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.777014822044219*^9, 3.7770148247512546`*^9}, 
   3.7770149148934975`*^9, 3.777015369558689*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"9615f3ff-b532-4602-8a11-43750c7464ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConstructionTimingFit", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "@", "#"}], ",", 
        RowBox[{"Log", "@", 
         RowBox[{"Last", "@", "#"}]}]}], "}"}], "&"}], "/@", 
     "ConstructionTimingData"}], ",", "n", ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777014845943239*^9, 3.7770149612224665`*^9}, {
   3.777015359108658*^9, 3.7770153602606564`*^9}, {3.7770154728366895`*^9, 
   3.7770154816406593`*^9}, 
   3.777021386857437*^9},ExpressionUUID->"5e37ff64-e3e6-48ec-b4af-\
6aea513a5e6e"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "11.294567322622447`"}], "+", 
       RowBox[{"0.5782153530892107`", " ", "n"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-11.294567322622447`, 
     0.5782153530892107}, {{$CellContext`n}, {1, $CellContext`n}}, {0, 0}}, {{
    1., 1., 1., 1., 1., 
    1.}}, {{20, 0.05903474687007867}, {22, 1.407136252115992}, {
     24, 2.6470745060000938`}, {26, 4.177192895061392}, {
     28, 4.955382160057474}, {30, 5.719078467541885}}, {{1., 20.}, {1., 
    22.}, {1., 24.}, {1., 26.}, {1., 28.}, {1., 30.}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`n}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7770148681584234`*^9, 3.7770149614064646`*^9}, 
   3.7770154819686575`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"8f03cb18-2c87-4776-89a6-452088bde1cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "@", 
  RowBox[{
  "ConstructionTimingFit", "[", "\"\<BestFitParameters\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.777015484421689*^9, 3.7770154879906836`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"d05118e7-c3a4-404b-9401-2d113a9715bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000012440325285755848`", ",", "1.7828538253254387`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7770154883896914`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"a4c78afa-1e99-425d-8d5a-a939b145c03f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hamiltonian diagonalization", "Subsubsection",
 CellChangeTimes->{{3.7770151750446587`*^9, 
  3.7770151785966945`*^9}},ExpressionUUID->"e00b4a12-d083-4cc0-bb3a-\
d67c0f525074"],

Cell["\<\
These timings should be run twice, since the first time there is an overhead \
in the pre-computation of the matrix deflation splitting.\
\>", "Text",
 CellChangeTimes->{{3.7770159951223564`*^9, 
  3.777016034322357*^9}},ExpressionUUID->"642ffa29-04de-43ec-b92d-\
99e5ff5f7a41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "@", "n"}]], "Input",
 CellChangeTimes->{{3.7770155869513283`*^9, 3.7770155880682945`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"5e07705c-c8a2-410e-a8be-68295d560f4b"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`n, StandardForm],
  ImageSizeCache->{18., {0., 10.}}]], "Output",
 CellChangeTimes->{3.7770155883112993`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"82b3e69a-30ab-4a43-b446-32222f8ce3c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiagonalizationTimingData", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"First", "@", 
       RowBox[{"AbsoluteTiming", "@", 
        RowBox[{"Spectrum", "@", "n"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "20", ",", "26", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777015556791336*^9, 3.7770155825002975`*^9}, {
  3.777015926020356*^9, 3.7770159364023876`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"bbc05f8e-9d3a-4388-a15a-7a6dc771e801"],

Cell[BoxData[
 TemplateBox[{
  "Eigenvalues","arh",
   "\"Because finding \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"4096\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigenvalues\\\"}]\\).\"",2,45,3,24307630294765208389,
   "Local6"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777015832065311*^9, 3.7770160980893574`*^9},
 CellLabel->
  "During evaluation of \
In[45]:=",ExpressionUUID->"fcda6f2d-e7f0-4283-b233-abc2cdea3c24"],

Cell[BoxData[
 TemplateBox[{
  "Eigenvalues","arh",
   "\"Because finding \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"4096\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigenvalues\\\"}]\\).\"",2,45,4,24307630294765208389,
   "Local6"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.777015832065311*^9, 3.7770161018373547`*^9},
 CellLabel->
  "During evaluation of \
In[45]:=",ExpressionUUID->"96b0c19b-c0b8-4d17-9e5b-778f73629e35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"20", ",", "2.4016583`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "7.8644232`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "30.1553121`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "126.0036556`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.777015839699315*^9, 3.777016105622387*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"310ca902-0487-45cf-99cf-c44db3462442"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "@", "DiagonalizationTimingData"}]], "Input",
 CellChangeTimes->{{3.777015909877387*^9, 3.7770159421643553`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"749826ba-2763-455b-83f4-a86a2ec9409b"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{20., 0.876159457085427}, {22., 2.0623491962493907`}, {24., 
      3.4063610967084523`}, {26., 4.836310919229031}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{19.875000000000004`, 0.5662551311948585},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{19.875000000000004`, 26.}, {0.5662551311948585, 
   4.836310919229031}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.313220387090301, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.777015913764387*^9, 3.7770159174973555`*^9}, 
   3.7770161056953573`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"82454546-b240-4429-96d2-82be17c2808d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiagonalizationTimingFit", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "@", "#"}], ",", 
        RowBox[{"Log", "@", 
         RowBox[{"Last", "@", "#"}]}]}], "}"}], "&"}], "/@", 
     RowBox[{"DiagonalizationTimingData", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"-", "3"}], ";;"}], "\[RightDoubleBracket]"}]}], ",", "n", ",",
     "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7770201249183865`*^9, 3.7770201541863904`*^9}, {
  3.7770201985853558`*^9, 3.7770202016543574`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"5541f0fc-84c8-4768-b43d-35af2f3c03d1"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "13.208763267149182`"}], "+", 
       RowBox[{"0.6934904307449224`", " ", "n"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-13.208763267149182`, 
     0.6934904307449224}, {{$CellContext`n}, {1, $CellContext`n}}, {0, 0}}, {{
    1., 1., 1.}}, {{22, 2.0623491962493907`}, {24, 3.4063610967084523`}, {
     26, 4.836310919229031}}, {{1., 22.}, {1., 24.}, {1., 26.}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`n}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.777020133086358*^9, 3.7770201566653557`*^9}, 
   3.7770202018743963`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"2b977f86-2832-45f1-a1b5-153c6bb60984"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "@", 
  RowBox[{
  "DiagonalizationTimingFit", "[", "\"\<BestFitParameters\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.777020171480355*^9, 3.7770202251414003`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"0cf213b1-a4d6-4213-930b-81feb7c495c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.8344547361088942`*^-6", ",", "2.0006866182041256`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.777020178525396*^9, 3.7770202252794323`*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"b9c71cc1-728e-47c3-b8e5-dfe71d3982ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SaveData", "[", "30", "]"}], "[", "3", "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7746745694800563`*^9, 3.774674595019102*^9}, 
   3.774675577697153*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"ea3cc2c8-81b2-49fd-b385-7bf538485132"],

Cell[BoxData[
 TemplateBox[{
  "Eigenvalues","arh",
   "\"Because finding \\!\\(\\*RowBox[{\\\"16384\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"16384\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigenvalues\\\"}]\\).\"",2,27,3,24292291096215269648,
   "Local6"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.774675201474551*^9, 3.774676188683029*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"12141a6b-bead-4471-ba43-bd9fdc0e59f3"],

Cell[BoxData[
 TemplateBox[{
  "Eigenvalues","arh",
   "\"Because finding \\!\\(\\*RowBox[{\\\"16384\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"16384\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigenvalues\\\"}]\\).\"",2,27,4,24292291096215269648,
   "Local6"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.774675201474551*^9, 3.7746763658480296`*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"7a712cde-4223-4694-9b66-85c0274eeaf6"],

Cell[BoxData[
 TemplateBox[{
  "Eigenvalues","arh",
   "\"Because finding \\!\\(\\*RowBox[{\\\"16384\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"16384\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigenvalues\\\"}]\\).\"",2,27,5,24292291096215269648,
   "Local6"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.774675201474551*^9, 3.7746771392983694`*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"041fd85c-5874-4431-ab65-6c7aac4105d9"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Eigenvalues\\\", \\\"::\
\\\", \\\"arh\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,27,6,24292291096215269648,"Local6"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.774675201474551*^9, 3.77467713930737*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"3df15ee0-4b80-4d66-a7b5-04b1f6ab5230"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2859.0527192`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.774675555940135*^9, 3.7746784414930735`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"a681db3f-59ff-46c4-8bb1-8d1b6e0ea897"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data generation and loading", "Section",
 CellChangeTimes->{{3.7743781545564375`*^9, 3.7743781567707434`*^9}, {
  3.7746100945734644`*^9, 3.774610095839497*^9}, {3.7770150384855137`*^9, 
  3.7770150518775187`*^9}, {3.777015658147295*^9, 
  3.7770156769952965`*^9}},ExpressionUUID->"afb6e1d3-0595-41c0-85a9-\
ebe362b026f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SaveData", "[", "n_Integer", "]"}], "[", "k_Integer", "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"filename", "=", 
       RowBox[{"FileNameJoin", "@", 
        RowBox[{"{", 
         RowBox[{"\"\<SYKdata\>\"", ",", 
          RowBox[{"\"\<n\>\"", "<>", 
           RowBox[{"ToString", "@", "n"}], "<>", "\"\<.evs\>\""}]}], 
         "}"}]}]}], ",", "stream"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stream", "=", 
      RowBox[{"OpenAppend", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"BinaryWrite", "[", 
        RowBox[{"stream", ",", 
         RowBox[{"Spectrum", "[", "n", "]"}], ",", "\"\<Real64\>\""}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "k"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "@", "stream"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.73251870244139*^9, 3.732518836736203*^9}, {
   3.7325189189219327`*^9, 3.732518920383963*^9}, {3.7325236113804145`*^9, 
   3.7325236128984857`*^9}, {3.77437816291753*^9, 3.774378175308443*^9}, {
   3.774378206922809*^9, 3.7743782080088315`*^9}, {3.7743783716924443`*^9, 
   3.7743783725035458`*^9}, 
   3.7770150583585157`*^9},ExpressionUUID->"8092d336-384c-43bd-b123-\
40dad2b5077f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountData", "[", "n_Integer", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"filename", "=", 
       RowBox[{"\"\<SYKdata\\\\n\>\"", "<>", 
        RowBox[{"ToString", "@", "n"}], "<>", "\"\<.evs\>\""}]}], ",", 
      "stream", ",", "res"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stream", "=", 
      RowBox[{"OpenRead", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"-", 
         RowBox[{"Floor", "[", 
          RowBox[{"n", "/", "2"}], "]"}]}]], 
       RowBox[{"Length", "@", 
        RowBox[{"BinaryReadList", "[", 
         RowBox[{"stream", ",", "\"\<Real64\>\""}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Close", "@", "stream"}], ";", "\[IndentingNewLine]", "res"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7743784263696094`*^9, 3.77437845069151*^9}, {
   3.77460992134735*^9, 3.7746099247359114`*^9}, {3.7746100109936543`*^9, 
   3.774610072081009*^9}, 
   3.7770150653525186`*^9},ExpressionUUID->"452e25c1-e1bb-4e4f-95fe-\
a4dbf422c6ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LoadData", "[", "n_Integer", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"filename", "=", 
       RowBox[{"\"\<SYKdata\\\\n\>\"", "<>", 
        RowBox[{"ToString", "@", "n"}], "<>", "\"\<.evs\>\""}]}], ",", 
      "stream", ",", "data"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stream", "=", 
      RowBox[{"OpenRead", "[", 
       RowBox[{"filename", ",", 
        RowBox[{"BinaryFormat", "\[Rule]", "True"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"data", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"BinaryReadList", "[", 
         RowBox[{"stream", ",", "\"\<Real64\>\""}], "]"}], ",", 
        SuperscriptBox["2", 
         RowBox[{"Floor", "[", 
          RowBox[{"n", "/", "2"}], "]"}]]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Close", "@", "stream"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SpectrumData", "[", "n", "]"}], "=", "data"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7746101024514804`*^9, 3.774610153631449*^9}, 
   3.777015077223591*^9},ExpressionUUID->"f36a3e75-4f6d-4ff2-ad40-\
747cc12b3a0b"],

Cell[CellGroupData[{

Cell["Generate some data for later use", "Subsubsection",
 CellChangeTimes->{{3.7770150879255657`*^9, 3.777015100933564*^9}, {
  3.777015693043297*^9, 
  3.777015693731295*^9}},ExpressionUUID->"465c5cbc-cab7-4599-a6aa-\
fff18f46498a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "@", 
  RowBox[{"{", 
   RowBox[{"n", ",", "r"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7743536662043643`*^9, 3.774353683096365*^9}, {
   3.7743540431284113`*^9, 3.7743540446004114`*^9}, 3.774378581530897*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"9dab88a9-b439-4f6f-84a6-bb21ff33fe5b"],

Cell[BoxData[
 DynamicBox[ToBoxes[{$CellContext`n, $CellContext`r}, StandardForm],
  ImageSizeCache->{61., {3., 10.}}]], "Output",
 CellChangeTimes->{{3.774353667588363*^9, 3.7743536833893642`*^9}, 
   3.7743537211263647`*^9, 3.7743540706614103`*^9, 3.7743785825579343`*^9, 
   3.774781711793516*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"5b67343f-bc03-4cd7-ace3-38afccfdf6a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"SaveData", "[", "n", "]"}], "@", 
    RowBox[{"Ceiling", "[", 
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"-", 
        RowBox[{"Floor", "[", 
         RowBox[{"n", "/", "2"}], "]"}]}]], 
      SuperscriptBox["2", "18"]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7743784953801746`*^9, 3.774378563507943*^9}, {
  3.774761636605936*^9, 3.7747616409669647`*^9}, {3.774780199384441*^9, 
  3.774780200935534*^9}, {3.774850964160796*^9, 3.7748509642067566`*^9}, {
  3.774942101661416*^9, 
  3.7749421050973897`*^9}},ExpressionUUID->"5e72edca-eb9d-4231-8092-\
31c0803587ae"],

Cell[BoxData[
 TemplateBox[{
  "Eigenvalues","arh",
   "\"Because finding \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"4096\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigenvalues\\\"}]\\).\"",2,86,29,24292979485890005666,
   "Local6"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7743832104850693`*^9, 3.7746800269570737`*^9, 
  3.7747644216217084`*^9, 3.7747817131585484`*^9, 3.774784494630089*^9},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"1632d0f4-90ed-458d-89e9-2116cfd34544"],

Cell[BoxData[
 TemplateBox[{
  "Eigenvalues","arh",
   "\"Because finding \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"4096\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigenvalues\\\"}]\\).\"",2,86,30,24292979485890005666,
   "Local6"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7743832104850693`*^9, 3.7746800269570737`*^9, 
  3.7747644216217084`*^9, 3.7747817131585484`*^9, 3.7747845135128183`*^9},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"4835250a-a432-4fb8-afef-c818edb73e5e"],

Cell[BoxData[
 TemplateBox[{
  "Eigenvalues","arh",
   "\"Because finding \\!\\(\\*RowBox[{\\\"4096\\\"}]\\) out of the \
\\!\\(\\*RowBox[{\\\"4096\\\"}]\\) eigenvalues and/or eigenvectors is likely \
to be faster with dense matrix methods, the sparse input matrix will be \
converted. If fewer eigenvalues and/or eigenvectors would be sufficient, \
consider restricting this number using the second argument to \
\\!\\(\\*RowBox[{\\\"Eigenvalues\\\"}]\\).\"",2,86,31,24292979485890005666,
   "Local6"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7743832104850693`*^9, 3.7746800269570737`*^9, 
  3.7747644216217084`*^9, 3.7747817131585484`*^9, 3.7747845323339653`*^9},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"c7be7388-b63c-4b62-888a-4e2e7c5ce8c2"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Eigenvalues\\\", \\\"::\
\\\", \\\"arh\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,86,32,24292979485890005666,"Local6"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7743832104850693`*^9, 3.7746800269570737`*^9, 
  3.7747644216217084`*^9, 3.7747817131585484`*^9, 3.774784532448966*^9},
 CellLabel->
  "During evaluation of \
In[86]:=",ExpressionUUID->"2c5cfab3-aa0b-48f1-9a44-92204ec0d917"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountData", "/@", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "30"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7746099983246408`*^9, 3.774610004364648*^9}, {
  3.7746100747029934`*^9, 3.774610076828896*^9}, {3.774761623011926*^9, 
  3.7747616230619183`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"99248e7f-a357-4ed0-b5f3-237ef7c44269"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8192", ",", "8192", ",", "4096", ",", "4096", ",", "2048", ",", "2048", 
   ",", "1024", ",", "1024", ",", "512", ",", "512", ",", "256", ",", "256", 
   ",", "128", ",", "128", ",", "64", ",", "64", ",", "32", ",", "32", ",", 
   "16", ",", "16", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7746100772298927`*^9, {3.7747616121449194`*^9, 3.774761624013925*^9}, 
   3.7747767703491497`*^9, 3.774850075524123*^9, 3.774850954278759*^9, {
   3.774937379641653*^9, 3.7749373841496854`*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"1e2c1f85-a3c5-4a4f-8a04-5cdc50af9dd2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Load pre-generated data", "Subsubsection",
 CellChangeTimes->{{3.77701511094956*^9, 
  3.7770151235725613`*^9}},ExpressionUUID->"deaa22e4-8c49-4678-a810-\
10b5c96b1d6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LoadData", "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"10", ",", "30"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.774610157184486*^9, 3.774610189459049*^9}, {
  3.7747767619871492`*^9, 3.7747767620391493`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"8b4b14a4-68ec-464d-86f5-a98e25461e5b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some results", "Section",
 CellChangeTimes->{{3.777015716355295*^9, 
  3.7770157176032977`*^9}},ExpressionUUID->"d934a958-ed21-401e-bbd6-\
403b1206dc1a"],

Cell[CellGroupData[{

Cell["Density of states", "Subsection",
 CellChangeTimes->{{3.7743532636568003`*^9, 
  3.7743532674648*^9}},ExpressionUUID->"b4ff6934-13b4-419c-bb70-888f15feef5f"],

Cell[TextData[{
 "We can plot an estimation for the density of states using ",
 StyleBox["SmoothHistogram ",
  FontWeight->"Bold"],
 "and related functions."
}], "Text",
 CellChangeTimes->{{3.777015724819296*^9, 
  3.7770157622593117`*^9}},ExpressionUUID->"c9525060-89f6-4ab8-946a-\
51aa10de6dfa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "RhoPlot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RhoPlot", "[", "n_Integer", "]"}], "[", "color_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"PDF", "@", 
       RowBox[{"SmoothKernelDistribution", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{"SpectrumData", "@", "n"}]}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[Rho]", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1.6"}], ",", "1.6"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "color", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<N = \>\"", "<>", 
           RowBox[{"ToString", "@", "n"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<E\>\"", ",", 
         "\"\<\!\(\*FractionBox[\(\[Rho] \((E)\)\), SuperscriptBox[\(2\), \
\([N/2]\)]]\)\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "1024"}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", "Black"}], ",", 
      RowBox[{"TicksStyle", "\[Rule]", "Medium"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7743533305788164`*^9, 3.7743533333688188`*^9}, {
  3.774353395802816*^9, 3.7743533982333345`*^9}, {3.774353442890333*^9, 
  3.774353481946334*^9}, {3.7743535146333323`*^9, 3.774353594941847*^9}, {
  3.7743536446508474`*^9, 3.7743537196723666`*^9}, {3.7743537522983637`*^9, 
  3.774353752777364*^9}, {3.7743538231623926`*^9, 3.774353894824392*^9}, {
  3.774354118797411*^9, 3.7743541320744095`*^9}, {3.7746103550495048`*^9, 
  3.7746104021606393`*^9}, {3.7746104416096525`*^9, 3.774610451269086*^9}, {
  3.774610483785079*^9, 3.774610503185067*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"3bf4e01e-9943-4893-96ff-a7c7f5f01248"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyColor", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
   FractionBox[
    RowBox[{"n", "-", "10"}], 
    RowBox[{"30", "-", "10"}]], "]"}]}]], "Input",
 CellChangeTimes->{{3.774353915066393*^9, 3.774353940151394*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"00a930da-d446-40a8-b69a-e4d5bace615e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RhoPlot", "[", "n", "]"}], "[", 
     RowBox[{"MyColor", "@", "n"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10", ",", "30"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.774353520010333*^9, 3.774353530264332*^9}, 
   3.7743536526978474`*^9, 3.774353686841365*^9, {3.774353725193365*^9, 
   3.774353725320365*^9}, {3.774353784745393*^9, 3.7743537897853947`*^9}, {
   3.774353840329393*^9, 3.7743538509193926`*^9}, 3.7743539098653965`*^9, {
   3.7743539443913937`*^9, 3.7743540362824116`*^9}, {3.774354084233413*^9, 
   3.7743540970484114`*^9}, {3.7743546715740223`*^9, 
   3.7743547254135385`*^9}, {3.7743548786175385`*^9, 3.7743548815415382`*^9}, 
   3.774610429212644*^9, {3.7747616671149893`*^9, 3.7747616671809464`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"1dfd22b6-06d2-469c-9564-3e62ddb8e597"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.471412, 0.108766, 0.527016]], 
          LineBox[CompressedData["
1:eJxEl3k0Vd///8tQolRkJhGSsZA0OC80iBKpKAmRQhlCEioJGYoyJ0REIfM8
bfOceZ65o2u6l0iTfue71m993vefux5rn3XO3s/X3vv1fIpZOhpaM23atMmS
ZdOm//uXbN8d8O7dT7Tp//9MImbvR0T+xyGmNZdC3/7Ha/NOQn6B/3Hjjq4s
p8f/8R39kH7t6//x5x72/Wv8/7HcMHOVYcz6//jRuOPi3ec//sfnlaXG173W
/sdvK1QTPj1Z/R8Lqtdcz7L5/j9W2BnVq3Rn5X/sO0TU5r64/D++0P86ZOcJ
xv84Yf/z8JfH6f9j654xyeJzi//jj5suJBlpzv+P6yIda+RP0/7HPSt1f4NP
/MdTl/iP05T+440dNXmpYv+xmj9Xiui/2f9xpluh/+6y/zjK+Pf5VcX/OKVQ
P+Dygf84nzulPnfvf9zVeUHdYcd/zHEuQYFCo/6nT+qy3ZmZ/1iaRTstefg/
Plu9JGrR/B9f2XvatAr9x1ZeMTHCxVS0fHuP0CL7irrzyHyfRxYVnSppDTw5
+kPdW01z9/AnKhLf/nw9KOOPekhUpN7ReCoScNF8WKfChMV/nw2MjKAiao3b
vbuKW7BMQ6xxJZiKindl3uKQYcfKcsKYDF9Qke8HlXvn2nZhzZwULMeDinay
twqguD3Y4P0TnpzOVHTQ1bz5iAM/Rm4NLb5vS0UbOq77+m3EsO/SxJVWCyoy
stJT9KuXwpheqh06eI2KvnpJYUf2yWG7Sa/uv9Snon3nWj/Wn1TC9p2a/kw6
S0UPndluirirYgpJR0inMCrSjj/L55Z/HFP/Fyj28QgV5UzCaKe8Jnbh5sTN
TfJUxPREQ7p2xxnMpFwp1kyCihoFNR8WLJzDbAVeDlQIUZHEg7+vOR30MZbW
b/QsbipazWY9G1xviCV47OFI4qCi0rTtZ3b2XMWOyd6QDGemInKkprVrqAnW
N5oEfr8paL1d/IJrjDnm+Ip6/dEKBbEy+QiUGVhi7OqKrrZzFPS5Z/igyD9r
7NPCw5AbBAqKy6Hsm9C3wzQSKj7rjVLQ25BVvg+JDtjoReY66KWgZcPmOwl8
zpjbP53xw20UNPSw1Mk29SG2O+fNj/11FIRi0j1UjjzGMi0Gd/OWU9BMY+vA
Vd0nmPbuvXJs+RTk8OU5adz3OTZTc/vsr3QKur8UP/nmti/2xDnDYv4jBU20
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
5DxrAoIf53LpqeRUBB96HgycDwBVmuD3
           "]]}, 
         Annotation[#, "Charting`Private`Tag$2280#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001]], 
          LineBox[CompressedData["
1:eJxEl3c81e///6VplZVkZJckJEnGeWpJSklEkpAkQlJCyR7ZQqTIJnuTcNl7
773OweFwzrEKFb/X93b73d4f/7jdb69zPcfj+byu63kJGFtrPqGloaEx2UtD
83//RVpZfD5/3kQ0//9PL2z+eVj4/zhQv+pOUMj/+NfiC27PD//jeqbOrBcO
/2PT24F91+7/j1O76YV+cf6PxYd2V2hGbvzHb8asyU9df//HN84eH9t49+s/
DimTjUlyWv+PuZSq7meZrf3HEoc+9Uibrv7HHoOEa2y3Vv7jm30BgYcUlv/j
GCHXUG956n/8pHtUpFiV/B/H09yMu3dx8T+uCbeuOn1l4T/uXq3556fwP568
wym/IP0/3maqyksW+B/LebEm8u3M/8cZdoVeLKX/49Jeuhrr3P9xk7TBTlvq
/3gwOE9BPHYeNYbczeK/tKk0S95n7xsxj5ZIbHd3iR3Ard98UEAMnEed+5xP
OAyx4PakZ1NVvOaRouzm6/qeIzhWuj2nk5wwe6XxVJo1XpzAU91nu1/PI+9j
yYW89II4qbqMJKPn80hql3zE6sHjOJzQrmn0eB4lJ3rcKMoVw6m7ah879mAe
fbzWsWOvJYnTn/iu905zHpFNs4cuKp/FmSttfxq+Po/kZ/M4B8PP4xy+aPbI
XZxHe58U6ViRFHA+m8mHIuTmkR5jbi+N3EXcJ50/N9Yl59FX9aD2BuaruMTC
2z53T8yjiUDLxsB5VVw+W2Jt7rF5tG0sy1h15hau2maDhpljHjFfNqrb4dDE
dXbcVLJimkebWil7+A5r4yZOxzm07sH0UZ/+wBV/H0f2Wy8U+0tELEX8088m
DXB/56+v+KwS0dsgyWj9Q8Y4BtUYibkFIvry0fG3ZdcTHFfyivnVaSLS+Cc5
YnLAHCe651pKwhARuZnNVDwAK9x54y/4XV1ExCFp76bG/xKnUknhM2wkIupZ
Q81y29c4rWNX9CsQEZ26oCoo1WCPe/wuMpKnmIj+BPSUKL9zwr0cXux1zCKi
Ea7e68N3XHEuchdZhpKIaK817nzYjDsu8FO4+vloIopN9ReK+OSNi16b/xAe
RkTNq7/4v332w2Vo4upX/YhoHWd0LOVrEK405yOtpjsRdRoffN6W/xHXeHAO
l+NIRLTnnpYy9oTjBp4rvD34kogG91UeuLkSiZttDip+/oyIPPI9S6f1onFr
ooTVZkMiyl4q/CmyLw5H6y0ndVKXiL7uOsk1bJCAY5nxf+59m4gknsqaW2Ym
4/gvT6XOqBBRuon4sW6xNJxE3LmZyzgiCjIW7JZNzcQp7XwQiD+H2d+KTZpW
y8XdfDj+kOY0EWk9G2rSmcjH6f2UjjIQJqKXgyzkVtsi3LOj3v1l3EREiHGh
OrGW4vY0t1Gz2IhIZr7eSTOsHBfjyM4Qx0BEW5+9PNn8KnEXTj0QCd1NREnd
GUXnpqtxvSNx4PlnDqn9eXHrq3kdztqfeP/N6hwiC52bpV1twNErSb56RppD
suLji4JHWnBJS68DH+DnEDM1WFO/sB2nHFOWqj4yh9aHBEabT3bhRm7troGe
OXSOowdOQA/Obuf62JmWObRz6JaJaFsfjiUn+LdQzRxqpGvyOflgEJdhOMDC
8XMO6WVTahDHCO4ayzHxA/lzSKfhRIFz6jhuuspEZSttDn2nSHbz8U7hOIVW
HMej5pB2wPgct94MLr9HLrzz4xy64OOlJNk1h7vl4Zxd7TuHeN0lQi+pLuDm
ZeqbCtzm0KeSK/cN3yzhPGYYCcmOc6j+0MfMBAsqju/T3e3Il3NIucZVIoJ7
BVeqEsXpZz6H9tupJ00cX8Np/Z6UdjKeQxUbllwh1r9wlJQT6tZ6c0j8bWDQ
pZINnK+u1VMjzTkkeOTSGx7NPzhhukLXu2pzaGt3U/GW8TYO/fjz5eolLL6N
E+8Wf9CAnvmlovPyc+hw3XdJ4kNaWOf60HlSeg6RvDiESp/ugeCWjgVusTlU
qerO4W+zD+rFH/LRcM2h2zpSt7QkGMBoLOHCCsscijav9yeOMcHfgIW7BLo5
9AuX9aRChRkicGes+nfNIdG5lfXudRaQprzxadycRXP7ctYYi9mg7VtFfOny
LEo+brmqYn8YzDT2lmfMz6K/Oyq7DwYeAdpdNwdipmaRRIgHTq/3KETnflwO
HppFnILVDslcPCBnPMTg3jWL6p9rh8+lHYNuVv7jr5tm0VZ9ptTRVn6wrDFV
flo1i4wHcj5VXBKEA68y9e7/mEW423wbRj1CkCC89upG7iymN5//UK4I4Prk
g5S+z6LL5/n57wSfgFeyjTUCn2dR0atTRif7TsGhuYPjbCGzSIH2ZxS3jASk
RWhv7P0wiyaviSx4XZeCq6pfWTdcZlF+bEKAQ/kZmNyYFl+wn0URq6x32RXP
wtvvJ6+NvphFb1XcOLNLZYBD74VRu9ksunv58r63jrJw8+e/8DzdWcTvFuju
eEEe5iyu5CRqzKKvh/jS6+4oghuPX/Mn1VkkpGXU65GCA962LoKP8iy619q1
HfdeGUqcOHcc5WbRw29Xf0hVXIS7Eo+OWkrNotv5WjUUqctAHk86+0h0Fl1s
eNyWlXAFhJTPml3mnEXqix9qfYjXwL5S3djn0CzS66r62Th4HVqVzfTb9s2i
2rffW9503gCBKrd7rNsz6IF9K7VQ+hbYXYzW0FmfQQ6lv+kd1TSgpapY7evi
DIquzHPuc78D/Je6r0zhZ1BAJf31iE1NeF29iDs+MoOcKo1Z71trQfOl/Rcs
umeQbYoJt8eqNvDVCJzNaZpByY63Ppb+1IFXlxVPr1fOoCF1Obpl9/vQVHPv
hHzJDOr47C3bb/wAjl2xEXDOnkFNCnF3RgMegm2tH3dt8gyqGSt9Pl3yCBqv
JB+mi5lBptT3BytojeDl1RG6UP8ZxB3jUj+c8Bga6tZ3D7rPoGPtx02uMT4B
HhXmbZ63M0h9rYNFLsEUbOrFNoxezqB3XA5IVN4M6lWuriQ/m0Gf2P6MMq48
A+6GR4skwxk0TFPDmjRqAS+uOc5K6c4gXrKvqlKDJXCpZg+Xqswg4czPBrQc
NmDd2NS7ozSDGnWGv44pvoRaVUL7lXMzyPKIXO9pV1s42rTd+EF8BukPDH70
m34FVteP1rQLzSC1CIc785ftoKbpbDkb9wyKmGDhy295A5xqt4p1WWfQyNDY
MMHGAarV3NOnaWbQh9eeNwsp7+BIS3TSiQ0CurSlkuE9+x6e3yj59pxCQO9h
z75MKxfguLkU+muMgIy9Cw7M57uBRev+QIU+AloKdbl6b9wdKm8K+ri0ElAm
LV7vjJQnmKvrvKP/iX1/z2EvseINqM3G7nYeAUXfDrUW9fgA7Lf8X4R9JyAZ
V4GFk8J+UHGryuRYJAGJLt0KNYkNBLaOEYPHQQR0sHus1ehKMJjd/qWb6kVA
PqfZNULkQoBV45S69GsCEpOOpZ+xCoWnnVevvXlOQL/Vmygm/mFQpmF4sewx
AalX6jcx9ocDS5ejwq4HBOR32CjohWAEmN4JP6eiSUDN5k+0e60i4WdXtqTf
dQLCLVUdW6B8BmbN5pOdygQ02LWeLmnzBUo1d3j1JDG+rNhNmxcDh3qOcn47
TkAS4eP+l8/HgsldGVYCLwEF7UUae47GwUGtZ/usGAnodmTlHdsjCfC4150m
fzcB7asrCfLkSYQSrZit31t4FG78lyysnATG2j1k13k8GuMzMdsOSgHNFJcG
yiQeya0obtr1pcLlzdOxDwfxyKr2sC+FKw2Eo33uXGjAI5bBCM/BoQxgp5wT
S6nAI907jdzk61mw9yKe9nARHsXSmHcfrc2GWYJSATURjwKSc1c5XXKhX5bk
b/AVj0QT3UrctPKgwSfySWsoHmkKfjDgUsyHVPFVjlQ3PNK2vv1km7kQLF6l
OjwyxKOCAlxcgdwP0K/X1mzTwaMlv6tPPmuXwk3O3acUbuPR9ti4eq79T5Ao
ezjKgcOjoxkHE5hJ5UDdzQbt3Hj0CS1QGj5XwaR25RFFNjwKxuUo+tythq4U
S+p3ejx6Xf76gypTDeTdaIzz3JxGUwy1NREfa+FVqNMepYFpxD/eZNvc0wAm
M2Jjae3TSCZ5U8c+sxG0zw8WctZPI2WDtvv4kCaQHZF+ulYwjd6kjtf6PmyB
DUFiU/rHaaQVevAz05kOcMrTDOK6NY1K58ed+0t7wKvrBNdG7RTq2vNrjf/t
KOy2a+jcLJtCD1YeaV3bHAUXrqfefwqmUF6nQMiO3Rg4Pk5e206cQimlnYkJ
z8bBcl24Y6/nFOo1m5MNPDYJC59rPfc7TaGmfb6VqdqTYIozUaR7PYV4s7W/
2PtNgqF3wnfGJ1PIRNjJ8cz6JGgdFfRguzqF6tfwn08VTkFXeZX8YaUpVGY2
wto6NQW3jI2WOc5NIb+GmydND06DanqsAZfIFGLGaRwUeDgNdbeVD/PwTiHN
zS6X9x7TcGltooX38BQKFGi44JgyDQpKfBcE9k6h1ALPhMOkaSiZqqAI/ptE
nwXCjaPp8CDjZZAsvD6JGoZ9Q7JF8JArtq1/fGkSrYS6VFZdxINERzSb6Mwk
MvAgmzY9wEO6rVLzybFJtM2my8z5Eg+inGMup/omUXRC1Q9THzwIGvGQJeom
0T5bsfSILDx821uWKFU+ifiWPZ8rIzzwpD14IF04ieSsp07Pd+Dh860/LDKZ
kyjihUti9AgeOFajGs8lTSJ/z/vmhFk8hEbIO5+PnkQuUdJSp1bwwKw4fO5C
+CRyc5xsW9nEg/+kw6J8wCQ6dEJb+iINAeg8jyYoek6iLz1Nn4L2EcDr5I/7
OKdJJBlmGVBMTwDadl1m5deTKGwhfz6KkQDOLzfqL1pOok3lravvDxLgL0ek
0+Unk8hLrFT/0SECOPw8L3P14ST6/nDouScTAX49GlhQ0Z5ErcEb79IZCGC7
502cqvokkqnQ8v9ORwBqKoeu2tVJFHebUDmyhwCW6kUHbypNIqYp23UmLL6F
Ze069XOTyOHlbjHlP3h4+mn97e3Tk0g1Jmpv4RoeCPLh0ndEJtHEpWH/7iU8
GE3IzGvyTqI3c0fZqZge4+6937QOTyKGb+PMOhN4GGhlY9LdO4nOC2+4XsH0
TJ029c7fmkBeJQ60JxrwEHcqea1oYQKVjjs5kCrwEFYu3FHePIEU1XazRWL1
CdxnolhVOoEsHn2d4knBg8/thO+1aRMo6tW5nLhveHg7JeDR4juBfn+8wqDy
EQ/EpgO5rxwm0HiOVfWaHx7u5VHGeM0mUH17pEOCJx5qo/rpG+5NoCPfSnK7
XPEg7V5+/sXVCUT2i5WRfo+HWItEk6MyE6jO3qf4oyMeOy/9QqoFJxBe6Xz6
dYzfKb6ssGCZQIV8h04IYbwgfJ/EToPls2su/q8DHnSZlDkryOPo0cVzqgtO
eKhfP3716dg4uqQWsjyK+ZMZZ3rJ3DqOgqbeZyxj8cTXr8X8KB1HbVt+ldaB
WP9kj7QYfx9HDOyfe5c+4eF9RPUGQ+Q4IohERP3A8l10/i5S6DWOfm88P02b
iQc9s2BNg9fY71svVaqV4qFR443zfpNxZPPtUSJDIx5kLxhk5GiOIynmjIcn
hvGQKHB16P7FcUR12eC4vIgHVnrxfbulxlEzbQPbn208uKywns04No4uiibp
/DxMAPLw5iNtpnFUrO7+5a04AZrSG36kLIwh0Q0pe6oBAWTDsmY1hsbQ56ce
S1QHAiS+C2fbahhDubrOyRnhBHBRf2x5M2kMBd1uJu/qIYAcZZt/+dEYGqjd
WvumMwPJAzPqUbfG0KqccoPc2xlgr2x1vKw0hpgzPT93xcwANTiqN5xrDGVe
jkjQn5uBFGlZH/m+UfT+6BlaosMssHPzFuJrRlELh8UFsZhZcNu9Z9o/bxS9
CJHf3VA1Cwa9XQoTQaPo+5tWzTMH5oDDzpLirjaKVieHj731nQMPAy2e0xdG
0TGy84rM9zlYUVG43n9iFNVsaaVfqJ+D9iN0CaJ7RxHeOC7e5u8cKNJQO7pW
R9CN8Bwzm8NESCP2/3WcHkGxyS4njcWJ4Pkj8V4bGkGXuPKbe3SIsBLn526X
NYKycxvLLpoTwdD3ZQ5f9Ajiuj6elf2OCO0v7481+o2gvwu06a/9iaD4QJn+
peMIel9mm3Q5CrN/+cR57mcjiCaQ8I0llQic4gdNanVG0Dbv6mHBfCJ4sa8H
W6qMIA7VsTWrMiKs/R0p5zg3giReNvT8rCOCo29K8pzwCLpQ8Np+bysRdnHa
BpWwj6AMB4/87k4i+CTh7D/sGUHHIJT8rY8IB8/SG+mtDaMFwymP1UEihFX2
XT9FGEbhvv50T4aJwH0rTvpvzzBSLjgf2D9ChPiR59xtNcNos8rtfPgoEUSf
ye2JyR9GTqPCRx5g37N+7V6yShhGNL/rf/Fj6895dPRB6DD6mx/xtwKzX8by
pYLZfRiRdeU10zD/l76Zpky9HEaT/0ZTwruJ0CguHZxnPIy6453/uXQQ4Xbp
P3t3zWHEVNEqEtRCBP2+MDUR6WH0ok0IOdUQYdrY8OwvgWEUcHdV3gYR4Rn1
FE8DyzBq9WW88fgnEahOv/dE7hpGDNUiD7SLiWDHULNktjyEjnevna3D9Pwb
Gdh/YWoIhf0e8/6SQwT343qIvmsI7eJtGLHJJAJ9gUjqSOUQYnlm/WkpjQjB
F5eDM3KGED787uT770Tg6ChzcIodQoXV58WYsXpF6/sY3woeQrKZfow8KUQQ
Xrh7g89lCOmdSf7Ch31Pe8MnQ7UeQu8LK8WEsPVSe0k8VY+GUHL17lgZzH7x
x6K9H28PoWdTGSnns4iA43cjG8MQEqe5ly2fR4TaTPWBs5JDiHJsp0ipiAhq
Ckcr9/ANoeUDd2lYy4nQ1UhI7TuIxcf484x1LRF07+WEJG8Poj5mocetmH7j
+LeOb8iD6Ci/zzsHTH8Tm2uPVccHkZFads7dSSKQtllvHm0fRKmv+gmnSUR4
6T8us1A+iPAnxxSzfhNh42ga78/MQaQTZOZB3jsP71Ne7/OPHkQta6stEuzz
sPfcRYp+wCASzJ/SNRaax+bjwcrt54NI9rjlNrPKPESOJXzv0B9ERwLUpCp0
5oHPwvpj7M1BdOfTSHyaxTyIe+0zuSQ+iBpS/3m7h85DHlv3TTaeQdRaWul6
8fs8XIiLPkdgGEReeW97OdA8qJTJ7PciDSBFmZLiGNI8GK4YpzWlDaC5PA6W
7msLMOssERoVNYCebdGN7320AJZMW28tfAfQNT4+zt+vF8BRNESdyXwAueWn
nRBIWIBwA0TVODmANh4uW8dtLECwn/TnhiMDyIVcFyXBRALfkqSLuH0DiN45
qu6nAAk8ZzgXCtb6UQqJWkU8RwIXVv+Pp/D96CnuQInTNRI4wo58fFc/OhnC
l8V6nwSvn7/Ec1b2o+G5f8U7z0jw4vOMX1BWP8q5OrIgbU8C83pdmX3R/cg7
oYTX1IsET1ZbRt/59aM70lI86aEkMOQHz1WHflRn+I3udgwJ9NTzTpub9aML
QQd/r6SSQNtRpH/yXj9KWtn58yKPBBopke91rvajitYkgYgfJFDrZTjRfrYf
DSbfuFZeSYKru5w7rgj2I/881uDYehIoS6y8+cmMxbdc/DuimQQKD57wS+/0
IdEzDx8FtZNA1mewMXWpD/1tpHt9o4sEUoU3bPhG+9CYwepEVDcJTk1XHP3U
3IfQ2qjaQg8Jjh+Srmb80YeGUv85S/WSgF8xydw9pQ/ta8v64o99537GybYV
3odklh8VE7H1HJ/8fr7w6EOEqgdpnzH7zDXbj+de9qFrM679Ax0kYKDaMBoY
9aG0A6m0HFg8+3hnCnpv96GA8hYFyVYS0KjpPryB60OdDrNL57D4/9i17K0W
70PssrtiFRtJ8CsBlyXH3Yd0MiZQDZYvtTP3XjZdH9KmW/B1qCMB6Z/wjshG
L9I0XdOWrCXBrFhkytfZXuTjc8idB+NJHQYNtr5exMobeEQH4xGP9xsfanrR
l1zGjBCM+3OXY2nyelEhG/9iKWa/c9zk+pvYXtQalnRKsokELQyDy0uBvQh/
+JRFQgsJ6uVuRJk49SK2zO8laZ0kqHxScWnEohcFptnARB8Jfn48Q7qj14sU
ya9ucoyQoAglhjaq9qJK+Rrt+3gS5CweUYTzveiKN8ujryQSpB/1IxSK9KJ2
s6y+I2skSFbZ9hdn70WLR7aNHXZIEGtrcy6BthcxNKhTh+kX4VObjlfwRA+a
1jFcWBNehJCtZon97T3o1p7tqKtnF8H/BG7AqawHNbLIF3BdWgRXV2FRi889
yCH/1Jvax4vw/Nxy09W7PUhqw0owN3MRTI1NXpZd7EE+FmWCAVWLYBQ0wHVW
qgdNjNMJPetbhHvz5Rb8TD2I+6ODhtu/RbgY7cv0p74b5ciDg9vNJXhpKWRb
U9iNqPl6afMGS5CoVDbol9iN5EofRKe8WIID40sJPG7diKmwu2nz4xLIZ3nR
zbzoRoaGXdUR8Uvw/D2fdeajbpTP0PnzXN4SdB67I49T6kbsP8Wn1dqWgJYy
/22feDfyLE4rg+ElkEFuezu4utGrDL/I9zNLYBrEbRFB141id1/59oayBBGP
CjofbXShVr2/SS82l6BRUl1WdK4LHaVJWv26iwxbOzNfqH1d6Am9mKnHATKI
d77f9aO2C+WwZw9aHCKDQeyRp675XSixae5nGDsZgl/ktF6Px9bH/tEK5SRD
tfJ1adaQLhRkd4gcwkOGNebpiGHnLlSwLSmxl48MIlOO/+KtupAAH8vT9/xk
uJfL9tjiYRcKhJVvvwXI4OOa0Xj2ZhdiKvmaJC9IhtI7VyX+ynchfLnVwVrs
+6LAeGjtyS5UWqP8Rh3jYyt2m/6cXUiSnGzHgtnTqD70SHt/F+otutX05BgZ
3D6m1vL+6kQOzr+4S7F4Cowvis0SOtFJTWWrVi4yzEoPB2X1dKInVNy7n1j8
nLtt1+2qO1FcoJJvGgcZ1HoYHkBuJ5Kx/xc4jeX7NiGxcn9sJzpgl/gQ2MiQ
Yat0vDOwE43a3hD/ykKG8cv9fpFOnai9sfRuIzMZmNmtlw2fdyJBrt17dTC+
RNivc/JBJ7KzuFE0g+n5qiC2bPl6Jzro26LxA/ue7HFBsFSuE3nSeF09xkqG
Qa1ub7cTneifnbK8O+aPXsRiSY2jExHemZd6YfEpru++y7a3E8WnJgfIYfmM
+F6wKZ7rQIa904YLvGTAnbJQVK3rQFxnHr2zFiJDfMvX/UPxHejb/EvazJNk
2Pe8vfuZSwcSivfyWZAkwzNGmpithx2IU17y9l45MrRmnHnmp9CBVvknfTqV
ySCl/liG52gHat8fUv3lOhnClsJ2Mn61o1UJ+6sCWmTYCKhvVuptR44M77/D
IzKg9pNG2EGLlrd0G4h2ZBC0fiBOfd6O+NnbN4nuZPA6FPDbRa0d3Tp9WXw+
mAy3NKgB8Xvb0dXI6dXjmWTIowrcP4tvQ1JkVUWLn2Q4HHJXuLayDY1vG9zm
aibDaFdR6czbNkTHVjCTP0cGi7tOc6Irrejhqvl1IQEK0ODsxei6WxGTi31B
7WkKhInaWs7ntqIKRi8+U3kKVPwzW/1u04o62PhfMNyhwF3iY1nfO60o61F1
Npc+BYjdBg7mZ1qR6yGdmXOmFHAqv1+mxtKKhvlxzLLWFGBN1doRW25BZ6VF
FGTtKZDy8fYlhq4WZGg3ohbpQgFFJzVPUk4LqvXVkFPwpkDX06uNLcEtSPRb
nch4AAVMNZUZMl60oA3GlOgHYRT4o6hwy1+jBQlXx7r7RFIg+IRsyHOpFqTx
JupZ4VcKiLCe6b3J3ILeiYfdno6lQOnfU0dOU5tR2m/XUcYECtyeO67H1NmM
DNz7mKcTKUDoEoheym5GrIdOXi1OpoBDGc9kW1AzCojTWZFLocDBlCNCWdbN
6AeRxe0AxgkhrKaBt5vRrGQryyD2e7l3TN+tJJsR70Zc6HoSBVpNDyzeOtSM
vPOfsShh9o3u7JaUpDShZaszQR7xFPilsG1zqKMJKYw5FwVj8fke3yygZDUh
em4+9qVoChT8IcvnWDUhlTuUzHgsv+uz807Bt5qQqD3zqapwCox3EipfSDRh
7+8zqRMfKXAgeVjlDLkR+Wav07/F9IoO7vvA0t6Isl/xVB3wo4D0287W5cxG
1HPh8ptPPhRoeNJyqDugEel1otddXhTQ16jXzLNsROVWQ5vmnhRYlq8K/6je
iPiZVp32eFDAS6Rs8OXpRpQeGMyp7k4BLuZi7rtMjehVC7nbGuPsrVyDs0sN
SOmAesBHjK/MZMSxtTWgCwo0J05i6wc7UgirGQ3oMYdE2QnMn2Vp/Ile/wbk
v/zgznEsHtqkaPOC5w1o39+TvPK+FIgIiswMu9mA4s6M7z8XSAFxx1DqK/EG
pPD044oklm+VSeBZbcYG1P9VZUzsEwXu3f5gd26xHkn2Pq5HXyhAuuDx43Br
PeJ687MtPo4CLsLOf9fT69FeLrY+T6x+hw85Qr9fPTq0dcjHNosCaZuv3Ios
6tG6T735RiEFgGBd9+lGPRo54qTuVE6B3nbzA29O1aNq+W417zoK/EswDDxP
qkOXWAqYVvsp8DHwQdeRljpkahdb2T5BgeMO99g30upQx/pUu8g8BTRu3Ywq
Ma9DOZ88V3v+UCBx43zyhYVa9MZcv0qHmQoCgm5mTxpqkbEcEx3rYSrE3GgV
C0msRTf3VWi0HqUCz2uOpTLXWnRjS96H5hgVPscYZhMNatGT50QaDkEqcDSm
2bAr1iLn8XCHU8epELa8dlb5aC0qTw4mOJ2kAgs3/LL4VYM+7TZJzhGnQuCV
DyURPTXI2vC8GV6SCgxWPY41OTVIVF5wQFiaCj4RvEqUgBr07Yh2lLoMFfZW
Pd3hsqhBHOveD+1kqeC2kFulolqDZG14RMPPU2GH7a/7S5EapDq9KZYiR4V3
SioqMbQ1yP9R/mzJBSpsmQYfaJ6oRu8+/xCqwfhN8HDzelk1suhBhm0Yr/0Q
DhCIqkbKU6XUVoxf4q1uq7+pRv0S1QEbmD0K4w8WB61qZPmuSUwY4+eyu3sT
z1Qj7s7dycqY//lH6p86D1ajRD2jstZzVDD9EKH7l1SFTs9UdOti8RuOnhq7
m1yFxlgbYtnPUGFsr903Z/cqZN+u13kby19PstIo3bAK3Wir3vY7TYVBXXrh
AaUqdJme/XXrKSpou2nN0nJXIcVrT0iMYlToTo9JldioRHuDzyQai1JBo49o
rtdXif6+WdT7h+nfti192iuvEq0+SmGJFKGCmqgTJTeoEllt/HQzEqZCw52G
3LHnlcjiYW9KnBAVrrxleUWnVonMqhdbp7B6Vic+kD13ohKlz0Y5WmAM7Ukb
hnsqUZSB0rQvxvaUiddHaxD60D9xPQ1j20uvtl44IUT7orBMDLNnFX7AufE8
QvFyqgdvYv7MiF93869UoIu7Rh5ZYvEYK5zxeZNRgQpouy/tYPE+DKxj7DCt
QP6n1iPEsH7RnbofclygAj3W4lzSxvLXlCEffj9Sjp5a1mmuY/rc9HaL6gsv
R4kf2UKOYHqqDHPwndYoR1PFRh0XML2VT6cneNCXI8KA03AtVh8FFxAdrS1D
kxNyXbkKVJDt6ck461yGRudWG2KAClLHzc74XShDSTnklKHLVBBuDZaXz/qJ
2uzClxpuUuEg5/TNyIhStPeG3ozlIyocsLDrotwpRefZhBLpTKiwu4L+3jXG
UmQ+QjJOMqPCxuOzj365/EDHGmNExG2osFLUgFdX+IF69+nLGr6mwhKdvlnS
egniVT9WyepABaI+dfFvdgnK4PluG/WOCtPZHjZa5iVIYfHsCUEXTP+I9Bm1
kyVIIoPvYIsbFb6+775/kViMQmRcua55UmHzyWbb+ZRitFY2fbzGmwr31Pkv
SZgWo437ky1ZH6iQL3OtSFikGGVbf9W/5EcFZh4rMW5CETL11F3q88f6eXd4
DEtCEVJyk6vaDqBC08JP1gPGReh+V6vR90AqHO+e9trmL0Kv+I1otYKw/feD
7s/aRCGiM97prMR4IlbKmhRTiGzrfLiiMFb00cFPPSxEo6KsJrYYf7Z+rzPI
U4gu23YSZDH+dS+ppX2kAKWIqCdaYPbv4lqhLqoAMQ42PY7F/OeIrOb/vF+A
bHxVhP4vPiYmLtE8zgLk5kT/IgmL33xN+WvqQD6Kt70f+tIXq1dNoEe4dj5y
OnlsbRnL3zWtcMOPPR+xKstWRHtRYTxk9LlbTx5KvnfL5zqmV6ShmLb1nTz0
jLxjMYnpuX7tTtMT5jw0G15RmueK9ZukvZJ+Ry6SolFhLsb0z+b4lqsZmIuU
9XOtlp2pwLhdJ3JdPRdplPC0ncL42cziZ2DMRTIN/xoj3lOhvpXtoGxLDvon
03XJCmPBAnk3cd8cVB+fWHYFY+cvRr8Er+egFy72b+UwHnXzMT96IAf5/VGc
bcH4Za9BOV9gNkq223XnEWZfPCEjiZExG1Uu1/1cwXjGZitg80MWOhXr9vYG
Fm+Msqrd7P4s5LiY0p2E5aN76JNBj2cmapRrO0njQQXWcbxK5e5MJPv4d/sq
lj82L0pmumagnOnPB/f7UMHrrfORqJ10JGaseIsL01NZrW3HyykdXQn4dT8Y
079gzqzT0CENVW30vJ4IwfZ3UVGJ+u/v6F/X7+7CMCqIeu6Jk3/9HbURhExK
I6jwRTDWht0mFT1Q4dvTGk0FreWl+7soKciVd8J7PhbbT5UKl8jPU1DqWgzD
/kSsnx4OsDaaJaNZhSj8gTSsf8RF/hTMJqFc3fm+9QysX7Ze4uNMkhDvyU6G
qWys/pEHC94aJqKjzjoNLQVY/Z/qfzUbT0BHxLhFLhZj9T6X5qGtn4DUis4t
8PzA6r1n4/ml4XhUnWZPGiulwp2eq9qSuvFI/tvPxZgyKtDHhyrx9MchA+9i
r7pyKtS+mBKh04pDUW6s2skVVHgPkgd/dcWiASdLIW9EBbmDTr+mb8eiyf5J
z1mM7y1Rgn7GfkNWjGqRXRgrVsxI58bFoL8X89PKMBYMGulLjo9GDXFDuQ8x
3m/YZf814StKCqtcvo/ZX5Rq4P6Y+AW5e6ecuYf5795VXuGdFIXkjAzTlLH4
SrrzjJySPyPJkspsMyz+mITUPbYpkUjkkEBhcAkVPF7FpJilRiBuU9fSkiJM
n6thagbfP6G2PVrsWpg+snPOwdfTw1CCxs4+fUw/npLXZyEjFBX8wr2Mw/Sl
/WDRL5P5Ebl/Ityp/o7dH2I6PPzZwWhHU19vKwG7z35/fn/KMAit0hxW2h1H
hTOfPWs5jAPQXFYbH2MMFRpH9TWWnnxATL1OG/qR2P3/XvXT4FNvdOSpt8GX
cCo84pcZrXnmiQS2gmuHPlJBrJpPMNvCHaUoWgQFBWP1fcxgFmXpiuL/Sd65
gZ0H7gzkBwwT71FMxRrrfqz/uG7XzU1NO6KreRdeqWL9mffxq23JrB3y4P53
oQzr3+v9tjuBCy9RtUfljiS2/yvPfuJoGbVEXaPzhmzY/qeUXpGwJzxB++dY
LUyx/lfwmPVTG3yAcMsKr39g+0NKxNvuesc1lIGjTKhjLPHOSXuPsBRcvM8z
EoRxtgbtbPLmXeizvd7fhfHJOM0Hx9eNQIvjV/oxzN6fo4mXHZaewVl67fmr
mD/Tpq3DsysvgHU7/7glFk+Hp5DvIcorWF5mNQnD4pW7dHNbjmQP59WfDj/A
8onbfvXSeO4dPHcRUlDB8vUcu7VaZ+MCsfkTX6QwPX4oPM4ctnaDUzJHr1lh
eglu+Ansee4FPfmRnA8wfddejNHpmATCdZ4IzmPY/gqb25g6dyYY/C7KmHfF
UyGLYzcoS4Vg74Kunx5JWL2uMn1Vk/wITP5WTHKpVMC/OrKpJREKgyrdLV+w
/bedIHDv0ekw8BJcU9rA+oOz51T+M/FwOLd9OEcL6x9pWlnmV6c+QY2WOt/V
XOw+PqNs+V4sAkLpvv7ek4/lb6jW7HMyEkwqFjpqsf5zCdI6ESr6GerOXWcR
wvozqsLAI/pEFFhGpOswY/u1YMlsKuX4Fzi8yRTzD+N2HltcnshXkNmViMvF
+pt4w+lLmXA0nE6/b5+OMe1b7416oRgQ0T6Ul4Qxb1qIdpfgN3j4NUAyGuMt
KvMo4o6FvyqtLN6YvVnG+0xHkmPhyzL92gvMf7doHM5KKg4eKqeU3imkQsWV
eeu60jg4WS8fDFj8aYZn4niuxsP6jfYnp7H8Pr1z6LbtiAe89T/Tg1j+bpFV
u1vuJ8CryX27JDB9LAvozgkSEmDfHeYv6tj+0e28Y+pglQjqrr8WDJOx+Wrx
c0TnRiLseaGrsY7Vg0dYbOs9UzK8/RnmeOQrdh6HqqER2VTYflZiHI/dfyXZ
H6nSVakwSNaePIr1R2LLsIDvje+Qc8OGLxHrr+A5wbtTfd/BXrnlor87Nu/u
tvCQM0wD5XMiJq+w+8qML78waCENwh9zbjo7Yeevwp/Z2VfpYNEcIc7/Fjvf
dS5z4nbS4eKZI4aV9lQ4Zet3PfxDBih99RQMs8Pm+aAex0W2TBBPMRfkx+YV
2nTujMsxmcCdd1sww5YK5PrHY1GiWcDWEqVn/5IKw9PpB1fyskCtP7GWHuP6
7VW4rpQNrlNZEtHY/JPHpWgT25AN/HbFanYY3+a+1PVHNAe+nvhZw4T9/urJ
2WcnrHKAc6hCMQlj+fO+tHfzc8Dep9/XFfMndVXiy/uNHAhNqhinweI5frf7
bJpSLmRVJ0u7YPHyGNm19rnlgqyw47Iclg+rNdeTXY25cI25+5C5IzavOVX8
E2fKA52/JyW+YPPVWuQ+SY+IPBCY+vXYF7s/F5LTGrJH8+Cl5G1aYWx/Txbc
MhwRyIexIw9+12J6t3Z+CpHOyAd9JRFtPmx/Vo/Lixks58NVxlLhXGx/liyO
V3+QLQBeqyBOLux+zNpye1D4tgDWO0wY3UOx+h04sTZZWQBfVDx30rH9GsXR
4s+4rxB6vcZFnLH7MljYWkTuRiEwNpy/qfkZu4+l2SoeBxdCMF2kRE0UVl/l
4ntBfYVgNacTXP4Fmw9uPaCUchXBzbojK8VY/5jp73jPPioC3RnPTzLYfWtg
nsDPmlQEemlRWaIY37W/9kNpoQj0rbPreTBW9SLdeSZZDM1IzNINW48LC1oI
e1UMnXfPFutj9mXiz7pX/iiG/jmFXecx/2I5A9yL28VQUzS+6oyd7/wVbwuO
XCmBf6L8HaqfsH5p5VO//KEEzn8xSmPB5gHG4ZoZq/YSOPGvOkUb04OW+PR9
FNsPEF+2Vfy/8+yTkcOJE1o/YKZY+ZsyNs+dHPHtzA/7AX2GzNQd7LzUaM8U
bDtcCnela707sX6OKVit3znyE1r0aLdOYf0jLbH3hb/uT/jY58l6zJIKdSkc
R49+/gl6GnSnmJ9h92nUBQtprjJsf1BoxYyweYv9BjvSKwN31axb9x5i/RGo
X37jSxkEaFhGud2nwgVX50NPeMpB12ZP9w9NrN5bwSXL+uVQPh5laXobe7+9
ijd6H10Oo1wXH77B3gOrS/n0DOPloGYn8Gf4Olavp3X5EccqoKRr12fcNey+
murXF35UAcJDyh7UK1TI1CPuzf1WAcUPNFrFsfeFcu9mltJkBaiNP2J/dpEK
veoMus38CJYdXzW1Yu8RswaeXTpGCAS3vWcXcNj9oiyRho9DcNf1y246jAMx
aV5MI3Dfk81/Qgl7X0eJvn/PUgmmsw+us2M8fC+3u/ZMJURkZdPuwTiRTf4E
g2YlNNrtLltVxOa3zuq3d15WwuWEVAsL7LtcwI3OiI+VcPSb78wezD6tWq/w
eF4lUKKeP4rBuHXfQwfhnkpwu26Q9RaL71PNTJv5KubPTfGruzJ2v7tYCeay
VYHaTy5fPywfUaXfdr/PVoHjuW/fEy5h759N5xYlrSp4myfv1IXl72Ub8qo5
rAqU675ZC6lg9ZbiamIurIJjV2jnRDH9ji7F8+r0VcHfahMDCVXsPfT91Mvo
9SpoIvF+Po3pnWFaUI8/XA0X89+OVWBsJ6TELSZbDaWOQwIaapi+k3XWL+5V
g/Sl86ZTGNNH36otsqsGOHn9RB/GPfcHOP99qoYxu39FORh/5TC0vFxcDY61
uSr+GJv2EKs+DFTDcLqmSQtmXyrYhqPzdzWk+F+drcTi2bq5Zc7BWQO2lnJm
RVi8tXTuSF+uBsLrfMJOY/kE1DOwJ+jWwHc7tRVBrP733MPM5u1roPwEowYn
pge/Mm+55Oca+KVsOFeB6bnwN4nF7kcNHCEWiOdj9Sn4IWFaNlQDF4LoXqZc
wOZPu+JS2q0a+FkVMuMsS4VrZ5UPXeeqBTPFJx/8pLH3HLXxcZB8LXAUy52O
kMDqn3GnpE+vFmrOMHbFi2H1Pv7YyPhLLRw91BOpJYDpnfhV9mFFLWhKuyxc
4sHmOcF+Bt2pWqA1cm6u5cDOR97rReon6uBrpBl/LAMVHA5LMlzIrwP/v1Lq
ufMU0As1mzzbXwfvzi08CRmngCJLfKHEZh2IE6hKb3oosM142FAY6uG8C0FP
BVFg0vfWOT7jetDrPX7ldiEFqg740HN51sP6TIVBZwYF4r2qJthT6yHo9z2H
O4kU8Njzp+BQSz2wySJN7q8UrM9kfOnJ9SDyu+9IbDgFrtFYPdrL0gDnSxZH
hYMoIPo+RYZGpgGbM/bK8XygAP3fSbo/9xrg4rjr4ogHBUgOXBPrDg2w+/R2
7BcXCrT+vltA/doAaw9aPlDeUSDrdcAHEmqARePHfkRHCgSt1hvMTjcA4dkf
/yl7CrywoZGZ2tsIlzZpG5zeUECTcoFuVLQRbkg9Ib3C+Kyl7Xj/jUbQftpw
6DnG7KSM/C6rRpj2M32+hfEvs1mf1pBG0FCjX3V2oMDALJ9BQ0EjVBzIctj7
lgIlJvfPVg80QrzmMu8vLJ6o6Y8HyrcawbXa3MvamQLvDFvHinmbwEiaQCa6
UuDh+N78POUmOP/TN9kFyw+nDz6Zj5vgju+7LllvCvAP2z9M9WoCi/tWfxcx
PXbp5kknfG+CkJd5p3T9KTDdR9of09oEOi4BrD6BFKi9KzIWSWkCnkCzzeJg
CiR1GeSFsjYDPe3jk/wfKeB1O9I78FwzTHaarDKGUsCsrUv/g24zFH0zLd/E
+PoNBmmPt83Ayk2O/IKxWNOV/c4xzXDlnxFHLLae8dr7UYeqZrCb6AtNDKHA
Um1x7itCM/xNWztAwPy3X1r2st7fAvt/fTvm5keBnEoxfXOxFmC5eEOG34cC
H3EmZ56ot0CDmu+PSDcK2JZF7zN80QKeeceUPTG9tOQHRvRCW+AKV369jR0F
ZEuYc7WLWoBblMy9y4oCnLJqXhpDLbB4OELw1BMKbOa7P7jxtwUqdiuf1Nan
wPCZcikVvlZYdebw5LtDgbLsX3svXmoFUZp1zbyrFIg5LTWi8KQV9F16+K/K
U8A5/VmOrE8rtH3/oJknToFLKaN64u2tIPFPqMWYhQINMdXZR/TaoG7fpYCn
PWSQ78+ht37XBpTLEmz+NWTIYvr2pD6mDX6EhElm5pMh7N1b7tf4NnBvVggp
DyXD/oJndq172+FAKI/uiDsZHEk6XUKi7UB/3yI36BUZDPVkvLuft8PPdvrR
4/fI0BMiOH0yqB2qO7rKQJUMKk3MSq657dDYGRmtK0+GUpqdiMGednCtydUs
EifDabmlFclf7QAcK79a+MkQaz2i7s3ZAX/NpL9MsZOBPaUpdVy+AyoDJ8PU
6cjgPV68W/ZhBwSHUQaad5Zg63CyQYBzBxhGbXOp/loCK/WwH4S4DnCX3ad9
fGkJpjzc2BVrO2BAysEGZpdAq+yFdehsB5w6tRigO7EEBAfJJ6/3dMILLyD1
Di5BTHgya9zhTnD99PWoe+8S6OTyVrYe74SPyZvXznQuAXNbmOXG+U5Qmg/E
K7QuQTORgVv4eifsXu/Yg2tews4L98bbep3QRMNyXLlxCZT4t16/teiEy+Q3
3YH1S/BLwUYo5V0nrBzukLPGOEeH2Nkd0AlxSse/3cbY3PbR++2YTpAKBz8T
jIWC+k+J5XQCuUpaxb1hCUbT1Ie0qzohkyyyKx6z/6m+1su1uxPSs0Z7+5uW
QGNaQSYT3wnO2eXhb1qWgG47b2pwrRO0cmLucbYtQfVRsaA9+7pAdz2rIaN9
CTs34xSljnSBiNELof1YfrJ3OBceiHbBausZZ6OuJaA8D4rwvtAFdXpSHP7d
S5Dqs+9qvloXbLHb9I9ibJzotDL+oAskOnI/ne5ZAp7KtW/0ll1Qzpd5/v+4
b8RCXfZ9F9Adc/xXj9kL/D29ZRTUBdo812oMMX+qbHqpAbFdsIt34W4AFg+t
ZJf2j9wuyNbsDprD9CxTU909U90FD31KWy5i+duZohzm3i6YXc1v56pZAkk3
WQPFmS7wyjyiM1a2BMToTAazX11w4unbiW9FSxD/Q/hH6P5umCE+fzOQvQT6
fV9MEWc3HFwy4ZhOXgKOZVZ20sluOL+sX7gYvQSdjL5VHArd8Lg00MAqbAk+
iO6yvnSzG8R130eM+CzB30eUps9W3XDGVkZSwWYJit6avqlz7gYxnToRg8dL
YB0xJrwc3A3CCvd4XLWXYLq9xVk1vxsk/Cx0Ys8vQaNS6rnfv7vBS3J/SeKv
RXhWIH/iz/4e0LTYpPszuwj0p9o4d470QLmKUPTBgUW4ybnyZ59cD4T8s6s5
V7wIS4EeS/SqPRC9YxuWl7IIgXuPTBzU7YFm9lV2mchF6FxRqOaw7wFJAdw8
s+Mi2Dxrz+fy6QE6vIVakcUisE4aJh2L7AF84uf0Bw8XQavN0+d4SQ+0vbaq
vH95EdYvczqKNfaAF22mTZXsInwqTbOQGOwB9cuh7tNiizCQ0nFLdqMHvnFO
NZ7kWAT7Y8bK8gd6wbr3tBMH4yJwhq+dwXH2guGv2CDlPYvwg8Fb6JJoL9zh
ZI83/0sCPbejh1XkeuGivHdB2BoJ/myk71NT7YWFhZyPnBQSfLXGbajr9oJn
1OLo2DwJlGY75++Y9QKfmuiJBAIJxvUfj2jb90LPGVE63ikSOPest9736YV0
nrfX9MZJwK/mU/Ewshfc97d7RoyQoKqSK8cotRe4i0UVh4ZIYHw+M+5JSS+o
VA89Oofx7iwIfdbYCzZtvu4hgyRIFO72sBzsxfLzGtHD+OoXEzsbYi9kLRha
qmO/n2X5/fT1Ri+UlynswDAJvH0+3Hc40AcC46WbgPkT3eG+4cTZB4WLZzS4
x0jQ9DpL0VW0D1T/pCb/wuIzX1SW8JTrg1E6/n9dkyRgeNzD90G1DxbeP1xu
niZBxtATlgDdPnCPUrjShOWrrrFBG2LWB9xFRyMaZknYe9d3Lcy+D3qGePN0
iSQIUuKdjfTpA7aZPqF0TC+pguyBr5F9cJcaEP5vgQRdYpeaYlP7oDnsxrE8
EglexvWWJpb0wbvbri+CMWbjfJqR2tgHEvTF1VYYFwRuRmcM9kF6LCFzAFuv
tdc/KIfYB1diaZyDMH/rb4+5Fmxg8X/j0biGxfNpJedlyYF+uDYWGvMPTwLZ
Z5dNyjj74Y3Q1MYOlu/ARJ92pWg/JD+TuEuL6WV/z+xarVw/9Ge/zdzTR4Kj
bVtyjar9EPEwle5TGwlKLweIter2Qy6fnp5bHQkelPLxdJr1Q8sUQ7pVOQn+
SuUx9dr3Q9Hy6PabfBJEp1zZGfDph/FO5XChVBLgjg1QRyL7YV9O4qmOrySY
CHs2PZHaD5WNi79vBpPAheFvD76kHyazObzqXUkg4BZYN9fYDzQRyuzKtiSo
3uAvJg32Q0+dQ/NlExLsmb0atbrRDxotjalGF0mAXc+td+gHIH/w6yETCRIY
hHFvZ3MPQOExWfZ+ThIUX1o2eo4bALuK2s+RSwtg/u3ryRn3ASAyaWfaBC5A
hJ33g8vhAzDE6f14/PUC1Kq/DIhLHoDb9T5zVx4uAO/fa8sPmwag/0mNatOp
BejUXS3pPzgI0ke5E5Jb5uGf5PiCDP8gtPpsHtQtnAex/U08oWcGwXRjwJHu
2zy4F8a43NYahL5HMqNur+chx/9DXuaTQegdvvso2WgeRh+/IjC8GYQbs2vT
RbfmQZZVTbXx8yA8UnW6L3B6Hh7PyzgeTx+EVT8BZm/eeQiu5MvwKBsETt4q
GXnmeSiPoB+fbhsEpSzD+0u087BgtX7o4sQgLPQeTNv3mwhHVCYvfqMOwjtu
xofPlohwhbfF9t+uIWAypmNuxRPhxVph0gO2IbjNFx1YMEKE6JbYgR/CQ6BL
O+5U2keE5ng/Ok7ZITCaOWZZ2UGEXw52CnbXhsA4jLfiVgsRhO4YWfbqDsHd
lQsKWY1E0BC9+U3afAiuaNwrYaongtOObFfw2yFgfcMv1F9LhLR+gd0U/yGg
kTJwZ6wjwkAm4zn1mCEgE7/gL2G8x/O3aXr2EBgYesnEYOvP6E9H0lUNgcJ8
4+ffmH2Ds23NT7uHgPMlw44G5t+XvuRvHX4IBN93Sz9tJ0LxVLyE8PoQ2PUL
KtF1E4FQEmDotm8YmiVsr6Vj+TAH23+cPDIMFuInFFyHiGCOu/Xrq/wwuH2+
5m81RYSIwxdE/9wYhsMXvCvXCUSoXRTSu/9wGB5yjn26SCQCteagf7HVMCT9
lrYMIBGB98tm+WEX7PcU/aYCTF+1lwSKbcgwiNzoiL1PIYLd9Q6B7vhhOJdy
0X6bSoQE/tK7UgXD4PHNhaYG487fiZ6BdcPAa3ftSj/2+3/tQcWL/cNQePOg
zzyZCGLJjvNqxGFYq1o7ZIr5u+f0hPv75jBUGr/7zT1HBHctDfX9DCPgv3vP
RNc0EXJOKTg/4RmBmjLHhptYPUdpj+fWnB6ByBVK6u4eItANM+MFYASeiz7x
LW0mgmzuH3YXjRGoUK3+kVOBxY/f5VdkOAIicxS97jxM78MHdi29GIEAT96/
q8lEeHnt4Bsh1/+z95tpNoIIXg7sS/dDRqCuQlQ635sIUelcj4PjRmDF9/49
lzdEyBrjH6rPHYErR/G9EyZYvS+erjvbPQJJh+vTRxWIsGh7VsF8egQk1CzE
a0SIQJN8ITd2ZQTs686oSTERQZReJZqJbRTKJCqrcSNzoKh4k+2K0CgkXLf4
yIjmQMNK84Pj2VHwNeEwHo6fA/tug9dzd0fh1lTIjObTOfDf84TEazIKbzWP
SgmqzkGsrIWR1qtRSK2JdVwWnYOmqDfqVWGj4PqXIdJsdhaw6EW+9I2CEO5G
o+zDWfi5WtV3S2cMxHlsgtSvz0CnSOMNz6dj4GdkcsdKdAYIOu1VP9+MQX7i
O7bP+2eAsWw4UzRyDCiPb+R2NxOAnzwp9Ch1DAJqpF2sMwggwz/3ObxkDNp8
xQ51BBNA32PVk3ZoDC68O7UdqkeAF0Wbf+Tmx2Bc78XmkUsE8CDu2FhvjkH9
BXHeGTECRHLtIybRjUMWJ1E5j40AmTcZDUaPjsPlJ/cYc7fxUP2etZdVbBxm
Tf4KTJPw0J/DqXZdfhzTJ/482xAeFqaPVTqrjcP3jxWmrQ142GYXkS3SG4eN
+7Er33/ggfXaqYxF83FQFXB7752Oh+MOZwSF3o6DuWtalGAMHuTTz0fe9xuH
S8wffKrC8HBrTOlg8JdxOPrtqZ2hHx6MD13xqE8fh+XTKiY7rniwu6i29ffn
OLwxwp847YQHX1uNF2dbx+HeLgMlK3s8fEu6N/tsdBzOxQ1qZtvioWBAXz92
cRyeZfmOvniJh0a6x939f8fBP6NQlxbjUYVnqkxME5CdNtkbaoP/f0XceTRV
X9gHcGWWqEQRJZQUJRkqnG+kgVTKFMlMpQyFFBIyJpE0R6Yo0mCqkKJCkoQK
0R3OHYWfFFHkve9a7+v++VnrnOfZe5+zn3OefzaGfP1rNitR4OXyJO4y736h
rGDdUC0Kci4ENI6eILGwLazwkTEF355rSOwLJaEpFK3M3kkBzURYUecMiU36
CVeUnCkwPdYp8iyWhNKbQ7tn+lEgJRMpvuQ8iT/W5mLs0xT4nhGbv+QSiS90
jdp3yRRQleasbbvJG+8xidBHGRRYVy/YFZtH4qLAd53LxRQ0LQquMSkm4Zfy
7vup5xQEZAksc3lCYkXx+QObeymovLdg+Po7EsJGvnIrBijozPkeNP8zCXrT
zg+SkxR8kD38pIDKW9+geOUjUlR4bNhteHaERHXV7/ADclQkbaVopkyRWCV4
qGv3YirKrP0X3xRnQCxte5ruair0hdT7ShYxcKLr6eByfSqWBtaHb1RjgKms
sUOeoGLtqie5yZoM2By6XjBrKxU/4g953dJhoO6huNC/nVQ8ZMirF61nQPv3
KdchWyr8TN5xnhEM3Cb6qukHqKir2R31nwkDUnGO8p+8qLieMjMy24yB8PdN
wQ2+VPi7lkdYb2Ogb75h27NgKmK6xjeG8uzgVLT6/mkqlEzDZghuZaAxd1FS
ZiwV5YUTDUm8+/W/J7FTk6mosd5/x5QXP09nYvPZy1RMiB/R/LmRAZnQo1nB
GVRseBlamqvLQHRtz8TBO1R0+wyOpGkxMCS208GxmLc+JfH7vi1lwNnqebll
ORXGf5SrNOQYeH9Vax6eUzFgUqkULMGAESXDb+0bKgjHdK3ocRKFy6Xeqb6n
QsvvtNgMDu/98YtQl/tEhWK0N3mG93ziywfPivXy1re458nPlyRGJ5ypfxhU
uMRob/K+R8LT7IPRQD8V5/bHNHZeJNGWhOuUX1SwTlXL5IaQMGl/OPJxgors
yktVPxxIPFJQ3vtaiAanvz4em4xILHZPfVAhScNk2PMoJyUS5+8JzLo3n4ak
vwtdro7T8Xco4OBNRRrmhwUZtX2io/PMHuVITRoaZpuvzkugY2tDbfhxXRpa
d91Um+FCR7mUTpenEQ2fUgYUnPXoSMuYl2ZuSYOvvUXqxU4aLKvaBWWO0rB0
vfYVJ2kaKmeauQoH0TDSsfusYDcVGhZl1b/DaKiSbXyzN5sKka704J4kGgSL
pTZT1lDxctSWfaeIhpZXpHrliW8I8hv22FJGQ24acTWnvxcarAtURjUNB92u
iyS59yLtU0OXagsNT8Vj+wO39MCzbENz9hANup9L+hdMdUH0uNLjDN44U2pS
z5w98AnV3GdaxgQd6rT3NKOmDgS42RX2bKVjP+2GKrGhA51WKbmL9tFhXTYz
Q3thOwrXzLhyPZSON6ZvJPq4rdg1wAi9/IKOK2eumiu+e4uZXlG/dRvpaMk7
0mpKNuJJj1JQRysd75+bvrg80QDlZjtfGTodUw0FHveM6/GjsNHlohCJXpU/
CwKn6pCv4tWjPZvEsadl+X8N6uB4Y4ZDqyyJeuV8e+nIWtQlbtwrrU7iwo7x
bZJzXyL90H2zZHMSuOi1qFSwCtup22s195Ko4J4Us2x/hkl7pnGzI4kAo9TW
ytyn8N622GDWURI7CnVSMiIqoPCisrQwiITh4JnZzr7l+KBvr23Bq6NpH+/U
IaQM65enaiReIJFynv668nwJ+jM081dc5eUveOl9+PFjZMu+VWm8TSK4LlNs
4edHkBCeqSj6mESm3LtO4eAH+EoGSsW2kzhV+tkn5tVdCIkvLk79yquzA9dr
teMKoLm6ccctkoSlnurB1X75CD+pmFj6k4TWa70SDSIPeRn16i/+krh35PXY
iFkumusC6psEGdjjdPxEm1UOFGe/EaTzvlPSwzY7/pzOgpmOf84Ary6dP79p
maPNbRy1lzcZV2Xgj+6X0hf3M1Cd7Rsxh7evh+XVFwSW3ACjfoGSohEDhpVJ
A1Vm1yHZX1ulzqsTDP0vB38yrsJJX26csGFgH4sqFxhwGTH7X161cGJApHjr
+NUN6bgf6aNv58nAISkd3xbNS+i4M/+T21EGmvyVaELKaZhoqgn0DWJA66OY
raHMRagNHZp3KpwBjeWCVbEaqbCUlXkcE8PAaYM7ZnsSLyDD5eDgzXRefrpP
YeCyJNTHzE0uuMVA96GJtGPZiRi8V7WqNI+BqcHkMH+lBBC/pA83lTFw9HtU
9FH/WHjLV4p+rmYgZ1eq7ah6DC4Qnvm01wxkioyplvwXjW8JT8mxDgaWrLTK
8ngbCZEH7tFCvbw66yP1ezToDFa3Sy6dw2QgiHsO6XdPw26s4sWigf/NL5qw
ticMEUpuzuojDJhwzra2SIci33TWpM4kA9m60ItJOImWg+U3CWEmCvN+vRcX
D8GSEvEuW1km9H02WUuvD8L2L6UhbkpMbPTJXzTrz3EETByQ813GhLePJEOk
+hhebi2xjtFjIkqrT1tA3R+cI07DKcZMXKIeLP0i74s5F0Uu3tzChOLkRFqx
xhG4fnVsKbFl4lXO5M5NTQeRICDsW3OACUERd6/Tqt54tOzhrCYvJk6UqHap
1Xmi08Kh8JMvExxnpmWzqwcEAgTNacFM7J9V8DJwyg0rLhez+08z4ZfYn7a8
2xVWlfZxY7FMBEoXCnkHuSBb6P4r6StMWHzJPiO8eT+aNOzcF2UykSDjvOeZ
vwOGdwnMUM9nYoaVgqrvLXuYXrchiApe/OzG3fURNvCp+ddjXsObj8mAvL6w
NdLIu2G29Uw49ZDFU7l7UClmreDWwoT1Cvtw/SAr0LUmnx79zMQVTvrl7oRd
sDrbHrKMwoTuQ+u6hDmWqOm8p/+NzYRCQMbiFwIWvP0UOXJliAmBtezQkaFt
uHHWrmz3OBPVdtLZyhNbINalGSg2k4Vf63cUcu3McGK1oE6tBAurFsWXljw2
xd6uhw91FFl4MFEnMfIQeLk6zu+7Ggshza6aO+cZY3WMk1aeFgv93LExm/yN
uNWl0++kz8L2rX45s9PXQ2KNeJEsWMjNIXfUR+njZAzlcMs2Fma86HPVy9AF
q6t8RbwVC5/3zx1h/tGBzZrzbDiwUDRmkHhl31rUxbjnj7nxfERZReTFGmh3
r/d67MMbz+IiWqGWFjLXSKv5BLLw+KNe9u5bKyEZy6SrhLMQNTzHYYXNCoR2
V2V/jWEhT6SD0b5nOThr0lzTk1moV7gacGa3GuxiDy3ZeYXF67+FDOWTVfC6
m/gmfJsFt3Ve83QnlKGjLZtRU8ACa1NSe8bnxciK/b4/5BGL95+lLRKnqgip
r7UK2s9Y6Lu2z+R2uTzCta91cWpZ8MqJDH+6bQH6Yv2uZTexYK8iVrJlvSz2
fTWzd2xnoWL+gPJPexnUay+Sk+lhQVa0LSUrZC504350vGOwoPbxysbHLdLI
/dpwKWaABfU/DZZP+yUxb23mXuNRFlaqjju/kJBAZFzQ3NF/LDR0VxpOPBDF
4FeL1geibBi7/36jHiYMp7VLUw7OYaOMu87KepsgmuJ+71SWZ2NUa7e6wNkZ
WN/zXrJrKRvRpR6Gp4uniPnxoecs1rFRFdvTtaxsnIjusTIXNGLjX+WCO8+1
fhNDa9XFqs3YMBnaG2Bb8Itwjp+sD9rJhtA9TWO1J8NEc097rJYdG9/CJ3b9
bBsiNuoUmrGc2QjIvlYb0ztA3I2PFLzN65MUfumkFIh+J+R67ersA9jQ3tLh
aGnAIWJ0tKLmnGIj81OObOxRJjEcL7jpbRQvn63H8ff7SMK1t+tf1Dk2mB2q
H2S30IgWnUfPN15i44argtPoqW+EUUJc+M+bbCz3r3ovHfCVKOx1Mryfx5v/
aSdoeHcSC9et++NZzMata6vK2k9+IuISxJ8pVbAxcuRfTsyWduJXLyXkcw0b
O/Hxot68j4T7ugr9lAY23NkrO7eMvSdaE86PbGtlo668QY71vokgvrmXCXSx
sTTG0zYut4G4v25D4DMaG8edZuyKefSaUEiU1jnex4tHrjw2P6COSPjGHFr5
k40VPjbpeWteEqPrqh+Sf9kQXe3xZ45JNeGZmOZ3S4jX1+rNctOXe0ZsPX9i
d60kB+V2PpNSSyuIFSmO2qz5HCg7xD93ciklJNKIubOUOBhVdCRO7XlMfE9X
GV7D62sV6hwiVsU/IJqvirTbaHHwWTc3qSCykHhwo6/0lB4Ha96IBs4rKiBS
M1rSM405SLA96nj6Ux5xPKsk+NUWDmjMVhPOVDZhk3vFjrOTd/1Mn8HEiduE
fn6owWw7Dmq8HIa3q90iFt5zXqjjzIHl2+2jopbXiPEi03E7bw5Wihken/S+
THQ/WN4d5seBy7MPX9+2pRHVjyWqsk5wYOrjueUKkUpklg3efBPBQdHPD57z
HM4TkU/awvviOPjXNFoWwk4g3CsrDkincGCVoyTcGxxLmD2/Qehe5SBAxcBR
Mi6aWP4yYonDbQ4+FjicWkdEEqKv3AUiCjgYdhzTLu8PIzhvttJyHnLQ15Gw
Mrs1hGhqXFnX8ISD4LC0rHFKEHH/nVRu/wsOBFRuye397xhxoWX47NxGDur9
LiqFbPIjAj5+9tRv5cUjS0x6EnyIPR2VW/Z3cpDm0OFl8tGb0PmSuTySysG6
DyOJ+fIexPzuaNE7HA4uMTcdNi11JUZ7vDlvhzg4SQqK/S1xIjopFm8Hxzho
+htrfGzKnqikry6UmcFFpt2A04Z3NsRN5ryk9eJcHBzULe8b3kOEc0aPHJjL
hYvkuMJ6vV2E8/duy2h5LqTOPBH+yTEnNg3WaBUs5SKrf8PlVQe2Eio/cqSa
NbhY61it5vnRlBD6Ffff0FouOg7XBOiTIJijPq2yG7nokkjVJeMMifrxXY83
mnLRW+Q2lrLSgLg7oZPmYsGF2Mk34wdt1xHnpuQCY/ZyoTiV2CaUrE0cnfnX
+p4jF86SGXabE1cRu4Qpui3uXMi+Phwwy3I5sUbslexPHy6SPzSIxaepEHNm
FYwuCORComKHqXCJEjE8O+mLURgXlRHZyZW2ckTHHP+nbmd58Wkh8d02MkSF
jPX1uCQuTm/eFfXHeg5xTc4gtOgSF893mI/q5ksQofKL9rfe5MKg2U693l+I
cFKcMhzJ5cJdoXQvx23C2HgJqahwn4taw2PFCY3/GS9WaZgkyrj4//MbBZYV
ffOo5puunvIi4TXfr1cGZhU3852vZR/V1sF3grah++8evnfoC6qZDPDdZnKp
oGN237QXBjLutcry7Zynd79Zie8+kc5Hr7X4FmxWrCzbybeuXX5zejLfV32e
/bCZ/X3aTpcohp8k+6ftNmrwVclgcNoaXycjDBYPTZvyiikbo/9j2qqnArvL
zIen3dtTQT1s8XPatuaR/XWuv6a92XNqQ5bnyLRrdqiVu3mMTnvU8INeQ8jv
aed1rxl7dGps2j7u/je0I/jW7ntg9Cia7+pxraiHSXx3LNSUeJDBt5D9CsWi
Wr4925U33REfn/bK/a50NSm+h+i3Y/Lm8R0+vPht7iK+0+cq7c3R4vv1bnnP
23v4Pvdln8gSO76tXK7dzXTku8dvwUCGB9+/kmVP3Armu1LWdqFiKN+RGemV
NyP4liyWmboRz3ebrnW2wnm+r1Wnbb6RyrezWRtT/jLf/3de7LT/B/CNv9c=

           "]]}, 
         Annotation[#, "Charting`Private`Tag$2482#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2748608, 0.1822636, 0.7272788]], 
          LineBox[CompressedData["
1:eJxEl3c81+/3/5VNmSUzEpGVEZXxOkKUCEUhyUghkZFClKikrDIryoiyV1Zy
2XvvHS/j5TVJEqn8nt/b7Xf7vP3jdr+9ruc55zrncV3nXAccPM477aSjo8tj
pKP7v/+SndxhSUmbiO7//1nHEt1i4/7jSJs6s6iY/3idclvo8bP/uHl3b/5t
v//4uknkkIHVf/yxn+3gOv9/LDdGX3M+ceN/fHfKg3Yj+Nf/+KzKoamN++v/
45hqtZQPgT//x4JadVb5zmv/YwXO+AHl6z/+x6Gj8wa851b/x0ZDEZGcGt//
xykHg189VV/5Hzv1T0qWn6b9j9PojFIvnqT8t9/Izr/2J/7jsyLG1reU/uO1
E+d4Qw/8x/repo+LdvzHpAVzl1315P+xcscVpXqd//iJ1XREl/p/PEGwJY0q
/8ehDHbpy+L/8bCWw14R+v/Yv/D65t0G0v+4G0ewCPnyHx/sulEcWfIfdxKd
b35I/4/3H7w51R/yH3sVkU9MB5DQx4exKUlHduFawC2e6E1COu/VF3jS9uKE
uymrazdJSJlOdstSTgR32+aWCd01EgrXvhh9PUwc10Si5rDbkJDx+34hXwkp
nKCfO8s+cxLiojPJelwri3NnXr4mbkRCRwudkgwVFHENcR518nqYvascv2ro
j+L6fzT8fa5BQjk87ctB/sdxM2b86iRlLJ7mx0u475q45QI339MyJJSWcrbz
1fOTuH+764ozD5CQm8seDzbGU7hdbnuXGQRIKPnoFHdw0GmcULuLrCMXCZEe
KhRuvjDGyUjX3KhjJqGAOsndrngz3PEnPBmi20Q0pXNU59I/c5z+/PWZwHUi
ukf/y09QzgpnofNFeJJKRE/2rpdQn9rirr3ntFJfIKKOV799Z77b47z+OcYl
ThKRWkaeEs8ZJ9xDm4q+9QEi0ndevSj9xQUXVbWLw6KDiPplj93HybvjUvjt
DUvqieihbjH/VKEnLtf38xPuKiJiSzyUl2x8B1c1yNrgUUREsZTXJ21J93Bt
yrbbXR+JKGyNZZN77j5uNLpYQ+49Zm9AP5zubDBukcZ0LzyBiErlWfnvSYTi
fhpdLl2KJKLjFUpNEsJPcQw5BSv6T4hI6cnuX9spz3E8rAzyHwKJyDLbJ5bK
FY07cMPShf4OEVnEOMhfPv8Sp9iU+8HejYgUu3eUnGyMw+EO7sAjRyJaadCh
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
I1WOSDKoPutOxfFxEuVlX4Nd5BiIPquYI80ksUr0UJe1MgPG1kkpRW9JzEyg
AtFiYKvvmfNj90ic6no+qG7IQM4tneHN10hwVFbsUCAYkGri7U+4SMLuUPKD
2VsZmPBrlVznR+JV/iyx31YMuP++cOnMQRI6X8+4Ddkz8CZKV6zMicQdQlhO
ujCgLcMM+WlNQjJir0KHFwPlLU0jNdtJBDc3BtT7MrD+xKnsmZtICOcbt74I
YOCZjMp+K2MS/zhna+WcY+Cs2tQ3K9eSaLinGHM7nLrfvQvBlmtIGH6K4cVf
ZoC9ZIrOUX0SmXo/N4deZyBEcWbnTj0SMkE+6QFpDOjLOSmNGJC4WE37efA+
A/y5efuTqPsNzbT6Z28uA2mzpzw2Xk/CdVdFsWUxA3tVlOtnbSDRnKQpjQoG
Ro/s3Zm1lYRJX9pR3ToGLj+70bHJisRjdcm3qs0MBNUox2+xJyF/NERDroOB
vG/3N6jvIxFZPBg6k84AS1Pzy/TDJDzN3pkM9FPrX6hxzOlfEq0xSO4bZaCg
ofj3oxgSG9vyx/77yYBeoNmVb0kklD3i80okmFh36EGdYiGJj//uVjm/mgkB
U1z95CcSW+urg08aMPFhW2JQ+QSJYkm9Lk8TJprYg1WhM1hISJNOMLdk4t3C
7NfTVFkQ4VwcNLZjQkGkNZmuzcKx1SMWWs5M2HnJp841YaHXb/8DFU8m4htd
b23ezoJlWZuojA8TMtfzugW2LJRONXOb5s/EKx3C8boLCyssisq/nmXiRFNz
24aDLNy8qqYgDGViySGXXf3HWZjelRhAi2Fidt2suLxAFvxVprW2XGPiSXOL
av85FlgHA7SqU5lUP3Pt+YowFmzyOdGF95hw3TnbY18UC1Xj9rz72Uws/HEs
2yOauv7o8P4tRUw8L3vVcjWW+n7uFQa7nIlHL4r5rpep9buscgmrY+LxfCst
E+r8hI76LtUWJrKPsf0UIlnYauXpUPOBCd3Do5mzQ1n4USvS5tHHhHP+qtip
QSwUmKRZT+UzETHm4TdBrd+zyKgpY4jKh5jHvjQqPvnVH7ZvnGCivbE4cPMe
FprvnaxjTCGx4OqseAGVr4uKUpvOi1N16+jyMM6IBcNr2ZWLZUiEi7xW/UPl
Xyi+3filIgmpk7WpspIs3L7IfuaqRiKZ9Upm9TcSNt/PG/xeTUJ7e45kNo3E
jJNKT9KoOv987E+TchW1nwUvNE0JEgVJNjEJ1H497u7wmEbV5efCKFNdan9+
3BV3T3EPiUJ65vAUExKxDatUytxIeMidW9Y/n6qvDQ239lJ12KO02j3qE5Un
7Sk3koNI5Nz4mHbnOpX3B2nSRqEkuk937bQ9QD33xevjPlJ1OdWp+8/0tUwE
S/pFLUgjEbOioLHiPQM7B9hB11+SaKdJlNZw+jDV68JXgwZq3yz5/E7yRB+e
0ZT829+TcC6+bPx1rBcqTQ6+MiSJ6B8ZK2f9od77jxv2XRVjYbHOSnepkR4k
Hsoxu2zOQsuN11vK7nViO2N79WobFpTbd0ddXdCJX44c06a9LByc0PtpG/MB
B7Ypr53tw0Kh+0nHeL8OrFOPX3HpCgvaxDvHzTva0MPykwxvY0E6y621260F
YrOUc+N7qPfq5dKrvOBmrNZq2HGLxcJ8//m7R282Ifj0okuFIywsfVutu6en
EYvm1ImSMmx0aRU5usTVw0zv2N0BRTZ6bDo9PWpfw8dRYeOEKhtqdxSv6/+s
Q3mGb8hcA+r4rE0zUi/UwtlQboKwY6M+Pm7f56JqhDlVJVk4s7Fyg4JB9Jxq
5Jz3NnTwZOOyYMA52qcKPxsr/Xz92WAMdlruc6qE2tAh6TPBbJQYLqm5saYC
lrIyT8LC2IgN8TZqkSpH2r6Dg6mJbIgy5Q4O017gddi8yw9uUeer1z952foc
g4/KVhVmsnHJJ/BnbMMzEKNShxuL2BhYwvnFohejN+o561s7G5kn67447XmK
6XkeF8XobNh2Pc9cfPEJtNoklszlsDFe6a3/oroAIUrurhpjbNS8fCA1JzoP
WZtm/9L7RfnSgcoQjVy0HCxOJaZxcJJXsM6hMxuLn87qspflgMFyCirc+Ajb
OwsD3ZU4OMNfXvBo4UMc/+ki57uMg7UDY5w7I1mo2vrUNmwNBz2frV3SGzLh
1rO35ak9B6ketNonE+mIEpnmW+nCgciPwVb3hekoWJY/u9GLg2qPGTvXRN6G
yHFRc2YAB3kLidacsFQsv57L6z/HQeapfxIPiaZgV6ljxLdwDn6W+m81LLmJ
DLGcGqkbHOxIS0/RXnIDjSscPBRvc1AxwIrqH03E8E6RKRpZHNyt9OnmdV/D
Qv/Hd/TyOIiIG1vFqkrApmQ7gijhYLv8t0dhhVfhXfmbZl7JwVL3t+uX1cYj
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
v/4fg0jaiA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$2553#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2480688, 0.2797284, 0.7879248]], 
          LineBox[CompressedData["
1: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
ZqzgZciC9ZFXbtdeXtKuftNiImbGAhW7HIViL6a2wRoD9yZrFvz/36v0OnyO
uXlp1XYNR98Lu62aJV07WO+56ruPtZev+q6ag/5BjD941Ttzyy45xa06e5Nq
8NbkVavfKMyqzFr1KZWcqY0fVu1XkXyncGTVYw1hYb93T/1n1z1c+W/lVr3w
OLjzhOqqN58I4E/SXTV03X5z1GnVyaP2JWG5q7ZfODi88+D31fdf90lcFf6P
t59yNDj+f6ziOOVu9X98PeJf051V21Joku4Vq7bue+nWqPnjP+8dXvE7KDb9
n8c/kfmD1H/+Z8l7HkOlhjP/eXSkfMLFaPY/Wxj6s+rt5v7zMcd/msmO8/+5
5oRUmf2lhdX4HP6q1nTn139OG1JaLLy3uBpPhxsJyn6rVmbkaxUGrrr6t0JA
Qdiqe4XkufMTV81hJSuaU7dqx55dOulcv/+z3Hk7otTmVU8T3wSlbVu1z4zY
l1SRVcfw7jR7q7DqBhNhxzenVx3af3a9uOWqTS/GZyVZr3rkuuBU4qVVzz3j
v/3aa9Uf+C2ERL1X7Z8Y8+GV36p58vj+JTxedfcB85QdT1cdXx11LCFi1ba6
3WThF6v+39///ef/B1AknO0=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$2624#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2484884, 0.3863264, 0.813373]], 
          LineBox[CompressedData["
1:eJxN23c81e//P3AhVNJCdlZIZRPi9UTIyMyIKKuMaKBBFLJSISsUCVFGRkRS
F2WFyiZ7HJxphTTwe31ut+8vb/+43W/nda7rOtfrda7n8/HHEXK6ZH6Ono6O
7gwDHd3//u9v3RWZkvIL0f3fn20CyTMhccPRdrVmMQ83vEy9zBt2d8MN29te
Xfbb8HmT6O7jNht+0bFVZJlrw4e+M3wwT1755+tDl2Zcg3/+s6G82NBKwPI/
P6xWSn8euPTPPOq1Nq/cFv9ZakdSp9z5H/8c2kc4vsd44Z9PdD+I3nF0/p/T
RYLjI1Tn/vlcx+D+Cr2ZfxaIac5K0dhwj2GlUIDyDMpYTr/78fRX9RiWnKdn
ZGaQiBLTVnaDcXW9+nh+TYkZlP4q+8qRVar6ppDgxyKCM+hB/DPPw30/1Kuw
S9xMXDPoe/r+nyz9P9V9/tg9Iu6YQTIvK+8uVP5RP1RpwNHCPIMiXhvyDT5a
V5/0VY4vXKeh4UMMdZJF9Fi6rNiu2J80NEd/UPX7ga2Y9cyeGO9ZGgr2PNB3
rGMntjN/03bLaRqKslbf8ziGHfvsOht1ZISGTHQwFt1CbixEdIiFp5eG/m47
PRGiL4gdHWsO//sVf30p6aNTtQi2mFbJONJAQ1nDHc+0pMWxQtuckNoPNBR0
WTYwzecgdn5vAl32Gxr6mG5MmWSRwfZ1Bd8Kf0VDOmGMXKvWclhf7KW/bjk0
1HShSps9VwF7aGTvb5hOQ5WkUpOiSGXMYKvhyuEkGips2fLulJ8axtCofG1n
NA21W8ns2aSogVXfEVtcCKOhuDvbJ2h3tbCrGuze3YE0xJtxw+Msly4mtbpp
ruIqDWVXT8y35ehj029nvVK9aOjwd2M/LUUjLOPaECXgHA2Rq6s5B7+bYjby
Le5n7WnI8bJYzkrCSWz3XOW0piUN9YrEKnKYWmEtBTnnRI1oyKj3V53sNhss
1D1hgkmHhm5M20y4HLHH1MVCHElqNDSh6SBvTnPAlscvjbQo0NCW2D1L85gz
VvTU3v7VIRpy8Khp+pt8DnOzMxyIFcXH8xO3n7jnjglxq9j48NGQamT0/Odb
Xlh/t1ivJTsNJbT81uqrvIzFx7FbKrPSkL/2LY5ndD7YCRP6Th5GGhJo+NpU
uP0atpl1znT1DxXVHt8XUMXjh31oGvo68oOKXD5fkm4UD8Cuh7Wc+Eihogpi
1LlHAkGYjNbb5uwJKpreRG8ikxSCkdZy9CIGqIiT10/58/YwLPNdQoN7JxXp
KswJOYVFYLY3QrRPtFBRTkhm/WPxe9gexcsfpT5R0c4iV752thisdd5eY9c7
Kqr2SlJhuPkQC31l+OFHKRU5CVql64TEY+oXVNR68vDxHrpigteTsGVx8arK
TCo6QO83/PtCClZEYFd+nEpFrD5Rt7odnmBuz+jfBMbh7z81zjQ38BQTOjMn
7xBFRcTHka8eHM7E+nmGS7RCqChjW4aNiFc2Ft/bIr3fn4qsb1Ywvi3IwU4k
vC1k9qaiZkGpt1jmS2yzWe5Bsjs+ntjeF81shdiH7YkvWx2paJUjyDBfvRi7
3hwiXmRDRU3Ji1rzP0owmYjLzx+aUdG2X7PGoa5lGOnYGRFffSoKerFv4N3P
N1gm3YlnVppUtGRt4voj4i22HN266qhCRam21+62SFVjhvxGtl6yVMR4j771
9hTCMvK/vLlxAN9/++PMPN9qsUUV4z2hQlQkce2BxGLeJ0yv6eulGG4qulTp
mZvWXI+lWZm0pu6iIoZPbxQNw5qwBcI3iZwtVJT0ha5uBVowXR/TsJJNVBTS
Z2Ce8/sLlrqpfaz6FwUFS3d82v6yDZuNMcOa5ilo8FdwhPbzDkxboCO1k0RB
SnWyhjefdWHJBeY/h8coqD16jK00rQejqnaeJH+nIE7f6kvxCt8xzc8ni5fa
KehtcNw7tz2DWJJ1F+umZgqyi3FjxhaGMfKkhTvrRwp6Zfz05V3iKIb5dtfv
raIgx01syVfHx7F4eithkVIK8vPqrPw8R8CIsT23pPIoKO578nf+9SlMbZ/1
gEomBXm413j285Cw2MLeIzqpFBQgaKB8mImKTR49lWAaR0EyvZ0MQfMzmGpz
39zpKApaaHjl6j4zh0WfsjFyDaGgA7GusqZRC9j41PeX3v4URFVyn2RPWcSO
XLVluuVNQReHPFK+5y5j9xkGnO56UNDsHU+j9Dcr2OjD0yjBiYJ6TC23uwv9
wRQEB3kzbCnoV9V155FNa9jdV3Y38s0p6OzuL4OSV+hgWG2o640BBWkdH2Y+
P7YJ5FrsZT9q4e4JvLk7nwHCbYYffFGloM6nXiwfXm6Ggekz5D45ChJxt090
f8EMMtdGdAmSFOQjZyTMkbsFQhkdsmaFKehbXI/2/mOs0Bc3uv6bh4IqBFT5
r9LvgMNCjnZMeyhItPur//joTuhRd+LgZ8DXq+P9iUGYHSRbx69I/CGjEwJ0
6q/pOeG2rfNX+R9kFLb84I3TxF7oIk5IAoWMtuyS1I+f5AaJ6y4RBhNk9Gzs
QfPUFT4I2Dw5YTlARqql84aqawLQHn9Ow7GTjDRq86Z06wVBTHjqiWcLGXFl
xCX/VBIG/+Lzv65/IqOzAfIvz82IwFds2vLOOzLKOdX1tvP5fhD54loa/ZqM
3ihcbda0F4cbp4lsqflkZCBlY9jlfgBaSW4Xnmfh43cN3qspPwiCN0iNxY/J
SNHfobVgkxRcZfIQrY4no7kd3uGtYjLQnEAOarxHRvrFtaznkmRBQOTCUMcd
MvqdESkxwycP3iUUleGbZJT/0ET7epYCNIJnEsmHjA6FcDrQSSoB31fqwuIF
Mtq/fEOWQ1wZLtt5mdC5kJFv5x0heUlVqCfT8rfZkVFIcfQus8NqwON3kWWv
BRllPOAWHNbF4CLzrIvwCTJKtmF8jXw14FPipdrD2mSkRP1jubNBEzp+fFq9
d5SMiFozXtsVjsGoGZcqWY6Mas/9zS3u0obZIs9repJkZL9Ez/y8WBfWtteW
5giR0UrolvMp9/WA1ZNjlpGbjFrYd9Y/cDMA3mb3g847yYhp7bEQXdMJkJT4
4FrLTEbXrZLrnkqZgHL47ux96yT0yLr59dNmU9AlnB8NXCYhtlAm7Q8i5mCp
9Y5vkEZCw9d9WJsLT4JLxg4b1UkSenVhtKv7iCV4rzknJg+SUP5Zo7SxWisI
sqtsX+4koft+fponi05BTBUrm2ULCR3bTdi0nm0L6VyOBq8/ktDvPOOPeal2
UHCtPHxXFQnlhjdlfWs4A1VdWz5dKsHX86S20C/DAT7LnVn/8oKEypfS794b
coS+2NKjhzJIqMs44FwajzNMzTDdiHpEQo3vVZvsM1xg6cTpMmI0CW3hygk0
lDoPjPlFc7rhJGTovUtepdoVhFxPuTNcJaFME/UTX89eAJn6gueOniQkWHzh
+lMTL8BENo0jZxLq3ZmaeRkugVGwpYDAaRJK2UnJW22+DHYjL20DzEnobtjL
c7mrV8BDfS2pX5+E0n67CprJ+IDfY/NOZU0SktLq2aMX4AtJ1n8Ml6Txzyf5
s97X6zpkl5tEnhQnoV/pzPu2Td2A13uy60oESMij3Hm1LNsf2r6dUL+4nYS+
6kftH1K9BSOHn/m1MpLQ2p2jJNU9QTBzb6lc8i8R1evJK69JBMM2vXSpaTIR
+XYI94Ra3AGenAUPnXEiEpW90G6XHAoSjMdzs77jr4c2Wa9NhsERp8cTm9qJ
KL13//BT+QjQrZnd59BERJXHTpUYJEaChYC23QdERHr1FgHbRKLAOSA5ma+C
iPJ0zY63Ft+DIGXNXd+fE5FtEffrDKYYiE5KNDqSRkTqWm83Z12MhbRF0t3E
BCIqLZgsWbJ5CFXFcfTmd4joZLyK5OVz8dDENo0V+xNRR5T5tc9+CdDrefQm
mzcRyYZc+CgcnQiLEoQfzQ5ExFGSmLjGnAz0EcoyB04RUapAhTebQQrsmrzv
GWFCRB/izU47pqSC1DPFyWMYEWWffyBtFpIG7twRPdW8RCSddpxcsfQMGJu/
zL3aQ0SK5f0uqh8zId2ffduzbUQURH9rm/nzLOgaeAZhf6bR0JO6U8EXnsOl
+0Sb6z+mkXpz9u5ftjmwVV3a150yjY4b9QbFnM4FjfTqF0YD0+j0STX7aruX
MGDM8Ak6p1H956bywit5cG1df0i2ZRopTg8nnnyYDwUOvbs4300jduFtVk/b
CoFLZMF/OHUambMTP0S4lcDrTuXEtrhpxKp+3ZuNuxSMQ28XfYzCxzvHJJb4
uRRCJ1kJOf7T6MXf1KNlMmUwmytudMl2Gv16JxH/Biqg4ZD9PjqeaTRHTTML
kPoAjkNZKgu7ppH/+y9S5oII/j4gnyRsmUb0jWub2bfUgNzs9cimX1OIv+Hz
+yDGWkgriZuP/T6FmCuYD1J3fAJfpaZPQilTiKnipUOlbyOIaMi7HeOaQoXC
pTLGwW1wo8bIKXLHFFpMraVj6GmDVg03uy9MU4h+Yvup55LtcE0zzdR6aRJt
9clhIne2Q7MWs8qFjkn06K7S4SCRTvDWGdgSf38SJchyHuop7IbG+iWGvjuT
6MXRo3RP/nYDn+7ONb6bk+i9jkOXo2EPNOjqLOS4TyLWp7JX1yZ6gEevqL9K
dxKx7LJaDN3eBx8N7uSP000iDtGAz4sK/bC3Je25+AoB3elL51n06QdPw8qn
nrMENH+/9sKP0n7gPEGLXx4ioEyJGIvN0gPgYWQdsPUdAT1/9DY/lmsQ0Jcr
10xKCUhY6pu9pukgsBvfv5zwkoCe1hF2LEQMwgfjWheBZAIacnhZnTQ/CLtN
DxrJXSWgGNQh4FQ1BK5tOsevexKQ9Xv6eSJ5CKpNHTSrnQnIliVS/xj3MJw3
S1TUNSegfYI9S7d8hqHKfJ3fVpqANF8EjRbzj8COTm6up2IElGv8+YiPzgi4
nFTYTeDHneHLruM5AmwW7kwXWQlIylX+nv7bEXCy7JwJJk0gm/CVqmyRUTDP
DWqcHZ1AplwDA8wKo3Ds1+EM+74JpJP3/q+H9iiIpkWaqTROIBYmGfpG51GY
IqiXzWVPoIBDDz8vpo/CBd8XfmcdJpCLsIBWP8sY2DVYmn+xnkAnY4rCDTnG
4AQXw8GjJhPI4uCkD5/QGEhV2w9yYridTY0/KI/BHMMe+Mo7gbJk+kLpzo+B
b3wgo3rvOJo6L25lXTUGLpOSQ3lfxxHjU7+ga3VjYHmkr5yrYRwJ9bbkJX4d
A6UBOdfFsnHU/6Rpb8T4GKwIEz/nx42jI3xWU4NbxiGw1DyGx3gcafFc1Nxm
PQ7h7eI8K3VjiKx5Z+r97DgwXGts+1U9htoHY7UyV8YhiMc14k/ZGKq4np4e
vmkC/J1zFteyx1BOuJqnwZ4J8FoS/bY5bAz9VMKWapUmwIJbOHSPzhiKYh0J
FAucAGFHvhmp+lHkztVvb7GZADfHhEJbokaQmcnymZfLBCB+Zinx9RtBVLXj
h7nXCGBVOjvE7zaCwiWT/0RungS5O++PXNYZQa83ux/SZZ8EsqgNhZ1uBD00
CzNxkp0EW7dY8zNXh5Egvffdqx6ToDy7Jjh/dgjt7s3vlumfhJzeSaNU4yEk
7CSzQ2hsEthrWv2PqQ8hWVqZ3i7iJMzFpnYl8gyhse+ETTNLk5ArpxSp2j2I
2GKzfDJ2TQHnNa/ZOwaDSKXw3MtOvSlY/DvwnlNxAH3sP3BQonwK/KNyc6ZF
B5AYuRNZv5uCTVw+MZXsAyj7bCtHeO0UsMlvdbRd7Ed6D590v/syBRLuyozp
r/tR8fLEo/nJKbDrTjDYL9ePLsk7ifByTENdoVGvvPR3tCY/G/nWaxoMjnLX
MO77jpo0w+KWvKehvYnwopvtO3powvtE9sY0DE/c9L8+04c+sS9SnoZMwwp3
Hv+7wj5kPX+1gPXRNBwKZ3LROtSHGiV5j9/7MA2JZ9Cc6YFe1HpMgPUtCxFi
78mlNO7tRY8c/4rFbCdCVOVzTYypFykfyNA5vZsIQbvvxx2c6EG+tV7kYV4i
eDScUmBK60H8I988C6WIoCG1cP3dzh5EsB9LPX2SCJRV0fX9K13IlCy6bT2F
CJppUdv/NHQgG24y30MBEnh7ifh8Ku9AKSW/kb0wCbLVq/vuZXeg7/rbnCXF
SMAyTMviC+lAMrPHdCsOk6BNwEwVU+9AdtfqAuLUSHAmY69r8Ot2pGah5XjN
hgQ3s7JrmDPakIel27HFWBIU+KiLtUW3IWb3SumzCSQYPtZzLzmwDWUFsPA1
PyKBFoHZ+sDpNlTxh9v1aToJtu6/QDPgbEPj0XUZ+gUkkDFyVuDj/obEenwG
MhtJcOFk4LTEQivqoeebDVglAR12Q3JLRytK9H5YG0pHhgQJHy9SSSuyHGdK
uM9Ahg+rbj9eXmlFHU4/ksK2kGH3C4t1yfkWZEz7Ga3IQYaqvwf3Hp5rRmeH
bQ7qHiSDybSY7fa2ZvRKIl6FeJgMhHahNFpRM5JdGYiLlCEDW+5ekVeXmpFZ
u8mWKEUyOJoxSEvPfkbG8db66kAGlpx+XdmZJiQ/8Ydr3JQMabHdd3d9bULG
1wtSV8zJIHezrXW+sAm53r97Z8aCDHamDealXk3I/HnhQs8pMhT9LjkjT2tE
pRm/SjQdyGBlcveaIrUBJVv4VBd4kYGiEvqWo7UB6Q3uTT9yiQxBorf/LuU3
4PmMSxddJkPeL9+QNxcakCZbjMkXHzKsZjlEH6HUoxsMWwWy/ciQvXIkR4Vc
hxTp2260hZJBSDjE7VxjHTphRa9sFE6GdMNWyYfZdcg5T+Hn5wgypKQ7FBHP
1KG3K7zBdVFkiNa+W/mo8xPij32m/CmWDNdj+5uXqj+iZscr58TSyGAgEThb
ElODPpX7Wz2qJEOjWWPJkGcNajS2ZfSqIoP2zV2+WwxqUMu0SqlWNRng6/MV
B8YaZHSaIYSuhgxuxCcMggsfEDenP39sIxmOBoHEYF01mjze8HGqhwxKnZ0F
8rer0XKo2btvfWSQEXOTvadSjZ4Hm0RW9pNBtDVWVfXVO3SAKWEsfBi/X1zj
J5IfVaGUC+StDFNkGC8KvWLhUYlcPii+xxbx+R/lTxocqERxBEHjniUyPLnV
YaNJrECmgh87XH7i+28kqCV1vgJ1fOaedv9Nhs/kd7tZnN6g059cAuTpKCDW
MR6+JvgGlZ7cLZC+iQIhb7f8WRwpR/47NqvN0lNALdJ6Ysy+HIHT/O+YzRQo
3v/j9TubMmRs/PPlta0U2L6dR6KUqwwpXa7kfbKNAh6LGk9e9L5GswLHnV+z
UkD0U3RoouVrPE+6LIyxUSA4r3zlHvtrNJXFKTy+gwLDDwc9QzpL0QvzhfmB
nRRIdpC0vGRWirQXfv/5spsCS8fNPp/bWYpmth7LzttDAXPpG+p230rQI5F7
JyLYKcC6Vr9f36gEDesFeh/hpMDtx47LwvrF6GhFjt0BbgoMhkR6cLMUI+20
KP5vuL27zrzfF12EjO9cHPblocDkld8Pft19hS7csaDl8VIgXUPv2hTzK/Tk
iDf1CB8FTu1IOtMZVohaKTGUOtytBbLShcEFyCDr9Ol6fgqE37y9N3U9HxkR
kkaPClBAw+DLenhgPjLd33GuFHfZtFubg18eumXzSO3OPgpcfPOm0ujnS2T0
4/DbSdwSYYzPVK++RHwP6hT1BCnwWDjjCvuVF6jOfLpiFrfFPM1m02wuir2j
n6MhRAG2mqNaM565yK4sP+Eh7qbou5ID5BzEskbH14U7xL53d5NbDjqy89oQ
hzB+/w7t/1M29RydE6akW+Ne/u098czlOapT1w1Pwl38uaYlejwbrQeJGrXg
9khmK7vpkI1U6+jZ6UTw++dq98RtOAv5Mo/1K+AeVswLtbTLQh99mI+44E5m
XPHU6s9E2W5qCw9wm3XqWEqfykRh9lcKK3BvzYxX5+t5hlzNc9zGcNddHtu/
xeIZCihh+M0gSgFltsDlcZMMZFnjmqaN24o2G/Mu4ylayw+Wd8Gt9mFSruRZ
OkrqGl24iVs4ZqA7JzMNHV6F0njczA7tN55kPUF1+59eycdNlWnkjct+jLKY
jtXU4u7Y9P5DxPNUVP+tKrEDd2VHqWNgTgqaTpa7MIE7PesFo09uMtrilKex
iDvUNz3X7cUjNL7DIIN+P74fOgkGZ14mod+nyGe34zbljKKdzEtEezKj9nHh
Vpq+Haufn4AOUSRHhHHzVV6Vh4J4JPAswl4SN/3dCz0KhXHo5drmEmncRBtH
P8lXD5GCXSijIu4vktZ8gkWxqOYt/SlV3Od/ptw66BCDbKyku47ilk0Jq+N0
eoDeU6ot1HD/Vb2yld7lHhIKNuj+n5sG7Uxp5+6iMM4+S3XcCbf0kvpcI5Az
fMlVwX1WUGHwk3sYumRmP/+/+SQ/7hMuunAH3XSmqcrhXnbe5pbqFYws3Vm+
H8Z9Z9vM6W0jt9Bo3514Mdw8JvXTY+P+6ILeutE+3KVxT3wqp66hnxX+LP/7
/Po9PuvRZG/kPd5SuAN3jXwSZ8ugF5ovaU3ajHu2SlvqBuEcuhz85fYffH9l
9kdc0/92HBnzeB+cwi0VEGjJKCoDHitbuftxF5nST+X8OgkRPVlMX3H/4c4+
5kdzh7kibuZy3M/WfL2dpgPgaYUGfxDusCHjH/VXgoDjbMAbb9xvjzoX9l8K
gSimSpNz/3teVu4JMXqGQ/ytPwcNcS9eHtpi7RINB4i7znPjTpheGVOUjQUd
k+Ly7bhfcTKAhsxDcHxjvJke94Tv3l8WUvEg3f53koo/vydkNbxuST6Cw39n
dBpwn3cwaI48kAwTOWP273EHxViIx0ukQLJZ19Uy3GU0t7FcsceQFn2BIxs3
f95Dy3bhp5AyVxsfgvv33M5BxJsBnl9YT/jhnmK12b43JwOenaD7eRF3h8Qz
7KLMM9j1w/aaM+4P2qRL9VXPICSlfMkad56D7DM+nUxYgJ1XT+BOCvDr8PmW
CZPiSyFquEOSaxlabLIgxXXG/RBur7ItisKELDDKnTblw32qzey838VssNBf
+syCW5ua8qhtJRtMRcWwefw8kGEZbxK/8xwM161Kv+PmE5X8fWt7DhzvjxD7
iJtFw/tgz6McKEhRvJyBe/F0ld1h4VwI3SOtdgv36HX66NCCXLB/IMFih7s1
3gANKL2A2kXnMHnclUVxc3K1L0Bh30VlBtzZLf1CUYYvIUf/BqUDP89ip4VP
jnW/BC7fkPRM3AEMF0KVHfJgW65vgyNut32vy2PIebBH+z5hH26Lo3+mpnzz
gWcsi34YPz81rI9xYev5cMmxeWs87oM+9/QT7xZAb+FvTA03Z0ynP3VPIWj8
lvT533lMn89bcCy9EF7ons6Nxj3T4DyUKvEKtFnqs4Rw94/nsy2UvgKz2jtT
/zvfG9Z+gL56EZzx1zqgjbuUR+1KRmMRzJ9awJrx+qBzYMpd/GIxPBGXeFeB
1w/VI1H0J18XwzzbMT8p3DI6Uo9vrRTDlOawxD28/vA5XmvtDimBOuf1IsDr
0+5LPOc2NZXAH7fGlgd4/WIJ/LB6aHspPHJcPtHMhe93MpN06KNS+GZuYXJs
LwXIOXmNRYOlkFglfd0Fr4ejZcYOA0KvYVV3a04IB77/bUkP5Qpew6HQbu7X
eD3NZhFfHK0pAy7+ZtsUvB6ncrbcZ2UqB/tsVdkAvF7Hil7ar2xYDs8O5jOf
3Y7vv0aFVUx3OUzxVV9dw+v/yRvH36qT38A2On0JCt4f0BNdb6XueQsn/b2H
o/B+I8nRT1zc4i2cdQ16LPSLDAcGotpeJ7yFN7GPFQvx/sT0a6HwF44qcJ5o
d6/D+5n0sh8N63vfwVPZNvg0QwaV4Ns7zvG9h+TqzxXq42RQfmDY9iiuBq66
/bUXaiIDvUGX6HBpDcy0Bzy50UCGViZ7P9HOGnA9utr/rY4MZ4MuCpfsqYVF
P6zJr5YM4T4PfZsTaqF4ifL5E97Pddr0cq0mfQQNdzNG7kIyXBRzdnR6XAfv
T50tWo3B15f9RMn+Qx0wbyHqTT4gg6xwz7ZTY3UAs4oqdffIsMiv/8ZIvB7y
yca0YLzf9OOQ3qbyuh6YjBTP5t8iQyjjn7IdLQ3gw8FhvHiBDKnjcSzvfzcB
w3nBJXktMgQ4tA5V8H8G97a9c054/20/vPl1qcZn+Ka6g/JQjQyC/TfsX4R/
hmuLvD/GlMjwvP1MafzuZvhjIBh2DO/3i2sk7TwkW0DuY8wMtgfvV9M/Fu21
/QLcpwZ2cY6RQLWneOulgC/Q+jJKcXmIBK+2Pz3XkP4Fbv1RsenpJ0FCwE3e
qxNf4H1tNXNSFwkcbBUiOjy/wgWD3YJcTST4zZFz5sHtb/B4othap4gESQ11
4cEdbaConvJh/hYJTMePKhROtEH6Jb5NazdJsGWtdKxvsQ2YM58e2+pHggDF
Z2oye9th9/DHISkfEjhlBy4Mn26H59q9kpGuJJAOUTqjNtkO9xvNTa6akqBJ
/YXiz58d8HFY+glJiATuZarif5g7ge777wqBfXi+OviFa31vJ2Cd9Z0n+Uhw
gmvhD5NyJ5xtzK5N58Tz3cLRj5w3OkFL7vtuhm0k6M39Zqy00gnLRnrbQxeI
cEPASUOVpQsINjB0apYIXImLshhXFzhk67KxU4lgG8LNoavcBVSbEe6rk0QY
tnMesLzRBVmVhTWolwhTu366Xl3pgoH5jBvcVUSIiLxr48fSDV8m13eKvyGC
xDqvYSBXN3g5SVkJlOL5lqohFabcDYWn742y5hHx8yRqMeFGN3x/Sr4siufZ
pZsCwWUr3bDpVP7vfF8iME7ppP5Y6YGrIeu2X4SJIPteptVsay88GPxzicJH
hDMJvGtFvL2QrbQSumUvESq05h09sV4wxdhP8G3D53v65MDknV541+ERte3H
NLSd+lHZw9YHOnI9OSYfpyGtJaP3reh3eMMQGc7hOA1KJX/Yg0wHwP2IHWdJ
2hRoKEUm8Z8ZAW9W6o8Jukngr3czob84AkTpN7znfhPg90l9lunAEXjon/Gl
/wcByq5s9S9OG4HxHVdlG6YIIFF43/7Y0AgEa4dNnmklAEucXpyC1CgYfuFT
t08iwByLkY1t4SjIDJCOBYkQ4Izp+/IT5aNQ0Me7OMdLgC+PDu+G96Mg3mOU
7chOgDwxthaRL6OgFrWnQ3AzAVy0v6nRqKOQveulD/vUBPTdNhMMOjQGWk70
5Ww5E1CzbDn9PH8MFo/6/UjYNwG+FxecdcrG4JaswM2jnBNwYCp6lFA9BlHL
aZv7WCcgrrvxu8jXMaBdZef8+WscXMpUWp/NjcEp8fnCn53jwOzNX5KmOA4h
x02IA+HjUE16e1gdw6/jLDXgDByHy45WeYO646A7yV5o6jMOfaYxWbynxmE2
YtL41dlxyJPelJTiPw67f+etrR0ZB2MawT8RjQPmK08KnhoD+nPBPxWaxkHC
55e+0OAYVAzy+3a14fPdcN57v30MBFutvPaMj8ODov39Ovi65/Oazj5knACl
92HrL2PHIEf43KDM9gkQeDOfeT5sDGxTN9m0cUyA+Xe2/K3+Y/Dxrqr5DvEJ
PEccLFFwHoMEtwLtB/oTECN9TtpDfgz0RvVqD5lPAL3nacc1sTFYtZ5Ub7XF
9+2FWXwczxicPy5wZJvnBOxkIJ6dphsDZbHYA3ejJ4C3PcpAtGUUBiZ82MI6
JyDW4k7r/ZOjwLhFoDB2YAJULIoz87VH4ZBUk+GTiQlo/XS3r1VhFAJu8N19
/WMC5jLVtHdwjALf9nqG8T0E8MS6h+WyRkBb7lImDX8OzjHt9km/PQKe1tya
v/DnxPR9G+uA7QhUP/O6tVOBAKIHjTUsdo2AnRLnL8yCADo1daQwn2EIPV3z
yMCOAGKxKrFTesNQEOShZOVCwHPCK6XjAsPwt/mDj5cvAeiis19pNg1B2lnX
mccJBHw/Fg567xiC4cjKiZUuAuxK9LHS9hkApldOIYxDBOD4mV9udnQApDpZ
hXZOEoDbhsB+lmEAbvE7nhFfIsComSJbYEw/7Cvd8t2SYxKCV8ds3NK+g8OA
7ddSy0lQ1LV49iC2F8YPr1Z69kxCJLlUtXqxA0zvdF7fPzIJdEk3WSYzOuBD
30ul4elJEDpocJfnRAek3rEqM/k1CU6W01Fhme34fS0qkuObApemqPYXRm3w
MdQpZ8VxClaYsASLky0g0698rsRjCsQf/SRBYTOkS+8Q9fCZAivxEjjI3Az+
/e+eDYROgV1U6WxebRPIyXCkfcidAi7/A02btRsga6AxPpQ2BVD2JtI3pRZ2
y6abqy9PgUzxY2+LHbUQFO67a3ltCg58PyGUGV4DdrJCMa47pyF4TSVv69wH
YI/wjzKQn4bLrUXEm3+qIGTQVJ9BbRpE3RNT6FmrYE5WnKVaexr6Nt80uMv3
FloHO8MOW02DCNNUdohVBYTKHQ7e6TcNdc+tuG8xlMFCBIPG5+BpsB2zDzFU
fg0OQ9/XgqOmoTmg8cZf31JQiwwP+PF4Gsrrf/HyMJRA3pDd0YLsaZAkx9Ek
DIqBS17+t0vhNDx8NvO5QbsIFodGrvd8mMb7F675/hcF4CT/RimmcRpW39x0
T7uQD22R95eOt03D1oCd94I18qBAXsXn7dg00K1UqrmRc8HlbtzFJ4xEKGSu
lNjRlQW696+Z1LIS4Xnn1Xa7X5kgEWMrM8VOhPSn8v55AplASRBekN5PBB5V
Pb6LQRnQ+oip0+IwEdQlGp1uhDyFV6nk136KRNg7uHqfnTEdvDNKr37SIULo
+ZlqQY3HYJGVZEU0IoKhs4xwyGIKKOX4H9luRYTdDt4REy+S4Ve+1i+r80Qo
jkywsDNPgqCKjgByOBFM4nIs1UTiwKnqjf2OGCIUEJZUG6Ufgvb7VEzhERFY
jugImqvFAvMnJ7pbuUT4Gphkk6D2AIj1umOZRUR4bXVxi0PGPWhukvzYWEGE
sptHZmFPFER/Xbizqwl/v2X4wNSZCLjc3uOi1IZfX1toVsUYDmZdVTqn+4jw
m/Gs5KfGUGDvD2F+TiQCffSVgoXwEFgePE/8PEeEqx3+XlHng6FvxODzzAoR
Luhe4jD2CoLHk7vvKW8hwWjiZ00BoUAIIC5fsN9FgkSpS0x39W/CGUr/iRBu
EpyPMWl+8tEPhOcz2VoPkIDZbKd5Xdk1YFwMn52Txfsa14eqV3SvwuSyRxuH
KgmqMi9fvsDiCy/+ysWdNSDBMJf04Nn7VyBqndMn1JwElL9epO2+l8GT/s/J
l7YkiOl7o1M9dRGMN48ofHUigV7Fw0q7SU+QZvnE8cODBBpJngdXJzxg57bc
5b14X1OjfTSxXd0dFrbf61XD+yCHE/e1SjNdoWvnpUrHOySgsxiajWM+D2/2
nEwJv4evJ7zv4Xt/F0jmPOKfH0+Cp1ur9+5QcAZ/bt7TbY9JEBb9NM2B5gh2
fOtHl7JI4LH7jkhpjgOo75vg4ykgQfV119L3q2dAQLhxFSsjgdv1q9+Sf9sB
3f78YedqEnRfu0P1+WkLdZI+GYWtJOARDAADLWvIOWwd3IH3eU3bMhPViiwh
Uuao089BElz/2UiR4rMAD/l9x/gmSSA1Kp2mfNccDJUYRDVp+HybMWd9UzM4
pDLNeH6JBAYHTxyw3WsKbGotk1GrJHB5VjbcXW0EHZrxuV3byRDLFOiZG6sP
XD6El20cZHisUjXbXXEczmQrFrTykyHH86c344gOZHeHv2raT4b7+neqYjFt
IDP1FdcdJkPgg4d717u0QEb5wOsaRTJ4tT/19bqgCdfc/cur1fE+meNV+8Am
DahObamo1CHDmqUu/sVXB4ZWvqoyIzwHuIXpO0QcBYNVr+piSzKk3KxTCnNS
gVgp9KHAngwF0QyieepHoOfsztoX58iwGuO+qJegCHwPHT9le5GhtO1rQP2y
PDh9LK3PuEoG110Km7Vs5ODFD4amJ4Fk+HwyoaqmUQZmRC2bk8Pw3HAx9cbW
/dKgYJXTmoDnBH1F1oD4qkPgH/Hza2wiGUT/Bt7mM5WEmkq99vtpZGANTus7
ySUBTOSUzsjneC7Z+v4xZiQGRryU7lA8hzTFD545ECIKCSfU+oLKybCV/68Q
e4Uw9Ac+6A94TwaZTw1Vo5JCIFg0PHijngy7dcSmd5bsg/Oj0iO+X8hQz4BO
ObDyQ8Gu4LHL3WS4/tG6uciVBxa0OiY8h8hgY8TDfVGXC5R9RabcJsnAjA4v
2Vtzwq3nvkQXGhnKZTTbjdzYoa6nnuywRAbnTItCdb/dsJVlL81ulQx5W87x
ZTHvAlMVt9lTeO4Tlpoc/A074JHH23kLPCcm69EFF11mheHHWxdN8dwp6biu
YPZuC4h+Ob18As/Fvw2+ckaUMYPHWsGK3n4KNCukrVQXboZi6bXf2ofxHCrg
2b+QwwDLDiarGooUeBfoqsvdvgnU4jLW1dQpMCuxFv3Cng5CPs1vUtHBc/aL
A0WXulaxpkUtRkUjChSsWWlE035jbGIJTLKWFPiTvmNPu98KZmE9yXLYngI2
sS/VDnosY6mRStsOnKPAm+Bj58NsF7GxtxHb93tRoMN7KGbEYAGToPTtELpK
gZejHSRS4Rx2kU9yN38gBcq8S529fGawMqOb7NxhFNgrin4w3aNgv2+1cnI8
oIB/d8udjEwiplHMz70rkQKfDnhN2d6bwsLHLvJuT6OA2M+ETr1gAta6u4Z/
y3MK3K2rrlG6Po7t1t4luLmQAkcdjYrpQkexU1edhDeVU+CZfIHzQ7lhLD3n
tehqNZ7js9+fF7IfwAi9jOK/6iiwwvHNvSSiDzu4xerAUisFMl2fbj5G14N5
q+YenO+igNo+39S9rF1Y5YWVw7RBCrD36klT93Zga0/0ZUgECtCi+etqRNow
7a+pcpNUCqivbYois37BotYpCmOLFHBZrZ9fc2jG2mTUjwz9pUDU37s2e8ob
MU6naJXvjFQo+WNUK76lHrOLHznazUqFwHNpjWGbPmHERbsztzio8OjTduk8
llrM16o/SFyACo7H/h5K2/cBo6u0zmoTo0K4fO7Ad68q7D53d72fNBXy3H4a
aDZVYFw3zYnCylT4mna86oVwOZY9+G1rqwYVFjoeHdgZWIrJYEaHr+pToWqa
WpngU4xVP202ETCnAtuPpJtqZwsxvU163o22VHjJaRFm0vsS63KqT7jsjK8v
xdFsX1QO5lCnVcHtSYW/Oj0KdorZGHV/zfePvlS4uWDAlTL6DLsRof73QiAV
fqjf/pm/9ynGSKoS4AinQtSJr/OLIY+xWANlzQ/RVCBdD2fS80jG+AvKnV0f
UYGaifE+NkvE8rbLh+/MoIJmkekf7GIcpnSp+MXbF1S4L/iKzfpiLPax7XCL
UwkVXons1R4evI8Zy+XTtlVRQYepw4NtKBLrj5fYWf6RCvY/9eL+TIRh55ee
y51pocKJ1CEZR8c72IKViCVzFxXU1L2/NQwHYbcqM64XD1Lhzl+Zh7GsgdhW
HoFUm0kqZMo/OkXX4Icl3XxcTT9DhRqP1X2Xb1/DhIe4RvKXqTDyzHl6RNkH
e4UlbbJcp4Lcfj03lW+XMdWMPaJrzDR4u+7AnBbvhTVseqibu5MGbOWyWGOk
O2buzOZuyk2DPILWMnvjOWy47t69X0I0KHY6kzGp5Yx5iG15lSlJg4pRP4M3
Hxyw5YjwNkN5GgS8lyRtv2qHhZAYfiwepcFMvz+/VtYpjM0wmCNdm4Z/H407
Nc5aYqkFa0eOG+HXSwjfBV5zTIwtwHbOkgbn18tufVI3xkov/QpIOUODkomz
uWGVBhi0X3uq5UqDhMatbcflj2Otcou1lEs0uJZfvrLl1THsVMIVQsINGgwt
biGUbNXECEszTFgwDV6c8PaEdHXssrXngem7NHhU1LaTV1wF+1tJMoyNo8HL
1iSJBWZFLJLH9aLKYxoQdqY0RnjJYewBhNjxLBqo5yl9Uc2RxjKGHF/fK6BB
qdzRbeevSGKHYKRboZwGoS/fJ7a/FMMqM+xWht7TwP0k+4Vd90Qwbfp+nogG
GhitemiYeQpibc7W6jLfaDBnIB6/eRcvZlffdfZ7Lw1EP/88MG+1FyOKmYeE
jNLg1PGmmsEnezDfyG/ZB0k04LknWxRbvwOjI59o7JqnwdHerNsPdm7D7hs2
kwJ/0yB3/LpdbCYzxlV4nFWcYQbYZwxV4hUYsWy2eqm2bTPAQDp8g5dpEyZz
WcvMj30GZMvMj5eRV9Wr25GPMP8M2CXpp8t+/qWuJ6+e1LJ/BiJvaCy9yl1S
70qoqvSVmgHdzcrWE95z6o7LRwb4j8zA8G1zkXv+k+oOmz/tk4cZ+EsyZ4jK
7lZ3YDd20Ts+A///9xMOIt9f2Jv8x3IuNG/r/1hzVjby7H9s6n8tzfU/vhi7
3nj9Pw7k1R66/R/fz4lciNjw2bzqXfzJGz4zRRTxrvyPl3zcImr+Y8b1gidN
G7YX5lBq7Nuw3RlNPb5fG7btSfFsUJnd8KRoyYDmf7xYtDSnv2Gb3Q23eG03
fMp4Ifay/4atGgzKed5t+MDA6q0jAnP/3OpvU5IsvOGLPOUTv8Q2XGbjqVct
vWGNvv5dmpobtuquyDZw2XDotyvN9nkbHvk0yRGqNP/PIn4+/WX6C/88NPhm
1N3gxz9b6gdRPzos/vMxl3WVDJelf/5gKFru6Lz8z8tHvyk2Xv/5z9n90ivF
fiv/7OF0KVXm1oZlyK/UikM2XP3rcHDRvQ13cR3a+iptw4zWEnz5tRt26RTU
eL7l1z9LnnYYF2Xb8Nz409Ds3RsOWBD4nMW74YRd/OaZhzdcZ8Lt8tRsw1G9
p5j2WW3Y9Gzyi3TbDQ9e3EtLc97w4gOOa0+ubriKw5KLz3/DQWkJVY9vbZi1
cM96asSGOxROPuO5v+Hk6rhjqbEbPqPdMcmduOH/+z3XP/8/oQ4+ig==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$2695#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.266122, 0.486664, 0.802529]], 
          LineBox[CompressedData["
1:eJxF23c41e//OHCZpSGrhIQQKqtIyuuJkJGM7GzJSJTsqEhEJVmFjCTJXpWQ
WwjZe8s+zj5W0v6dz3V9f2/nH9fjer3O/Xrd4/m8n/d1HSJO3iYujAwMDGpM
DAz/+yvewXk/JeUHYvi/j3UiwTMxadOxNp+MHz/Z9Dr5msC96E037+wpvha0
6cuGsYNnrTad18d+cJ1v00dGmepMnm3854BJb6pr2Pf/rH9MYnIjZP0/P6lV
yngV+u0/86t+sip2W/vPMhzJ/QqXV/9zxMj8We7zK//53OCjWI5Ty/8542BY
QpTK0n+uHLk1J6O06bZHIceG5Df9/XtAv5jUpo06vLgb9m76cpinszv3pkOV
PCp2c2w6P8vlgj3rpuvNnF+yMm66iLcBd/EX7T+P3f4Ymb9CQ+S3KlZzzyZU
WYlVEj8INBR69fjKxC2cqoJpZfPZGRpivtN+QqeMqmpfV3I5eYSGOnXK6kav
r6o+lCxgXeimoan4eUnBjR+qVfG5ucdaaOjnz2s3n3owYAu/X2iH19GQcKH3
rPAoE8blmo7reUtDbX3ZqYJzWzGs91nkgSIauoBt2LTe58KunEqU8MqhoViu
TE/GLD7s2avHzbVpNPQFpxVy+r0Q1sTx4PL2BBrSY3u3CmWi2HJQJKt1DA31
iUlqEi9IYELzYbl5YTRkrZGamLguhemdD9X+HkhDBg47FrCUo1hAVSBO6xoN
7XodOiJxRx7LEfWNTHSloUNdX9Mjrx7Heh56S8zZ0VDyN3DGWZ/Afq97NMub
09CZkZ+KOSkqmJTj5ct3DGgoxFVq/oOhGmbe7sjarUlDQ05mRS9MzmDhira5
+0/TUIxdmH+0mTZWkmmp7XmMPr4uMw+befWwiW2muGppGhovfiKSvHge2+pr
GLlNlIaO/BYeL58wxhS/6klY7qOhl8JBr1K1TDEnHe3m3N00pLvQ9UFwxAKL
LVe//I2Nhv4GS3zbPnMRqxFUZdX8R0Wnd9+S+0Wwx/CRyrnx61QUGXa2hoXB
CeNZPqY9Q6GiYNyT3y7HXDD1i7I42QUq4tSfUG2+7IZ5fZaOvDVBRXklErcl
Uq9gqbISEp39VLQ2U5v7yMsba0kRaRZopyLHN5FGXto+2BrT/sseDVTUOlPc
mTToiwl78bF++EBvn39Y7+OlAMxghDuXrYyKlNXvOp5fDcaCNTi0zfOoyCjh
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
4aaf1cafSY3btJ1m38K+pE3/3//7/Of/B8xntVw=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$2766#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.2979596, 0.5657928, 0.7522386000000001]], 
          LineBox[CompressedData["
1:eJxF23k01N//OPCUpFIoS0SLXclaQryeUlpsqezZkyT7TgjZoiJUIrIn2Zci
y5W9kD0iOzOD2URSSb/X55zv723+mfM4M+fe130+7/K8c84ctna+cmPzpk2b
jLds2vS/d+EO9sjnz3+hTf/3MkmYc0h4suFHph8uxzze8ArZZX/Y/Q237Oou
dPHdsO2lRwPnjTec27tDcGXfhiW+bqm7krj6n71Hnak3g3/+Z005kdFV/5X/
/LhGPjU74Md/5lX5YFxot/yfJVmf9snaLv3n0KGZ83t1vv9nrYGHj1hPLf7n
sIx0p10nN1znXKGzU27DMjtGd287umEukIhZ593wRO6nGMpv+n/29N/2uP39
hgsv7nf9+HbDJC6py62lGzYpMWBvzNtwQqD9Yn0OHXW4Vycnd39W6dQM7KnL
oCP/0ANsD5rHVVQJ2Y/fJ9GRzVYx4c2H6Cq+ZVWulU/pSFX7H+NbpWWV0qDO
y2/j6Mj0m+fnXpNVFbL2pEz5Izpytic/o/mtqQjv/8FeGkVHzf4l0uHamzBz
EvP3onA6GpIyKq1j2IIlVvD1FoTQ0eZCk1iSBDPWEyJd+iaQjryOmTntMdqF
7dA9G/faj448v0iJpJ5mx87wG7m98qIjPiv7Mu+5vZj//O0r2W50pJKUsTuB
kwd7++6ubKYTHXH0Dt8qPn0Ao4XG70m3p6PksPvWhLeHMbErr76n2tLR0Qzh
2GUtIcz6YHXvC2s6ulD25WqqmDiWTP5cmmROR8I276h/bkti/VVTcYkmdBS8
o6Mpf1AG2xWx4vbUgI7o1spx13yPY+f0dlxNuEJHsiF9XKhHAQs6fEAuToeO
PCx3SDluxrAqqszeWA06YkhLy3z4/DT2vVp96eE5OmpjrSmakTmLSdw37otW
o6NFuu1uzZbz2A0Dx7L7GG55BSs+Sy0sVTA4PkKJjnzqGIdX/HWx8qHAaUl5
OvrCnRjx8M8V7NNDf7kvMnTEdjHYJkfbAJtQ87sXcIyOeLXHSUavTbCfP737
hMTpSFBXxXHnVgtsd4GnYIcQHT193blqXmyFCVm7u7sfoqMpefj4otMGU+J2
beTloyPzVucPUY/tMN0Op70N3HQ0bJhW5aPvgNkGO1y/tRePnwfJqIzFBQuQ
ty9jY6UjxgAO9rAJNyxh4eaWyh10xKQuFSu/0wvLS7tx1YKJjpp2abCSTvhi
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
w+Zne2d5nmz4//5/9Z//H8XnaVk=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$2837#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.3386556, 0.6276854, 0.6832816]], 
          LineBox[CompressedData["
1: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
02Znu6Z3x2z6/96f+s//D7FEOCw=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$2908#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.38822480000000004`, 0.674195, 0.6035436000000001]], 
          LineBox[CompressedData["
1:eJxF23c41t//OHBJRqVlJCErobKT+XqaFSFZIRkliexVVkhSKEllJzvZI2Qc
ZCXK3vvmtt33jUTz9/pc1/f35h/X47rv13mdc57nPJ/nXBc81530blJTUVHJ
7KSi+t/v420HQ2NjtxDV//2YRs/fiX657admdZefPd/2xpLz0YePt93E2JHn
fG/bNpee9p432XZW126+DbZtnxrcWaMXs/mfvUadVm4F/vjPFyUFRjd9N/7z
8yrppHS/7/+ZXbHOJM92/T+L7H/VLWGz9p+DB6bPM+msbrfv+0+mWWPbdtzs
wj7q29a1vbSXoLBtzs2KjqKT2/5w+JmJHsO231W+06Tdte0Eiwb5j1TbfrZz
/JTjb8p/Dsrc4uTdpKD9l7o5Bdspih4Xmff3rVEQpdPotzLrT0VbkgjVExIF
3RZ2WM4V3YGZvdCgKC5SEGEhb0TOYBd26az1FIVIQTSyIdfT8xkxlWH/7vQp
CjIR/IIhbjZM+n5sg8kY/nmsELG3hBsT4ispZRyiIFLS8iktk+MYR/PXjLpe
CioxPmJsdV4Y228//9qjk4KCyzKYHpwTx6j30zwWaqegvHolH8PbZ7DvRVze
oy0UNNA+NHUiXBabM5K1f95AQdSD7po/8xSx4Z/6Zuq1FMTpGcxkUqaCfU1y
1N6qpKCok1zO4WPnsDqVx1huGQXRT5a1oV0XsRJiqqhVMQX5vbostHbqEpb5
pIabJZ+CBGtHFgeRHhYnMnjwczYFEVu9dEJ9jbCnXWvUfhkU1NRzqFBa1hQL
9Ny3LpZCQQ/Hc5lmvl/D3NmFZqYTKYi/V/gqxc0Ks61R7YuJpSDmcjDSKbTG
rl43b9Z6SUEN8QaX36/cwnRo75VTPacgj/u3tehP2WPK2S/elYTj43vXQZD/
54hJ6eTF2Ybi309jrNC75YqdWG0J4wimoIR1iQC6Sx4Y+yuCb8d9CnJXMz5f
JX0XY5T76xDsg8drT+js0HEfjGqMzULGi4LalkX3rFAFYGuBkrpLrhQ03Ruf
suIYhBGP6ygnO1LQ72o6OdJIMDb42VbCwA7vb4ZbJ0nzEdbm8ICP3oaCtK4/
Y6vZfILVHkxirrKiINtz9zpDvz/FikvLdzlfo6CKl+KNQveeYxkm3Rt8JhSE
hWbwPPN6gcX9WZ7tN6CgyFbhQ19kXmERb+kHw3Qp6HPWTrP1wFgsQJ2vFbTw
+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
MXwNVmXCuvbovpujWYWiI/3XX0sdwDJVrt85w7AKVWrSVXb8jJjvPXfRIMZV
YDaqKcoYZ8AEZmNKj7Kuwqe7X99wGe3EfnG+v2vLvgq0xOrEL9/+KXYYVMuX
cq1CmuSwDhVpUzE97NvfHXyroBK4+U9q36qid/1knc6JVahPPHm925SoeGlr
LTj+5Cr8/7/P5xejvTAnuu0tG7Y9Z6S2/TVR+GugzLZTexSef1XY9t09lwyO
Km+b757bUInGtotCwvPKtLetFJ0e9PHyts3z+4VrTbYdNyPv8+X2tg/p0XBM
Pd421cmX1/a3bnt05MPEbc21/2yoEbBUb7n+n1Wt/8kmW3//zzUX+Uutbmz8
5w35b2eavX7857Qh0c2Ce5v/2e66U5yY/7bFFvIUCoK2XbV1OjA/bNs9bKd2
5yVum+aKIMf7um1bd3MrpTNs/Wfhq5ZT/Pu2TZ56E5x2aNu+q1yfU49uO/og
p17K6W03XDpi/ebytp/0G9MeM9q2rkVMVpLptkccDy8n3tj2egSLZ4LHtj+y
GLJxeG87IDH6Y7z/tvfmMv2Le7TtLin9t+zh246pilKNi9y2uVrXzJGX2/6/
/7f5z/8PKByEaA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$2979#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.446557, 0.7074632, 0.5203932]], 
          LineBox[CompressedData["
1:eJxF23k0Vd/7OHAhISlEKkqSJBlLUp0HkZJ5KoVQxlCGMiRFksxEScgcKvNU
ZEumZJ7nMtxr5p5rVvQ7n7W+v7f7z12vte7Ze59n7/3sZ6/FIbO72ua0NDQ0
h+hoaP73faSeze/Nm1VE83+f6xETthGRmw42/KYVErbppel7+5+92HT1jubM
e26bttAI7lA22HRaK/PhJe5Ni/TQlWlHrfxnl4G7s5Zey//5ipTgwIrH0n8O
K5WOS3m0+J/3nf9mkGm18J9Fd75qk7SY/8+6KpZ6raabdnsm0+VgtOnKP729
2bqbNhg/OCx6YdM+39IpwnybTv/r7li3f9ONp1UXrPdsem/m7HIa66Yzo6X+
Ca5T/3N7B71X9cqmV3d10losbFrxuStDytSmrSsu+ymObTp4fR/z6DAVDeV7
Sm5sLJzPl5kOeDpIRcdSVzYct66d73H6uuNwLxW9jnL8Obb93/mNzOCQig4q
8lZauiLKRIsJTN5kM2uhordc61pS17Zil49IvNzSQEWjJ+dWP+szY/YmtJwJ
tVQkojOUIKe3E4t42/ZKrpKKhIonkkeOsWOfO5O5fyMqKmd4JidUtBsbZHsQ
/biEit5lKLvf6t+L0asp8xwsoiJNNeb8uC0HsWN+3HFluVQU5UpesuXgx9S/
Txw0zqSi53U1L5lTBTDnjS8J6+lUtFfw4tTHUSHszZnAw7EpVFSRYX1C+8cJ
rMzZKOVcAhUVvK4u+qMvgY1miR7tj6Eid4Pua+o/pDCmqX9pD6OoaMHEyt9m
SBoTFWwR3h9BRRdk7DY4B2UxXdPEj19CqCid1dHxWy+GucU4iV4PoKK/jmed
Cu/IY3FditmrvlTUfHvntiOfL2CV7FySb7yp6OL9G193XL6ETaiN5cl4UlG1
73unpW5VjPVF8aluNyo6XL8acTdfEztZ+aLI5T4VGbcfpNz6q40Z/Lt+Zo8D
FXEwf0z0T9THPGVFSgptqSha2Hzrw8jrWPL99XP6VlQkq3LA6o6fMfYju7Fs
8RYVmRTcIX06b4rNTr2Ti7xJ9FfiyrTz6G1s91GHipM3qChXMZDaN2OJnTFT
UGzXp6KHje/60vLvYMaxHNVO2lSkeC2v8v7Du5hP96gyhzoVzUWUulPGHDAX
j38yNZepyPNgZGnihjNmw7dP+KESFbFk2G3ocrpiRpUn94vJE+M7eVFum8hD
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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3050#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.513417, 0.72992, 0.440682]], 
          LineBox[CompressedData["
1:eJxF2nk0VV/0AHAhISoZMzQgQ4Mhkqm7FSrKUIYQoiRJhFKEMkSGMpe5lDFl
nkIdU0jIPEd4zxjeu09Cxe/+1vr9vt4/b33WW+uce/bZZ59913r7rjhduEZP
R0e3iYGO7n+/9zdzPImLW0F0//cxi552iI7Z8DPz6vNhERte+nlb4HHQhuvZ
23Juu2/YVu9Z92nTDWd2sIos8W34UD/Dpwuxy//53nen+es+v//zWTmx78ue
S/85olIhOc3r13/mP15tmmO3+J+vhGfeTLXZ8NvxMK94qw2rBFumBJhs2Lz3
z5TlmQ2/dFa4v11iw6Lp2c9vT9L+s8NKZKbt+IaLznmUm49sWJN2ZvhM74Zt
1Sb272vYcNbA3uL29A3jh5kbGl5vWNlnoe9j8oabxD/9zXq+4Z93Lmn4BmxY
vvGk8X3fDXsKHLBz9KYh3a+7DQJfLx6vc+TwsPGgoat9j+ptT/05zl6zHGLm
RkMzzlRBkV90mDH3jyR9Fxp6fe91z87TjFiyXUPuKUcaOuRtEE4ftwWbqMip
VrWnoWeO2IvDu9kwqe3PO4/Y0hBF7mDvEAcHZqh93ajDmoaOMJ6uP2DEhbk/
Vux1tiDcfaX4fiwvllzFYsphSjjdO7V+kB+r+zMwkGdIQ6PGpYGcyiLYtMI7
c319Gnp/kGuLWoIkts3Fa3jhLA150DkHOPyVxuTf61qFnaahqekJ32YpOcx0
as+YlDoNaR1z6w1fOYZ5i1CvtmI0JC54h/PtLwxLtawh31KmoZL1sozR5ZPY
l7io6+wKNLQfL9WcdzuFzXfZTL+TpaFoUsn46qIWxrVD4ea5wzTE6O+zKfeM
PqZ0dsvcrAQNpR/mcvZJNcAsA/ocQ0Rp6HRv+g8DuouYf3UW5cBeGhJ9pKQv
Zm6GZf31cGkSoCF9IbrDal8ssdZj5xZv8NKQNu1e/ROhK9iii5AbCyexH71O
bs49NtiunPnfmduI+FVcFzMLu45h08j9DCsN6azCItnWHrMRjfgzuZmGjG7K
PH9/3AkLunzFK3ATDVU67khUZnXBcuLl1sX+4aglg/lW8t07WFc3o0/9Mo7O
/6DD6EfdsJUdPfS2izhimvQNXfT2wHafy/DfTMHR2I7z9uJT3phG4H2mtFkc
DSduF32f6YPdqNF6ojGJo+b8pchT3/2wZ//4WUljOKpvGIxwOxuAFSn+DPEb
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
HhfvQPjpsh1dTRQkHzSklP3QDe56bon4Wk5BhrqXDx+XfQA5WgLOX0ooyKpJ
7cWxh54wxSN9vqGAgnadEt50pMULzPKNOWrfUtBs3Zmf5nqPINrbnlqVTkGq
z/d9OsHrAy1nvds/vaagquurYWIjPqA2kRZRHk9Bz1nfyVEc/cC98INz2XMK
Mm9IGv1u6g8Fj1rOl0RS0A9WWXh36jHsF/jFURBMQTkRF1fP7A0EVn2NyCwP
Cjq4VtvicT4E1IVMXDLcCFP5lPZdDwXPmZsX0lyI9S5t/hwa8BQW/KN2pthT
kE9QjrPX5nDo+jAWGWtGQRYSDj+t3kYCe+CSy3NjChJ3NOS6czUKThmyGkRf
oCC8UFU1UDAaPszLcoZrU5D6WxYfgYQYSBbxiQpUpiC7P9rt9ORYKOrzHpdS
oKAImVZ35qE4aHrqKdcjS0GVWm8jGL7Hw+/f9zpFJSmo98GV6pXhRNBvduSs
4SX2szuQT+nVK7D1cbh6g5OCZnjbLB5Ip4CXgn3hju1EfoxvmSY3psDbV9cM
LjNRUNhqz/rJzW+AaaZMbGV6AT0SMFx9mJwGRwyL6k+PLqC1HkrGw7PpcPlT
ru3zvgVkF/nU6OFyOpRFpqfLNSwgVfWFWbGbmXBTJVrMMXUBxTA4uH28kQ1t
oU5i45YL6GWxFWvRSh78XbKvlzVeQBfThH8m2ueDpLWt7SOdBbQphtTyeDAf
fI9apAupLqCrd+wiLn4sgKPD2mImuxZQ8cP7JW7RRRAvLSbW0jmP9mCjL/Wd
yuBax9D+0jPz6Bq3WQnrmSrYHdb0Jk5tHu1QNylJfVwFPWfL9nkqzqPa28Yl
WG0VnPkcJXRCYh6ZTq2SHbBqOFSmzf11yzyij0nwJsvVwGJSGeNI/RwqlGeR
muWrA/8b0eNMmnPIaShZ41VFAxwX87WeVp1Dnie9tjXSGmBpzGnkq/wc4rJe
Yp050Ah25mcHw0Xn0KnkKQapuEY4p0ffyc84h670y4/Ju3wBzqO3a6RqfyKF
AT/5CJ6v8JruXIrxiZ8oZ1anw1a8FZaeNf+zVvqJ4qayJRyMWuGskI7ZLdmf
yJvM8tDZrxUWlXQ5/ff9RIzKOlje91Y45ar/OH/TT6Rc1ernFf4NZsiGN9hq
ZpE5Y/pgyt02OPLVQrbm5Cw6+sDQZjtqh9oYp+rDGjMo9C4p+5hAF3TQav+F
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
vCtmw//3/////D9k7LOw
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3121#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5888042, 0.7409584, 0.37500680000000003`]], 
          LineBox[CompressedData["
1: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
z/8PjfyBFA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3192#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.6660832000000001, 0.7430418, 0.32293540000000004`]], 
          LineBox[CompressedData["
1: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
OjcU4g==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3263#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.7408424, 0.7340177999999999, 0.2838318]], 
          LineBox[CompressedData["
1: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
id2u57aboZH9LZ0Tl3viJTZarTnwb56AspgWbxpXOqZXeU+PbYWAGwvTJjL0
VKz8U0kd/yoZr9bMnI9OCiZeOnPy0AY6CLT7lFgxJGOxRfvzTzLRQYaJN6Lh
UgK2vsD0wHlmOpw7WWItjeIw53ePE03Z6WDlclE+XiAW63ldt92Bkw6zUjrq
pu+jMdXMv0G3uOmQGj2V+1ggCstNP/rnIS8dpukhu+qDIzG+1Gsu8Xvo4JGr
w/h36BH2IOn5aKYQHdg9Qr9dKwzBiPhvpsUH6JAlV/uyKygYs4xlbquToEOK
5bLogO19rClK+cx3STpcjeZq8wq8hx2PuPlx9Cgd0muPeO9I9cfSQt9KzR+n
QyWepGJ5+w7G9oCSsfEkHTSNu6KeFt7GbgXu4t2pRIfu4GLlmlgvbPSudqSw
Kh20vuvG7DfyxPR872+UUadDjcjv0fu73LFP3h9vnTpPhwbPQLnRXhdM1HNu
Rk+HDgmPFHgenbiOxbgesLmsTwfPmrDvpa32GMN1814XIzp4/Vif8FnbDnN0
iNb2N6PD7QUvi6YWG+yU9apcijUd+MVtRgaaLLHBhd+QYEeH+pzMMYY8M8wv
tPt0rCMd3DV9Xw2JG2N8e2rOPb5Bh5X2lEoZL0OsND9PN8ydDgFG1X3BNRcw
ozPJF4O96LDlxxi9l0MXm+8JMQ/wocO+Oq69ZhXnsRinm1d879LBguoSkEUu
qUfWWV/zCqTDxtG85lPMp7HWGJ3rbg/o8GZsjueHpQrmLKro4RxGh8z2K/Wz
joCxlIndvhZJh/lvFIv9PPJYtjaXv3UMnTyfXKEbf5bB1Cnrgy/F0WFnes/2
xsfS2KjnTJhJIh3ASLZATEESC9zaH2WQQgd9uxIVpCeBCSbXx+mk08He62S7
vv0BrEL6ffK5TDrcfYCsJvyFMIua1PQzb+iQn9fkXJK/B/tjFJ6tnEs+z2u7
wtpQXuzZ5K3ck4XkeMhgXO6w5sZO3LUtOl5Mh6fPU2BIkRPr4tQvO1JG5veo
99aBQ2yY+yulqkMVdGA+kPdk4edGbLvCoXrRajqcqbOzueCzDstp2dUiVE+H
Wiz1YlHCP8Xzlzd1CjTRYWzqBrUGW1Z88PDnzx2ddBA/v+0fNXBOUYS/aYS9
mw7////Z6tzi31v713xZNWNu4+CaGbofLzBQ15zs4Pd3ZWzNJ1ftNyz8XrOX
iCr7FL7mWfd5kZ4N8//553ZTwzyhNZefE35vdWXNdxZEzhXYrlnphdgQo+Oa
q5YPs2a6r7kmS85m+v6am5i0d97OXHPvZ2+PmKk1zyt8PVZ3c+E/p/dKLuZ6
L/5n+8vXn0n5rVlqIudkbsCay5YO+b8LXXMnz8GtOUlrZrwoyve6cs3WHXuV
MrYs/WdxU8thYbY1zw4/D0znWLMPTaDhBe+aY7bz66UdWnO19i7r57prDvlu
tGmP4Zp1LsVlJpusud+ZeyrpypqJRzs9Ez3WXLrTgIfv1prvJsWUJvitmeUt
5+qz4DW3y1xI3R225riyqFPPItdsodo+suvJmv/v/+//+X8A91k+kw==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3334#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.8083416, 0.7110806, 0.255976]], 
          LineBox[CompressedData["
1:eJxF2nk0lP/7OP5CaKFECEm2QkSEkvsipGSnorJGFLInItnXbMmWClH2JCTk
iRQvJNmTCmPLbuaesZbf/Tnn+3ubP2bO48yZe+7rel7P63rOOXPI2tnQlm7L
li2zxNP/vYq0sYWnpq6gLf/vcSXxj2Pi403HXKs3iI3fNG3GhTckYtOfWTqK
Xbw3fUMvpkfTdNO5nTuEaNybPvqdvtYwZfl/9vrpPGcXsPQ/t1eIH7/kt2nR
uDFPde9Nd5+5+lfAddPHc8/uGrDc9IzbAXFtlU1bMbfaSm/Q/ufK4ZA8/rVN
76lWmd21tOlapwqPP3Ob5uvKDMr6tenep3czOWo3LeklO0ZXtelg/bkji+Wb
lqW3KflStOk4ez0U+nTTk6o76D1TNw28n85ef7zpuS+n2uHhpjVeUdmkIjad
/qDkIl8IDWUwTp8sGW9Rxk0dUncE0JDwjEU9y54x5Quyoj+XfWmI46FglcLb
RWUXT/G4tbs0VHqqrMW+alk56Z2U2j8PGooZ1/iRWr+hXL1ynLbFlYY4W6Y9
bW3osSElhTx6JxpieO0hlTi7A9t2X+ka400aChwYFBmIZ8fE62D3dlsaCjLz
l5sq3I/p0ak37LSioeChQ2qrTQcxD/VznqxmNNQgM3IkZFEQSw3VPsJmSkNq
7rLSLBsiWG2z/g/2izQkGy8uf/iSBEbacTGG04CG7GMMaHJZ0hizjqnqfh0a
Uux+aHApVRaTjDXDec/TECNPS6FXnDxm+M3qFb8GDfVaMDKnhp3EvNhvXDmk
SkN3NCbyg/iUsfSLt1iElWmIFWknjHueweqTb9eJnqQhqx8ielFmZ7Hx727u
YidoqGzp305pDS1sJ5+X6FEZGmLi6G/uPqqLSZvf+y4lSUOSKf0Np3cYYBcz
/KNlxIh8iF0/9e2HEeYzEgRyIjSkm+l2jKf0MvbpRnTOyQM0NBMXv7/Q3AKb
yo0zOb2fhp4E64f5pFlhe6YTd8I+GtJQ6d/6POQ6dkIytVaVjYYcpeIVjn28
gV1xfuqqzkJD1cZ2h9NMb2H+bzKFNbfT0I57ylzbFpywbEpO3/ltNFTUEUGv
+NEF++9EfqT2VhrqJnncc4pxw+a8ipX1/lLRfsrBN4tBHhh7VemCwQoV+ebq
h/C+8MIU1yteGFOpaMgswFSjwQczw6ovXV6kIjX2UknnYT8s8AHafmWWioxs
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
L20ZpULNXzk7ueoQ7JnD/b9rE1RwxdcPC/MGYac3btEvTVPhWtGeM3hgADaQ
cHk7eZ4KsW3nKsN7/LG7ouq7ZylUuIG5zBzJ8cU4q6T3TS5R4XRJssB/Ht5Y
mc4BXtIaFfYKIuOb6ncww+Hth35tUMG2SJ/Cm+OOLXjQRL/T0+Aim0+Q7ZAr
FsNMOtrNRCPm+Av217wu2NH0r8e/7qSBfWmq5mKRI9ZyrEaxZTcNzvnM2AUL
38TsP+Zin9hpcOQMhHM9scUYLz9Wr+OiQWW28EcNqetY9lSAVjUvDeyWbH78
krbCfrNdvfRGiAaRp1q5BB2vYL45mtcKD9NgcujCOWPXSxjPSTnrVxI0oK+h
vDwTaYhVtgnYZx2jgdkGf499vD52yZLl9lNZGtwOSWTkl9HBcMqKe4oCDQR3
TVvfgvNYQti49yMlGvQlqKIKHQ1MmrfLPwZoELU/hZf+mirWXoxCItRoEK0p
FzDqdhpzPFMYFaxJxPvZVuUUx0lsR29KvP8FGqyrJ2/Elp/Acm+GJPvo0aD8
Y3Pt2KXj2Nm/rk89jWgwGIyv3VmQxEbjzF+4XKaBduBlH0HZw1ig8IU8h6s0
EJ3NHJzEhDCBSoXXNyxoULvrgVz0UwGs9oJwudV1GhSZ1HBbLPNi/kuiF97a
0SA0Icoa1DgxlRdiwwyONDBvu1J4MGYPtlXvqNclFxr8fWR2ejGDCWtYlWLJ
9aDB1Kcz+TUhDFjQS5kXK3eJeJcOc4ff2oqpG8qdvOBHg3Ajnl2vnq0rM/yT
/5oeQIPOytEJZXua8qe8k7ZzITQo5Hv9sVtmQTn04uk1iKQBK+pLvKY0rXx2
K8THx9CAc0Fz7RL3uDJTkephUgINZg9WWhlQh5SbTdQ/yCUT13+uH5ec3acc
waBpFPqEBo7/rKq4P7Qoa5Wc/9P3nAb///9Nd17T9hfL3nQbk96+e7mbfvjW
oKCtcNO6Fsaq/G823VFh6lT/ftNdtjafmFo3PfDR2zNxdtNPnH13ji9u+hqv
f6YCbdO/3IK/DPzb9PChWJFDe5b+50n/7J6i45umKX090eS1adfa/sH2e5ue
URkJ6vXf9LAG9dtY2Kbb9HhvM6RsOuu63UvVyk3rRG1w1ixvOnvg2HKJ9/L/
fMvaOU36/qalp4pPlwRuumZFMuB11Ka7uY/uKH66aYbLR/gK6jdt0yWgkrN9
5X8Wv2o5Isy66YWR58HZezftS+b/7wXvphPZDhhmSW66UW+/zXODTUf2mTAe
vLRpfYuU3GdXNj14m2v26fVN4w/33Un33HTVvovcfD6bfvA0serJ/U3vKmLf
SAvbdKecUSZP9KZTahLU0uI2ba7eObb/8ab/3//X/+f/D87u4rs=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3405#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.863512, 0.670771, 0.236564]], 
          LineBox[CompressedData["
1:eJxF2nk0ld/3OPBIKVFUKCJEphINJDwbaTCUWZQkc+YhiRAyZMg8J1OUIYok
qRyZM2XIkCTujZIh3Hufa0h+z3ut7+/DH6zX8jzr7rP3PvucP66ghYueNeOG
DRt6iV///RVp57iflraENvzfz+XEScfEpHVHm37QjYlbNz7tyhsSvu4mtq5S
V+9122hH950zWXdBD8sBfM+6D33ZWKOXuvg/e31zmbUNpP/PnZUSR4381n0w
dtxTzXvdn1WvrAq4rftowVnWIfN1hwcy6LSYrnv08ruESuN1nzzuNZBnQEdb
8t+Kfr40oxTDdpQ3QYeOQjJVaz+o05QmJqbNArXoKNT+qWPazxUlrPZprst5
OvLgCY2qUmXAktIsJq6qEQ6ossiLY8Km3fkktJTpaG4t/qHshS3Yaa1Bp1OK
dHSRd+Cv0ww7li6SUCZ2ko7yK38UK1dwYgv/LtC4jtNRp87C5V13eDD1wS3y
m6TpSGR6beuEyn4su6zelyJJRzX1oaamTELYYoR/7ZgoHRncCW/zuiyCaVvJ
M3UdIN7f1PyakiaBPVGinqvZT0fnY5nyXL4cwf5xPY98xktH71gFWzyjjmKG
czc+pXPT0VI31Bw7dAJ79lF4V/guOpJNMauYb5PDmB5/N/LaQUe514rSjYsU
sSu+6enW2+jodpNGPjlMBSs3NBzRZ6Yj/qvKq+nVahjLEXYh1Y109HfhhKHe
zDns+pY2a+k1HOWFS5ZsFdDEqsZCCvlXcKQpILjpg95FjP2t8gwrHUesPiqj
srv1MNvEFemVBRyJHVQ8+kjWEKtxqrw5OYujMz2ywRtNjDGuc25VA79x9MhP
pv/GnSuYk8Chv40TOKoWPyTW9cgMa1iagAoSjlZEr5LkWK9j+3pz7uWO4Og5
wz4Th81WmMcz0+bYIRzxDw99ytxgi7WGcG+724+jqMq0sz3LNzChaz0XnXpw
pBxr/H4TzRHzPvkg/kon8b4993H5Py5YF8f5fvVW4v8ilKjVH26Y2BQjz8km
HFWx/o0WDbmJ9T+6nbO7BkfUYbaEO43e2GGvY+OM1Tja2ciVlG/tiwXrzIrN
v8KRdMn+lE+b7mLD4oWO38tw5D/8dinuRiB2bKPVi44SHHU1UT1jc+5hEcP8
1LeFOBIqO7wQ/SUEI736IleUj6Nf6TbODzjuY/IxiXdSc3B0KiTrd6R6BBZr
p41CH+Eo0mXQJiIwCvulwrLRMw1HLtePGZizxmLA23jWMglHNPdrbjW/4rBk
6t0I3Tgc3QmOjN7XmIDNdpzqhAdEPpJeF/vkJGFnntI4pMKJ+J+SWwb9UrCM
gBeG+0JwtFW2WHY5Jg2jmjiksQTi6L3BA8HdjzIwzWMHvy36Euu76cIqVZSF
uXpKxK7cxtGhGxO1y/o5WPJrqdP/buJolDvpzkhPLvZ26Si+wQ1HlKbTsnW6
edioglzhRiccydKMI2pEn2Cb/BVMN9/AUdq4GXNvfAEmUQs7tlrj6G+fVfDP
1SLsptp5z+1XcfSh0tWf/fNzLC1US4zDBEfx+m/94veXYTUtOl93GeJIuJJl
Sr6iHCOzGEZz6eKoo6cwMyqnAttywURl7wUcef45r/c9uhI7HHOVyqtO9Afr
r01Hfaswve7rT/nP4KhJLOxN8I1qzGuXzWVBFRw5nznoNGD0DsswtGcTViL6
bYr0/iMDwj6kONcelMdRZkWOxJdNH7CJL+4e4ieIfqHo3uqIqMO27fM6eEgG
R2MyjHUfdjRg0mZ3vkgdxlGQazlbZWIjZph9N0pGHEcHnluYFO1txnxI9+C4
CI4EhPjy1C9+xLKF7y/ICuKoprYgp66oDWu0icqX58PRwrXjWQrMndjvglhj
xb04Sly7dnFIpgtjn0rcBpw4InWKdHCZd2MnDqfVqHDgyDdzSlM/uge77PLI
TY2N6I9gzaZ448/Y3bIc4XNbcXTtKe+eYrF+LI+SP6C+CUcXW6du1C8OYB9P
FEVoMeAIm3n79mvLF2zWq1RJe5WGpNij2KipX7Fd1eVzuks0FM81JsAd/A07
+bfysQGNhm6Okr/vExrFggLQ1sszNNQS0eoPJBL2tK7+nekkDS18V+rUUf2B
tTO1uFwbp6F9J8r4LHLHsYWz7UIWYzTUfxZ6dKR/YtzhXX1W32hIs8/qcDdM
Yoptn+/bfqGhWsuI+7raU5gF2xcF+z4aKpt/Tu42m8HCtL/NOnbT0MGAPkzP
+Q/2LG4sx6WDhi6ErWpN1sxh3b3jBu4faYh1k+antOV5DOf8zezZSEMXxcN/
4AEUTDl9wcnnPQ11u23aUfYAx6yHcQG/NzS0K/m08Pbdi1gE/0rv3Vc0ZFAd
KO+QvoQ9N18LDSqjoayQtJTqkBXsc+7GUyElNHQop+JySe0qtvSDeSaskIaq
3n3iy15Zw/hFWbMj8mlIyNHTVZ2XAU7fYNd/kENDk0uMPXUnGcGuePfm2Ec0
9Dws9pii0UZ4MLPnTXwaDallsEuldDBB+RE+x6QkGtrPw394u/1mGHAT3J8a
R0PLKZKHQjZvgb8vRXrSHxD545SX/Ju7FQRx8ZBH4UR+Es5KeMA2OHtS6mR2
CA1FcRiI//7KCo4+R6dyA4l6XGBvvbJjB8S9k83M96Ohfz91FllK2SFxQviD
rjcNvbikwX9lhgOS2Xf9WL1JQyXNp9WKD+2C1FMMzEWuNFQop2S/4rAb0q3+
iBs5EvFIyZ4Y/8wJGdHftBjtaKjTJzgJUrghs6rNpdSShnKbemhpJnshl7Xg
1eYrRH3NXCovjuyDPNnkwXIjYn1F77kKs/nhiXnwipkeDY1zbFLRvycAxRXm
Kq/VaUiLeb81CReC0pGLVpZnaOgrwyF6obQwvNiiFLZDhYbK/54Md7MXgfKj
kkVvFWkoIoS7t490ECpM93bYnqQhG6mr/0jxYlAZyjy36ziR34Fc8TlVCah6
QdtZe4SGBAN+GawuSEL1EPmEoySRDzGpAJbHh+EdU4/xHlEaGrx0Iuew3RGo
kaq90yBEQ8XkW3sZhqSh1rg005Wfhux59S2m1mSg8VnEjxZOGsqL2EZFmseh
pf82sycHsb66n4pFbiegdYOthCAb0f89Sh8fk2ShXcLwQscWGtoeaGDQ6XQS
Og1Ou3oz0RCDtMP3xUV56PKXSRDZQEPUkUD7A8EK0FOwv7J7hYomHqTSLuxQ
gs89bF/86FQ0+Cr5dVwzBv1/V1bEKVQUZqO/X8teGQYP/ubvn6UiIfevFp9c
VWBIZ1Al6DcVvfezfKLnpQrDPk1WUhNUZBw+NdnndxpG8irChsaoiJLocdgk
WA1GO3OLQr9R0V/ttFmZL2eAtBjbcfQLFRU8st5HkjkHP7WcdkV2UdGLk/+8
VMnq8PvWFVm5dipiDW3NX1DQhOlsdRNyMxU1nZG0ZerUgtlWOd+YeiqyH35X
rPPgIsxRRbIUEBGvvOjtiwd1YDFjRGK6hIqOZSR5Rszqw3JT+4XUQio6ZTQb
Y8lmCH/nql3V8qlIlf1ckeIhI/jHU5gwl01FGq1ZDZyal2DDmZTKjAwq0g1e
HJm9YQyMLiFfzqdSEc+17H6GBhNgSvP4S02gouCk/qsFR67A1hlt1QuRVLSJ
8bQjbbMZsHJj1kuhVMR70pvy0P0abFc5dD8/iIpSvnvs9gswB3YHnmJdfyrK
qc6UNra6DjuTtnSuelNRcdJHrWPnLYBH6YNJqR0VcfmNHNrPZgMWsQUOeVZU
VPcrZ3PMblsoIsf4pZtTkYuB9eg/XjtQiDDLCTWmolDJ6YQRCXswHVj5ZXae
iiwXX4R6sLhAngR52UCNipZIks+iDrrCjF8rq6YyFaWrryV+b3YFf+E0abmT
xHrzP6yaKrlDlpvs7R1iVHTf0putTcMTfjXwRWwSpiLfXB6ecvFbIL1nU8bK
firS9+0azdrlBbU1vegnN5XoN0XnOz9vA2mbG3MtMxXRjCSjI0m+IHHNeG/l
Riq6xLGxKobuB+7lIPlsjYKq2obGEljvwkaT7dqpdApK45P9t5gZAMJPipNd
f1LQ1/hZp++i98BxKb7AhkxBJ14Mb93beg8qtHyqTb9TEA8vpwHdMxjOUM6P
nB+gIOGooRfDMyFgozwhIthMQWPZpiMMs/ehNKFDjruegvaM7Prt3BgO9IkK
dTb03/tttK8ZEXD/wT2npUoKMkiSZ6vUjILCIYFX3U8oKLOSwbt5OQYWDm9p
bs6lIFURSacHXrFwKvDP4PtM4nmXPr7X87HQKlrztzCZgtIdSl+G0eJg+uYV
taBQCirXFjFi4EkEqR3JvUdtKOgdKbJh+mcqGGjYGvZcpyCZj0gx/FEaeIec
HHC7SkGfnlMqRPTToWFlaOiFAQUlnT+Q3l/zEEx+7SdJnaag3eded0n3Z0Lw
h8I5CQEKenrf8BepNhcK//q4t/JS0Jb2D10bjz2GTjkt6g1uCrLbIfVGOP8x
7C2dpRdspxD339teaeF5UJp+bO3g6gLaK1SyaO30BL54vGc7MLSAzj/FKl2s
i+BfaXRMXd8CSn/N2Tc+WQTCv69xWHQvoI7macoV52JwNmfkzGlZQFoCttft
vZ4B04Vz+/a/XkCu/e++WT8sBamD3RK8iQtoa+Md/PPdMgge/HFu18UF9NJ7
5OUblkrw8l072ay+gLbQ2Tmb9SrBXoBH4s6ZBWR68/Stz+mVoGOnzUpWXECb
XQpO/pF4DXyLb7rKJRdQAWtZ7h2NKqjkjjHR27qAHLZrxwyEVMMvI3mHuIZ5
hDGmftwwWgNafQ+idyjMozciDuTP3vUQkpvjzCY3j264B8uJJNdDjcuri9uO
zaO96FGkZ3k9yLB8284sOY/cjbuOcU3VAxccivnHM4/cWO/uO3mlAUYLWmNm
ludQjnPO22W5RvD0ZY5rq55DoQzOjJI/miDzQGBC2Kk5lO3Qpb9hdytY9wyL
vD4/iwRvLMxbyndB7gatHCOVaZRMzyAxLvRAfZLLh8Nqv9HK96Bq7jt9cGNv
WP873l9o/x6HD+o7B+GA8jG703smkIiEfeA59SGwMOydDZwko8emB2eKgoch
tFuUZ7FhDP04OMJYHDcCd8YEg9siviP2JSzwhvgoUP9+fc914iuyrxIVsmcY
gyQzNKcjPoDSEvT8Sl+OQWzk0bRm7gH06mWofFDlGERU5atgmwdQd281zfDN
GATsjIqXJPcj+uTnnfM1Y2DfZHx886N+9M73Jytv6xgoSy14vWXvR3af9+5k
HR2DqVXhNZHFz6ior533KQsJVB5FsK009aDVrtO4yWUSuDsd8Kh/1YN8+Mu/
lpiSIE/p3WBkXg/CHQQ+MFwjwZaRmcf7gnqQ+oJiYbolCbr4dU9hSj1Isqyu
FTmSwCyb2zbwZTc6r0ozSPEnwZ3HebXM2V1oTGw8ujmbBM88lA52RXehc/E8
NYO5JBg53R+Z6teFSla0ZybzSKD6g/mS+JUuJJSZoshYSAIWEYcZDa4uFGug
YbqnjATSFyyP79v7CR2uflLZV0sCB32/n2IL7Sij2NmoeoQEG7DbElt72lGq
vbWPzSgJEsU8nCbL2lGSuGnmThIJalbtKIVu7eiRaoOK/TgJdhYYrEnMtyFK
/I+EP1MkqP4ryX14rhXFvDJ4WL5IrPfJ0FmZ2RbkMJry4xM7GR7F9oVzdLYg
usvTkbM7yXD0Tlf7fEkLMnrXHvtyFxlMdZr0yp1akOeMU1cUFxmeL5eZHZtp
Ri3Xvhw7to8MRtrht05MNyEfSnT3AVEy5C3KPZH/3YAMyjQ63ymQQVAoyM66
uQH5O89pcSiRIVOzXSIurwEVSCa3WWNkSMs0f/7LrAFV2YhfZFEhQ7RaeFVK
bz2apPIJy5wlg1fsUCvtXR1amql8IaBDBuob4QeC6XUo+jjvqIEuGdzJztoX
vOrQgTt3d4TrkcFRduPnPJk6pPaT//uMARnMhyW/6T/5gPTWOG4nmJBBQ8zv
T1lMLeL09UwLtCBDs25z2TfHWvSYK0MpyZIManc4bm7VqEUyZXVjBVZkgM78
RXOmWnTw7NitDhsy2P3K2CiwUIPmBKR//LEng0IAiA03vEPRRhfD+93JQHoe
7GZgX4WeL6sdZgkk3k8pHtcQr0I615yU2ghn+PeYqPx6jRbqky5EBRH5uyCg
KmXzGh1/MOG0PZgMH3+/3bnFohLpm5U7/AwlwwsRysu3JhXIS214XCOKDGxs
PGLleyrQpsgS6UnC9lTljIKBlyih2/9O2AMyCNdHBycZvkSlZoIcDdFkSDWX
MHTRLUebv8Zl88eR4e7D67iQ+gtUcL8iyCuJDMNB9+33bnmBRLuOf/1L2P2z
2fv90c/RF3sBTq9kMoy7LT9YCi9FStn0+w4pZGh/JnOkJPAZMuyPPqqWRobQ
O3e509eK0bvzhRrlhJU1OtZC/YqR8Nt6C4F0MlT8tOsy9y5ClKzF+L+EHwpl
u+12K0Cvv2pZhmeQwWB+xoThz1P08JaC2RTh7bUKqrOOT5E/h4TJhUdkCLo6
sLPF7glKCDDClwkrHhJZqZjIRyWTWSSdTDLgy+7kHKt81Kw32fmEsH3q9oo7
5nlo/6N7BrpZRD5sTTPsRh6jhxQd9YeER04UBRuaPkZcGvzYOGHd3jOGR4xz
ESu9StQ7mwwnt/vhJO1sNOS3fTI4h6jPzJ+Yt9lZaEDpX+sHwoo140fLcjLR
59WZZ/8IM5t33854nIHsTikxu+eSYVq6mTc+7yFaPgE3HhPuYXhfE5afjiJl
VNo+E858XMDk8TQVPRc7EyP3mAzBNzOf2hWkIBXhc/N2hO3PJGqYFSajYHm4
Gk9YhytiRr8oCd0YkbpWRVj2591Y9eJEdOEe//URwvuqPI/BswQkI7bdkimP
DIzhDv3HS+IRZ8eqlQThXybXvSVK49Cy24yNDuEOiUv7BJ7HogZ9v2lHwjb0
NH9J8xhkcPF9URhhmbSQBi6LB2j8/KpdLuG/p9xYGK0i0a3TSqLvCbcMm+rM
WIcjZsxvfIBwov/55EHbMJR68v3jBcLXBI4P198IQcqxKxaM+WSQqNsv9Nzh
Hoq39qNxEMYtt9mlOwUi8qm1MEHC97bNXtn23R+dYA/kkSHMo934c4zkg8LG
GUuUCZfHZ3hUTdxCdP/sgYuE1fs91qJ/u6P7xUHa+oRrjyVztQ07oT2DVs2X
CP+pVpO6/cMaFTKdA1PCCsETkRqDV5C8jPhrc8LSImG31D+dQ61Xtx2xJizl
62fIJCwN23K2lNgQfq7DOPFkSR8cSTt2/fe8eI7elYO069BxgNvbhPDK3rzT
3jM3QMqa/7seYZuPy5wTC64Q80TkjBbhTyEHInb8uQlzPw8VnyF8UlXr38mp
2yDh3RZ8inDOv5vuFj99QVDOcUiMcMi3i5RGtwDYQ2OV5ib8RsGyZMglCHa8
LAnZRHg2zcv2j1MwMLtd/Eoh8iu0GCnI5BgK/6T+SJMIGxllf91jfx+6XTos
WwlHVlQkHbaLgL3THbklhKmu37ZesoqGgh+dAjf/q9fPxbETMrHwx/zTtUuE
S7k2grJ0HMh++5R56r/6nmHL0DgSD4z1k/xchMk3uZcMpBJgmV9dYZbot3+P
BY2uHU6EeZ+CS02E9/RKvrxxKAkm+5lvZhI+yijLflMyGUaP2sbeIqwlo+zk
L5ECg9FNzy4StjHXaL0vngrB3wVs+QgHxBiIJoilwXTCI53fxP6omLEbe3rw
Ibz7m3wgmDBfUZxht1AWTAQEeecQ+215jn0Y8WbDgb763quEJ1hN2LifZMM1
8U1SPIRr1CZdGqtz4IzhnScPiP3sVLH1hNCPxzDx7dTIBWK/G3fp2ng754GY
d3XaKjEv1KbTUroW8yDLM04zh/A+YYllf7YnEOkMz38R86Y9QQN9lS2At8VT
mpbEfKp6Hj939EMBdBempCw/JM67tiHBCM1C+Pn0NDmOsO9Gh+CT5kXwtiWz
8D0x7yQ9ItWTwp8BS7GUzGQqGc6IT9wQdX5B9M/42pdEMpySi2DUf/kC6hSd
hLUIS5+Reui/+AIMd9PO1yQQ8Vy/1d4XVAYr5dXyufFEPVM3HwlOKYee/SW1
8rHE528RpY7WVkCi+L+grZFkSOdqi2Ld/Aqif8opXIogQ6ywi8hJzVcQlu9G
yQsn4lN+bRTT9wq8Bcctle+TQf/2uTdKvyvhyrXOL+ohxPz4ZeufvusNbO3z
zGW4S4bk696iogZvQEIlNPiUP7EfvkZ0vUx8A5olyTYefsR86iwR6uCshuiQ
1xLjd4j5VkFpWuN+CzuV+73zb5NBPvDuDut97yFLISHzmxuxHx5odqXE18LE
0PXP48T5y6jxWXikvBb0XUnvf18n8r35qrdwby3M0zVeTZkT8yTAWahs1wdw
dVAWHTMjzhuPuJutiR9g+6dbU42XydBrMrBnNbkO7LdFux8mzn/ng5bXLR42
QKmRS2c5EPHlZcherWmAu7Tx8WvEfUNGqH+b8VgDaCearrIS9xEqn3rlBdFG
mI5u2md7igzenEe2yb9sBKnJxomZ48R8Zlqp2NHWBMx/f7hliRP5JcVveb/c
Akt67veucRD5NG//9prvI5jqapKbdpDh6siml+XKHwFpC5+W2k4GgaHbVwtC
P0KIVj/jKgsZ8rvNyhN2tkKUxWUfBybifK+VMLWXaAMqz4auSZwEzZl1z7kv
d4Buk9yQ4hAJTvW/YHHx7YAs8y2cNoMkKGXLsm7K7IDp5UHtmH7iPuh7h9eT
3AFhR3wax3pIYH75eFiPYyekvWdUvNxGgmXOJ2YP7n6C3dyPOClvSZDc1BAa
2NMFjEKmD2IekqBFqeAEnd4D/vsjIMKABDcqTomuMPeCVW9VkIEecV+V7Niz
xt0LGmE/G/l1SKC1Z2Fl88le4P6jpvVSk7gvLyjUcd3uBf6s4v5GVRIMPP10
UXaxFzhPqfA9lCbBBAfd1nPxM7AN8UVs2EYCpokz6ZTFfpjQHThy5O0YyJat
7A7Q+Qo0n+EshZVRUJa9n8xn9h2WLs3drpYehVrc8Gd+8RhsUB0vtCwega9k
j+0hvWT4MWMWlZk9DKTDq1WO/eMg96jQ8n7sEFiFxztnMP2Cs5vZozREBqFH
JeHpZ7bfIDtt+2H72z4wTfiu0Mc6DX1U+ZFehV64jst95ZObBWamjBNLOl1E
f6/6y/HPQcoXu/Fp1ArtPiZlqUJzYA7MvA75reDM84q8dHAOPgm9ZH0X0QoV
Jo7n3x2Zg9tvJESVDVtBeXCIQ0VlDjLDlqqnJz+CUd/rPA2rOZiyz/EYYf8I
wZ/cWq8WzUHTWSlJin4zfK8f5wyWnYck3SOnb2XXQ8UyfbDr1DxUGt504Qiq
hwgZlgw+mAd1yW25ipb1cDxLSuj1uXkw9VV9qiNSD/d9vKR+G8+DIk+u+7OC
OpCW2XpO5848BPtcru8t/ACBmYdu76udB5WCSi2HQwgOeHsMVagvQDpfT7uo
TiWUh0aVvr6wQOyb2weLWCtBOTE/qFp3AfSP8Acc+vgKzJ4PSNSaLIDWw0u4
l+orSB9XuNN2YwFe8rgunz5RATv1mPaRwheAWX714hOBctggmXR1R+sC+HXv
V7+r+AxiTpbK7OxcAI6da3pc9cXAf7Z5E2fPAuTpjZiWqBeD4vWlEp6hBWjr
zXD9alQEXilX/4n8XoCYtjjbAb8CmN14MEuRhQLT7gWXhGl54McBHrCdAsM8
v/dYhOYB637jc6o7KTA38sZXlS8PJE5F/DnHQ4HIUzzT2lqPwcZ1FvQlKLBw
2cH7bVkOfBuuHL2hQQH64612Jl6PIJpxQq3+IgVqti1qcr/MAGUxzsJ9+hQw
9pg40jf7EPI8PNw+XaFARPCV5qqAdHBkkWY84USBjcoBenkVKcAvfc0m2o0C
in+Hjk2xp0CXYXTrT08K3Ko6wXnUKRmO50zHp/tT4Jf01AASSYIVucIDG2Ip
4HdAodWqKR6eXR0MM0mkwIFzmd9Yj8WD2T3m6fJUCjy1Z5ivyIqDuk7rCusc
CuwsalaviIuFCGuhM23lFDAqZdoVuv0BKEbqFgq/psCMZOsHdtEomH0RwOb/
lgLBhTGuDyES9P6O9Ek3UKA8j6fzhWs47E14aJPcR4Gt5DHxGJFQaK1qbf3z
hQJBQT4MuVdCwHdkSUp9hAKdgru+VMQFw6i4MX1lgkLcD65l3xa5B/HaYVcM
pygg9wYOSXsFgZpnJSr9Q4GTSfurfrYEQkHt7vvXFylQect/hMk5AC5PnJ6u
/kuBLed0NdzL7wIrq4fObgYq5GXnDwzd9wfXS917mrdSYUj/4kLxCV+Qm31Q
eIiXCi3u3n1qrLfh1673bKH7qZD9/UDpCrsXpMtPu30/QAVMqzO0nPMW/AvW
OBV/iArJqWyOukY34UWRd+aUNBXsRifv+wZ7gEVXAeOZE1SQF2vKf1ruDrvx
AZtMeSpsc82t6xl1gyZe5ja6EhWGX/t/X93uBrdVZI/oqlLB03rzSydzV5Cw
tU4oOksF2fGooMs2LhBdXn/lqjYVOvY+eGtc5giG6gHTdeZUiK+5zpExbQu1
Zyqv91hRoSap7u79HzZwSHW6f8yOCgWOB2ZvDlsDk4Lxhw1uVAi67nhqdoMV
uMpFy7J7UsE8PuFrt6QlfD3WULzfmwru9dW+r4wsoPyQdDIWSAVLka3I95k5
8IvbbLsYQoXYmdi6Y83XIEIkI+BqOBUiX3/WP+phBtf5tzj4xlHhs6bprSNt
V4CdfRSqc6jAUpfXEDZpBL6sXK8+5lOhid+W2f2bIfzaoiXxpZCI5464hmm3
ARhsCsr6VULkd3Aq6myjPiCGqt2LZVRQOlH6SfqNHkj8mwlnrqSCxHO52uSv
upC8fGCNq5oKonFirCUsuuBMiZk8UUcF1aLd5192X4ShP41mZ5qooOCMf/9+
5AKcnV7pNWilgunfbK6YOE0o/yWjbtVJBV+Dj7QmbQ3gG7et8eihwu9n85//
sanD/bFHx+71U8FkE0+FbPs5oH7rLYgfosLtq6oJzhFnwXxoK3/uCBVSXtm7
Pzl/Btr7IaGMRNRTVUZ5eZ8anOz13PJhgsiH2SUtLrHTkPep2K/rNxXafPyM
jx5ThTst3HZ/FqiAl390tVdXhomGC9/+4VTQz/y+xFqIgd6He3rbV6hwg+Er
R8kGJah5/6aZb40KlZEuziaxCiBR/Ufx8EYaMHExtW0SOAXJlSLlisw00M1O
FS1/fhIYX14R1dpGg0yJw8FmIAfOz+MyruygwVTFh1GWTyfgS3Ezh8MuGkgn
+XC7FB4HtYLVUB9uGlzwUmirSTkGL/KO/Q3npYGoyV//7aFH4f6jrImCAzT4
us9/osRCGqhpfVeqRGmQvDI69/2pFJgnb+tulqRBg+qU+gauwyAX4/V24hgN
grvXVpQXxCE3skQal6MB514Ww+vmYrD9Pjl/kyINTpvvLg3sPAg+wXt5OZVp
4BjYZdlpKkLcu7VjhdVo4Fn/IfCivDDo+YVsOn6eBnc3vczq5DwA773f+pzW
okHXubz3FxcEQezW/B89HRoIRiR97ewUgER3UWsLAxoYpbJRHhnthw0uV4fc
jGnQE3T3sdINPnB0SNAONKWBos6Wyx7NvHDaak0+24oGt6b2No/c2wOj9Cl4
aEeD+wVyvJq/ucA/cvBMsiMNjlkburzW4YR9+xs141xp4KF/82Yd+26oLi/T
jbpJAzP75br22Z1gfDbzUthtGmgEBnAMtHMA/iXiapAvDWRTN5uPFbFDopOX
pV8AsX6zvVcHOHbAUQarG7eDacATJbI81cEKXYk6Lh73aWBBl6vUEt4GzmJK
ns5RNPA/Nbv0PnorFGlzBVol0qCy9nJgtuVmOE9mDLuWSqxvI0cjRycTTNz6
E3U5gwbpX/YI7lXYCMEsw/GG2UR+//pk/xZiBKHMllSdPBrA/m/737EwQK3M
q0zNAhoIBftjvONrmFljTt7ZZzRo+qiqVFOxiv01ji5SeUEDhx3MiteDV7D0
aZ8XihU02EMR2zfosoSdDLCtlKsi4r+8/5zvPB3r32Xw7ug7Guz7wOku4IFj
HAqHW8QaiPrFMLbY3aJgpZ17Ow+00GAMX1xgXZzHtCw2f+Zvp8FQRVYHd+Yc
9pu28GVvFw1C32dK1J/8g90P//5992einhz/3hidmMEO8rWP7xgk+tP6qvpv
mSms4UXVFMswDRar3g36SU1iFmr585tGadDCus+OQ/IntmEwjr7hBw3qWHzs
dd3GsUwH/9WVnzRQMZ9IFuL5gSmu2W+kT9Gg9pVePaWOhA3FX9q68IfIzzb0
p8FhDLt9UG3HDIUGNeaS+5J3j2Jc1dKcv+g08HY8Etfp8w2ruMDHS14h+v9m
SgBZ5yumN7ZVcGSNBiL8x1DKgy/Y3E384JeNOIQ2d65qtg5g0VvIhz4z4/DL
1V5xA3M/dijj09FP23BQ59l8p+L0Z6z1yLuTrTtwKKrPeWMX0IPZ1Rdgjbtw
MDKu/f1KshvbfClJrZYbhzr/3yPpm7uwvN+BGm95cTDTEH+yVteBfee4YlR2
AIfcH923EqQ+Yr7550yfieKw/ejBa1d/NGE88sctnkri0MPtbdui3ohVtQvY
5R7BQYzx++p8dz1mZM7m/OgYDnen1RJ5L9dhVMqSR6ocDv39RRJnSLVYfNiE
d4ICDpeDBIO+fa7BpHl770YDDsyXZkqlx99inaUoJPw0Dvxty22TDNWYo+qz
yOBzODAIBmxsOViFsfSnxt3VxOHHrU0KTzQrsYIbISk+2ji0tEe4B7tWYGdX
3R556uNQLMReZJFUjv2INXvseomI776PsUTHCyxIWLPQ4QoOssOpD7aff44J
VMk9t7mGA1+Bon0L7RlWoyn86rolDkw3R88GPS7C7tIPar60xeFMt3d3LX8B
pvxYfIzJEYcwqV2ma2n5GIP2IS8jVxw+TXKlFoQ+xuqWpdgKbuLAyyL7L2Up
B7v3RObx0m0cbCUMrcIcszE1vePymn442CT9SpypeYQx/ZP9lBGIw+v+g9fb
89KxxkJ569kQHDTovdYHHqZgoYaKKxCBg6sBSU7hTRJ2lgHi4qJx2FQ+t1V/
IAFjLlERJcfjILlj7as9LQ5rMVZ7fzwFB11HttKgXbFYONM5/dCHOMzGy204
YRmFabxQnxzIwmGy8UpqX1o4ts1U6654Hg6j9TdevDcOw9qZtTnvFOAw8MGr
JZ87BHvwUre4/RkOnShk9EF/EHbxmoEKfxkOje8TFj2TArAd2y4NuLzCwe3b
uGrXPj+sq9LE6cMbHPDZ0WRLbx8szsJ0464aHHw3DP/G+7wwve3X0qzqcGDc
OYBFHPXEdlZfP1LZhIOIcE88X4w71mtt1cjchoOhQ3rH9QEXLJHD9orJJ2L9
Fwycnt13xAze35gv6sVhuiD97dTDGxjnDcewvwM4vNs4tlXyuQ3Wv9uF7+Iw
DpFmosb2dZZYSq3by6xRot/eOD0p7DPHjB1vqs//wGFDXCW7zIIptneP13fV
SRwKBkkZ+EsTbKje2zNxBgc9gR3i7zyNsIcuvtsm5nH4a6vwKlBOHzPlvZsj
h+Ogee1TUPSCNsbXHCgXvoxD9oPCb1+i1bER9+COoX84HD+9vTHlyVksiz/M
8tBGOjQvuj8zrDmNmbeGL/kx0+Fy6UDCrn5lTOBWVMynbXQ4/vE2nvtVARsT
jBERZKfDleOqjfzbZLHcjri37rvpICSV5CKIHcUsvBN1G/bQYfMcdYu84RHs
gEjKT04+OqQEoaNHpCSwH11pfraCdBDjjDAVYRbB8n0zdr0RoYObdiGrXO1+
zEYsq5BFgg5N4sav7w5wYaKfc8BUinj+Vs29q8s7sV938/pKjtJhd4h69q1T
27FCyacOa7J0GOTjkj8asBmzHyhk0FWgwymnxsdfI1eVJO89S8kFOoQpvS/K
l5pWmpZ6fph6mg7///ufJUNl9WfOr9s5tMIkRWvdf769CTlluO4X4e94o0zW
7XoClX27uu6FqIZvATbrxhU+nWj2WrdbzeBw5511TyuT7vXfXffYGVr3eNi6
27V5nZlS151raftEpWrdFyLXuN4trjtv6MjiC+/F/9newiVd2n/d0r9LFV8E
rfvd0uHA55Hr/rznEEvpo3UzXRLbV/xh3Va9Asr5W5f+Z4kr5iTh7eueI2UF
5+1ct+8C/8fHvOtO5ODTyz287gbtvVZZuuuOGDDevN9o3TrXUgsyL6972Jl7
5pHluqkPOG9leK67mtNwzz6fdQc8Sqx+6L9u1pJda+lh6+45rp/DE7Xu1Hfx
p9Nj122m1jO+N2nd//f96P/5/wFVlGYX
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3476#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.8935136, 0.6004149999999999, 0.2205464]], 
          LineBox[CompressedData["
1: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
Z6a81b2um5hT80/psWAC5rf42BovemPj2vjHiXACtn76MyFd4IlZt/+7OXuP
ALct/B07/nhg/foswvhDsr3jhypZjK9iHScFr2xMJmDY+/2fjnkXTLdHjJcj
jYC4qbX2oiQn7LWZzCueLPJ+pfjnxzY4YKoDRy8I5hLwr/Zi8Mxee+yFpQbb
ngICTFRVTBKN7DC5Ef0K6RIC9HyFsKBpa6zE1sxCrpwcX0DLUO9RS2zvuM2a
0jMC7tx29d4bao49vnAxX6OGdJx/5r3XppjQ5NUTeq8IiBV291gcNMaSnW/R
jBsJOGbVFFY6dgLb9jP4kUULOT+u50rfYtfHotyijtm1E3AtOvyDtqIOxrKQ
+ONiBwExRZeucTsew+5cy4p27yZgcbrMtcAcsL+0wqM3+sj5lHEnMuSFCnbz
RtVYwCAB9ibmhXY7FLGlX69Cw0bI+bhJsl3VVx5z82vb/+ArATU1vycFRmWx
qX9dvQnfCPg6kMo+7S+N2d8eupU+RQDzw3kD6TFxbJSJKpI3QwBf1ekGTa09
mEXYTHvJAgF7B+plbYqEsR4WuvszGgG1hJ7OrPAu7MS9Nb5XK2R+QGCf8Cwf
1s7J2tD8h4A/4ZNcp15yY8eitzm+Z1iBvvgRuwwnDqx+2y6O3o0rIHAj/rbR
682YYoJ41TDLClhbGj7+J8SEVfIfPEvhWIEoH5Ywm+U/agdSFTdMb12B7djN
N/VFy2oFu44VLG5fAcVN3dyqLd/URDMNTv4SWIH//3/SdBFzOoPQugVybdNZ
RNbNWejxk19q3SuVSeFHlNbtqZAtg6mte+5F0SdtjXVTX9XvMddb94c2KvK0
XHfu8MGVcp91X7J3T5UNWLfsdKlq+Z11v/p14HbZvXX3CexnK01f98YzkruK
m9bt0Cusnsf66/8sbWVHEduy7gVKZkjutnX7Le1+myO47nhuIdPHB9bdcnKH
Q6bJuiMHLJj/O71u43PJBRln1z1yhX82/cK6aVG819O8113Lay6w69a6g9Lj
ax8FrJvjKc9aavi6e+RPZe+8v+7kV7GaqdHrttXqmdiRsO7//X/0//n/AYDK
SEA=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3547#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.9021174, 0.5055088, 0.2018252]], 
          LineBox[CompressedData["
1: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
eA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3618#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.8929546, 0.3896616, 0.1794008]], 
          LineBox[CompressedData["
1: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
4rHM+P9srT3waUfKf/6/77/+f/8/I7S8/w==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3689#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.8739574, 0.2607876, 0.15481040000000001`]], 
          LineBox[CompressedData["
1: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
8hIR2P8BFTmtyA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$3760#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0.857359, 0.131106, 0.132128]], 
          LineBox[CompressedData["
1:eJwt2nk0Vd/bAHDRtzQYUqJQkVkkJFT3QSTzECKzhMqQqSiEkMgs80yGQhIl
YcuUDBEyT/cWIoS459wo7/mt9f5z7/qsvffZZ0/Pfv44vLauBtfp6ejoGImf
//0LdO4LS0mhIapIPqWhs5d0NWHOKeEpDS0P7rKHI/2kKPMP+tGxNEQKdZ2r
c/1KauRPkQ2PpKEIma9O5z4MkKgLt7lCHtOQnod4uSbvEEm06hJdQAgNqc95
mNcLjJAs/Y5N3wukIWWrGsZTomOkVqaests+NJT2LE8y4tAU6c/XwvhbXjSU
NNUa2sxFJklkPvC2d6OhBK75sb88FJKt/RULG2caulRpcahY9xspUeKksvkN
GjI8Ii8X8fU7qZ26Q+jKdRqyCTtwxdlshvSvfmKPgQ0Nuaz+8tIlz5LsdaO+
qpnS0KPWgtf7F+dJqRz2NcpGNBQvGdS77r5A+jx5Puu8Pg0N19MMlt2XSPRF
7MFy2jRkb7E0OG22TJK9vegorU5DlqNWoZf9V0g35Vq0JVRpyMT0i8yH7FVS
Jl2GlIgSDekPKn+TaPpN6m3z5OA/T0MaRpWx6dNrpJ2xWptH5GnoT6+A4m5G
KumcKT/50Gkaet6x+HO0ECPd5t1sOXCKhs7nzgR8NaCRhl69iN4tQkN2ukPP
24o2SXvvPfT8T4CGMIEv0Hj5H0lR2cyUjpeGwjc/9b//t0Xy3C1N2uCmIdqe
yarBWToo6t19nMpJQ7V0/TsTeehhLJWyc+UADQWst5kaXmYA1ms1Cz9ZaUhl
vu4F2+PtoCIW92VmLw3tnKz421P/H3j/vvGGzEhDHX2FutFrO6DkvVLa2HYa
im5Lz9EWZYSph4cCBuloKD2fJlSXtQsOaK3Y9W7iyIV+/J+c2R5QP/BJvQvH
UZ9Vw9fKg0zgP5Yt0baGI7m6vBLJXmaoyPfe37SMo5DIJqWBi6ww46SH1y3g
yPXcafEE/n1w+LTwePUPHJn8LOA0oGcDnb9bH15/x1FreLv0eYH9ENQyWFA2
haPtmqyxCZYHYN7o0e38IRwFdKRpXvhyEI4csTLK6sdRfQS5KHU3JxjMyCqk
9uBoU1Nox+qFQxBaxnz0aSeOPhbgrg8DD0PNnRmGmDYcJf7tLHkkyw1LpPof
4c04sjPMmYv4yQN8OxO7QhpwJP3CSzAm+yhEJKkm3a/GkdQJFj2tEF5osOLx
vVOJo2tXfFw+W/HBmtC6tVs5jkg6/GnshsdBeLlT1amEqC+R2EEJ4Afz6nxR
hyIcCTIzbr4sFYCYAF8W23wcHV7yOeE3IgjNlwzXzLNxxPz5p7nGTmHAWU8M
X0nHEX2ZRSSHjAicGGaoN0jG0Xpkd913a1E4/7iFDYsn+tv7xeLvLzHQkX/k
kBaNo3mHm0w8L8TBLWX3vu+hxPpE68iWxUhCkHrn9bAgHKmc52ImuZyCBFpk
zQl/HM3Oz053aUrBs2Jdli8+OAp7lFvuoS4Nb0z32Xl54cg/mK22wF0GPu7q
qz7khiPPwKCPw2mnYehdAlO9E45u+a/27m2Rhbkbxra2jjiyuW87AUtn4M8h
zrc77HB0xbt3zp1DHva0D+95YYWjVCmXSU1jBeC+l2ata4YjM5szN8YmzwKM
HNmdbICjwPpPvn9XSaAXPmV5TgdH2XfUGdRIimCrkPt6Sp3YX0wSl1gYlCA4
VcBCRAlHdCEKtNx2ZXiqMfuq6xyO5kQrR+Y6LkDBn6Id7nJE/R7xWskuFWi7
eqK85iSOCrh5H9R3X4Th3UvbrcRwFN2Yav3fFzWYr3lpyiCEowMdy13srOrA
xCXNoHWE6F/0rqdhkSYc6Vi7snwIR5FXaz56rGmB5P03JQnsOBIP/3s4XlEH
DEbljcf34kjyicUwFqYH1yI2ngcy4ujM65aJAnN98DxbtyWwnVivEfHvRpIG
kJimWOyygSFt4X9LrwcvQ6Em/T82DEOGuvZrti8MoXqjyeDtKoaqq4wFbica
QfuLkEKzJQwN5/3iWcg2hlEztc2tOQydiQs76PjiCizs2aWfP42hxABelu9V
JvDvffuzS2QMvXWp2WndYAosTk/+LIxhiN3iMt1Y+1U4xq2jGzuEoYuH/M4y
fzeDU50s+af7MfR5Z+Q2u5MWoOz7BR/uxpAxNf3ju3uWYDdmmMv3EUOvb0wU
V4RZg9eTg1hrI4Yw65knFhI2EHpuSPNWPYbGXIJzWL/aQPJCSjZLDYYyf8pl
hWXbQnG62frrKgxFOS6m0zldgxotHg2TVxjyn85J9T5jB52bE5mbJRgCW+Pk
ZfrrMF6S/Tu7CEMnJ3cnOn6+DkvmtpdU8zF01BzFT6XYw9Ze/oy5LAz5/p2s
vfjYAVjrplci0zB0xfm//UIBjiDFcyNtIA5DzNp6aNb5Jtwdd11yCMQQV6DZ
hyspLvD5jaiUsR+GdOblBipKXUEwZtpLxQdDWSIR6ztsbkO/stnfY24Y6o1z
3G3r5QZSRRf3jlhjaG2b/WOjRQ94HLhNr80cQ+WG1OldsZ4wdbU2/o0Jhm4V
hirXy3hBNJMUV7wehmQobDnCj+/AgjuPqJYiUc7RprL6yAcuaA05K5zDULNd
VWm+2j1IFYh/JSyHoSMVuQev7LwP6kOM8v9JYshK+VEspc4XCs6vqdUfxVCc
+cfelsMBYMPYcV1yi4qepHSeWWUOhmpySPGRDSp6d9vvXF1mMLC+V1zci1FR
o5qEUphECNQ7v/GcW6IiLmq0xhGdUODuy3mYO0FFpQm2yqfKwmAgwzvnQD0V
jTQxyWb8igTxu9LT9DVU1FTFMMKTGwXBekvCK1VE/UKaX6ZhNEgz2JV3lRLl
upUJirYxEOOoi0IzqMhvxa5lZS4WNKUFx3FfKgqc/XTgvxNP4baXaMyGNxUN
JqiNbiY+hcS3Ehf+eVKRzVigJGlnIkydPVPM4ExFJbeoIw2zieCpcsmL2YKK
XCKvcWyUJEO60U0m/vNUdEP/9g++u+mwdLfsvO7fdXRyRox01DIXYmtlM5/5
rSPaRTmHfUkv4PD5D6ZljmsoM7NpsONENUiwJPZJ2f9G7+0ig8xzGyB46Lva
fp1VpMrvmM5t2AJaXyOjWM6uIKuqP1MHuj9B5vHA+EcKy2jPcfknq3NdcL13
TODtpSVUFsm20cT/BXLptHKMlRbQQYF/+fnH+6DpqesHcZV5NKC1coqO6Svc
OPRooJbrBzIEwaoNlkE4rijteIFzBlHs9x0dmhgCW6O+pcC5b+hbZ6xbPxqB
0C9Ch/FmMhILp8vH74/BfTJvcEf4JBKr43dR+TcOa5ujdQdPj6L4wzMDuO8k
PLVEy3oig4iLkhO722IKYiKkUj5yDKIaNYwSbjUF4dXPlEg7BpFpqZbMHtsp
CGB7Eif2bQAleWMDexym4GaricyOjAG0b/I/3/XbU6AosXr3PesACr021B4c
PAU///JvCeD96J9Xqq/P8ylQyghn2mjtRbd4LmUkr0yBu/Nxj6aqXsTQ0Whd
+nsK8s/XDkXk96JU7/P8jetTwDixmMcd1Iv+q97XTqFNQc8RfQXS+V6UBc31
e+nJYJnN4RD4+gualZWv52Qjw/28/Iad2T1oZEVEcUySDCUe5wV7onrQuucj
/lopMkxcGIhI9utBrPh3xnQZMih/33lFxKwHfXfT8tOUI8NugVuLGgd7kPBl
NJ0JZJDUvibDfagbDch6JM1rk+HWZb9Z4dVOxDC6Fsp3gwx0JG/RXb2dKECa
3qT0JhkShD2c5151os0IFhE5JzLU/3X8XezWiXikV6zlXMnAVmS4JbrSgZRI
RpNnvMhQsynGIb7cjvpTYkPIAWRgLBi5eGqpDR1j9326mEiGjJivj/d9bkOT
hmsUxWQySN3v6VwpbUNZCU6SCSlkMNdrNahwbkPsDDZwJp0ML/+8spRe/IgS
GcyvXskhg7Hu4zunF1qR8u81O5MXZMjHzxTIzzejjU9mmiz1ZODlC3K8/rEZ
cbbtaVJCZMjU7BSNzW9GMq3vFTwbyJCSaf3yh2Uzcm7kEh1uJEOUyuPqpL4m
JFeiuu77kQx3Y0ba12sbUbSJQ7VbDxnW3vFH8qY2oidBHQ8ivpDB/ZuLrvbd
RmRpRFtJ7yWDkyxDf/6pRvSU17LtbT8ZrMfExi8XfEAftoyfzw6RQUPY79er
6AZkczWCpX+KDB/1P74ad2pA0S2t79vIZFC5v89zl0YDqpOkd6yjkAE+P8Ot
txPlNhZMBd/J4PgjneHYaj3KLpU6rfaDDGcDQHisuRYFgS2j0i8yUF4Guxne
rEYokPla9gbRPunFtIZINXpX/hzX2CRDun+vqdKPt6hi8mLUOmFj7WPKEvZv
kUc+7aLSPzJ8mn/Pxmj7Bvmb82vW0VGgXOD36/emlYhZX+i7838UYGI6LFzB
WYnsDkmpbhC+uaaYXjT4GoXs4TzycAcF+Juigp8avUaffn3rjttJgWRrUSNX
/Qr01VSJrWgXBR6k2VD51MvRbWfZgNtMFBgLCrt5iLEcrZ6RkCUTdu+3rDsa
9RJ50gsu6DNTYNrtTyTtcRnyTmI3kWahQGfJqZOlgSXoR55WVycrBULvP+BI
3XqB6vi01k/to4CiRtdWqN8LFJejyZNEuHLWscfa5zka+uKda8xGgTS+bLcD
bkUodHmcvW4/BQxXFk23/SpEUnJvKw4eoABzw1nlJadCdMpjadOJcJDFIFub
YwFiSQ8X2MVOjDeZufK+dT7qXGy8o3SQGK+DebrjRB5K5O0WDCM8cfp5sJF5
HtqdblfZTli/T9XopEkuWo2J7tbloIAcsx+VopuN2nsbo3U4KWC8+Cv6fXYW
8nqnHBRM+Fz9tNSrnEx0LLvRs4bwTusv3ul56eiuc6Op4CEKLEh+5IrLT0N8
hspa5oR7t9XVP3qWiuJKhJOjCVf3Vtj4FaQgv6eM52oIZ+YVbfcoTEaO/j8m
vxMO9swsdCxKQgYObQ9ZDhPjUU3QsCxOROf1ioQUCOsdDF+8/PwpEpYP67Aj
LDv7IEb9RQLaz+foGk2Yu9pLGkriUaum9mIlYfrHtwZkSuMQc7Tk+X7CXaJX
uI+9jEHp7NgYGxcF7LEUfzHraPTdZOSEFOFTKSHNB20jkVh6na8+4U0Ft930
dhHIYzK78zbhtjFzvcXrj1Eqi5h7GOEE/0uJQw6PEL1Mt106YatjMmNNN0LQ
LROPK+WEqdf2OKY6B6JzOe/PDRF+uGfJbM+kP8pvsTq5QPiwbsssmXIPMc0z
8NFxU6AiLt2jeuYOUuqhje8irD7gsRU1747ErzVdZyPcIJ14sGPMGXFSnywe
JvyrRkXC+/t1tP2xsddxwmeDZyI0hszQL65jf8UISwo8uqPerYZGy+aCZQhL
+PoZbeeXhMrAnPdnCb/Uo58poF0GJimTVjnCIjkGZoLrNuBAYf5ymvDGofwL
Pos34ENcy6gUYftPf9hnVm/D4Qu+MycJd4ccD2f55Qmev6VWThCWU9b6J/fT
Gz7nzW2IEM755+luO+sLUapkwf+9X8i4zu8WtwCY9NyXeYDwu7PXSkdcg+BU
vhL7DsJLKXcdfjkHQ1Cf2xOMmB8+PIJ3u1Mo9NPnMswRNjbOHuW8GQYCUr33
RghHVFY+FXcMh7s29KsdhBvYPukq2z+BjxuzS28Ir90e33XFLgr2DoZV/299
EmZx8ulTMWBQIRIURLjsIAMoSsZCUmS7puP/1leVKV3jZByMO95i1yH8zZOD
ZigRD3wqeyelCf/L4zW2Ek8Ax6OlRYcIc/aJvb5B5EVpC5J6VGJ/SdHLsnqK
EXmP4ZRuD2GtU4rO/qJJoFUbrfucsL21RnuYSDLw84NuMOGAaEOheOEU2IxY
0rEknFpvGZwhlAr9vzN05AhXLjqSCwXToNRMW4eN8GduD1KFQDp8qPpyZ4o4
Lz80/dJq+TNAvd4luowwz/NYoy98WWDaXdSgQfjPMusY4sqGo5eUMg4Qntlr
ysRRkA3TDcM+E8T5rVeZc22pyQGNtIBHVoSfW5/K4VbNhRTDTTNuwom+Pr0e
3bkwy+QtOUzEB+fKXaf5vudBcIDrsAFhkx59ex+XfNgtZnmRibDKQkpSD54P
ATL6WC0RX7j5Rf/4MxWAk9oZU27CnfEaaFS2CJZWhFo+E/Gr+mXcstSHIrCl
Jp1zI5zfMcIbrlkMA392Vu4n7MtwK1jO+jnUM/zINSHioZhHhPrTxyXwpkh3
pJ6In6oiMzeEXMrBOPGHpjgRjxXOhNNffl0OFCVVsSoiXkuqSqT54+WwLeVz
ogJhbps7nV+DXoGo4mzNyb3E/kjecTI4qQJ8ozgZDu8m+mcUWptqqASWPevC
rsT9kXqw48neHVWwOPRPvXs7BWL4XQXkNKugs4Dx1knCvopvjaO/VkGYMnfp
L3oKXPZWe3d+/g0sH3+sdIG4n+h/OPin7n8HCTfvuSf/IUOijY+QkOE7+PqG
fn2eRgaR0fCe1wnvQLLozwlpwnqfS/m62GtAfdBTuQEj8oHK361bHO8hVLXp
wdAaGeQDH7Bc566D1kPeS+lLZJCL1OxJimuAPMmb7VPEfU2v0c8/UdEA2Vfe
FeKTZOjcYeHD39dA3KuMIayErQJc+F7t/wAssUVhkuNkCPWI9WxP+AD3Cmou
2A6Toc90kPNvYiM8+inY40PkDy6C12xs05qBu6dOXo/IR/Ty02Ut6pth5Ymr
EgeRr5ziG9hjQm6GFnVe9Yk6Iv/gUX+jLdQCNfol/Tfek8GH/eQe+dct0P+l
7ZbRGzIEb9+oZOlohSPWKV3fiHwolRLHWPenDca8VeXuPCWDr3Xn+FueT3BJ
IUJ3WwIZLCb+e12h+AkqN3rsn8SR4diIt0VR6Cc4dntYOT6aDM++WFbEs7XD
8k/m6ZjHZChvEDW/KdoBZ+VtNiT8iPwls/Elx9UueP85N3/3NTIoDJTvdvXt
gtnS/gI7GzKUMWVdb83sAo3r7g9rrIj80fc+l9e3LigxKGI1NSfyo6syj3qd
PkPDvmjJp0Zk+MNeYBn5oBvEZyzrCtWI9WxtDg3s7QFW7TeRGaJkaDtfdBrD
ekFkXS857+cU3KhUENrY2QfSmQseVXNTxDnp4tzi6IPOF2b5H2anQItzdWOH
XB9stcr/N/KNyK9XzzYe9O4DcrGg//axKRgs7NaRxfugXPz25Z2dUzCzD3Pw
wvuBQ6+1g+HFFGyfUU39jQ+Ad4d3c5vdFMi+2jgQoDcKLqwMjG88J0FRNiyR
x3IS7A4E3q1mnoAGqtHsM2LedyUo/PsVPQaj3zyYQ/q+wba8gSCl3hGgiP+t
dhqYBvGpoVr6w8Ng9zjOJX37DygM/EdZFhiEXqX4wn6meXB41fjguuJXMI+f
PPt17wJsM1iZ1TTuAxvqmVGeM0ug5lb7SUr2C7G///qfObIMNJfFKS3rzzDZ
NM0eLLsCvFc3QmJnP8FxH4+RSvVVuJD/w+3UrRYYH3szdUPjN5hWbV/af/QD
GKkHLDRar8HAftOt+/er4YLdlny23TqUm4a9c3ArhSnsJ6Q5roOi954cdLwU
/COGVBOd1qEuMSqMY6AEaipe6T/xXAdB4V/jz86WgNQ2uxveweuQOBrpOb/j
BfBltiXr5a/DbFvLR6u8IqAbisXovq/DZQ9ZkzcM+ZB5y//vxuw6nPZyLt16
nwfntm4yYD/X4eDdfHp1zzzwFlRhWfy9DiP32EpHv+fCsidVcJiBChlKYu1q
3Tkwuc/M+NVxKozw90Wg61lQr8lfZXONCv9Eek64Pk+CB5ig5msHKtg3tt9b
lEwCxTwR8nYnKny+2tJ2620iNP6RYCrypEJmRI2dY/NTaCmWv74UQgW2xxqF
337HQ6jRuQ0Ip0IxSxW7/MN4uLgNYmOjqHA18WhwFFs8tJmo1MkkEc9n+CMz
IhUHnTt12e8XUeFmqp3D9qcxEPla/0VnCRXEFLd+R4nHgI6VodKRV1QY6pDe
Jv0kGnremDp/eEeFIOU60SC2KOi7bteys4MKNqzNx7n5ImCkyccrYZF4vvuR
SFgIgTRX3z0zK1SoOaAdlW8UAuZcD3LOUKnA8vZ+9C4UDBPuwV0j/6jwbmMo
ti/2IZB5owV4WTFQXxhpVL4dCLldse/dD2Aw8vHwRPnPALD1SdBv5sQgPO8q
7YhDAHzvSfFz4MXgxHt5oZYRf/jxIP9rqRRGzKPigVdwH4rFCm9tyWKQ0BrE
smByD24OFm/TP4uB6XCm8MdQH1iQeCm+dgGDuUwf/DntLpSOvGpSvYTBq20O
U9zSd8EltNI0SQsDbzvDtiinO/Br/F2IghEGy/t79MbmPaH8cS3XE1MMAv6k
dDAoe8Lt0+jVuAUGcuRrF8VSPGD1SfN4gD0GJmXY2Xtq7kA92336410MLrot
GKzVuIJb/dDY5/sYeKyw8otVuMCCIuXhwAMMstxOr9sUOwNZdf3L9CMM5N39
k7qTbkGnLpfL9mQMCkqyqj3YHUGtl599bzoGn3iK3LPlHaDRUKJ2fzYGP6PK
T3RZ2MNbU6Xdx4swYL3FV5zVZge51xwKlKoxEFiqOvoQswGemdva6rUYTH6+
+vfsBRtIdry3pteAgePiE5OXCdbA9vNhmkkzBhmiRqtF9NYQ6RypbN2GgXm3
Aqcq2RIYlxPnHDox8Ffv0JSrs4Ag9+wY1x4MfjSZPRBLMQfvu68n/IeI9an2
ndmnfxVWabUhoWMYjN75NcVyyRScfVtPRE1h4FlzJ8bN0gRsA4fvZfzAYEop
5JdMhDGMM3zjfbaAgU/I3qzEHCMwCV1oK1nGgO1TvA7+1hC0I7YO1uIYqDDd
N17fdRnamHbVN21i0J5qLO2sbwDKMWzXO+hw8BOWYp1O1ge5pwKvRxhxCLsw
96lfSA8qOE5epezFwTv3sXbKhA6Ip8ptm2fFIete8aV5N20o4lYuWjmAQ/V9
y5MHDbSAL0tTl8aJA4ff/oPKUpqQwWtEpePBQdK/bdOZTQM48y0zGHlxuPTA
71vK6iWIE3RUYRXAoTBAqr2lVw2Yit1+cojg0BA4W75ScRHCxO7HHRXHQUpK
O1fpuSrQlwXLC53Cwb9LqDO/UwXwiqRHsvI4PGcYP3pr3wXwOJ0jQTpPtM98
q/5ZWhmW3j7/qqqEw4B8nMcpYyVwVKj01VbF4fhXp4wEb0X4Vlt33EgdB/3y
6wZh9wAs4WO7uTYOPntFFApFSDD0ocfNTh+HdccF3tahc/C59RvyMMVBlddj
heGMAqirL9rft8DBxU92mG9GDpo7qEwPbXBIHKY1KD09AyQduqrw6ziIqNYw
BMfLwrueXeZxN3AwSRIYa0k8DTKX9zOkOhPzPRdTuTNVBsq+cj/PccOJc7D5
RD1DGkRMBPWLvXAQjHK4HpEtBfkjJ/FyHxyMp3rPd+Wdgpu2rqmS/ji8q7aq
+5gtCZLzZefKg3A4HN76tyrrJNTSxANfRuBw830/A4P5CQgKdD5+MgaHff2j
oSI1onBpV2lLWQLRfoGyS49TBJhjFxwkUnAonzGI1U4Rgn7OE7vLMnCIOsti
/NNBEFKzb5WI5+LgFNNx+LGsAFgLv9ApLcBBc/rRpOB//CBYPr984gUxXgWV
/OY+Plg4Ixpf8hKHndF0N2xzeaEC3Th9ohIH+X1MvOPhx8BbrXjwRTUOwiLP
kmUsjsL2K8LcLz7gECP7XlVkgQvaJxzqRVuJ+T5/MT1P+jDE2BdaP2/H4c+F
L6s89znBeGmGXrQbB/FuYezmj4PAfUfwWXEfDrUaTAITZexA+XtdTWSIeL/W
FQN9rwNQFPJsrmgMhxGlgYDms/vBhWk6QpiMw426mrIz9Gwg85RfomgaB1wu
a+x5Gyv84bbrEZon+nNXFntnyAIN+XnuhUs4hPeQcJV0JtCq5HtbgBH7L+JM
nLnYbmA7Z2squImDwpy01Q93Rhhqytl4RkeDjouSJzxrdkCmJjlD4D8aKKfX
Y8XC/4Fd3zHFZ7toAFNnuxwwBhA1s6bwM9PgHP+7XIFWelimZAXns9FAwVHW
+1vCNnhzc1KQn4MGciWvtXOu0YHv6pFPeVw0uDllc7He7h9J+Z7lrePHaOBC
Ubx6SW6TxEifyZTHT4N+uQOGnYl/SAn7eAxyxWmQO12j1n8ZI11NMV/jlaLB
rnNRSiYV66RjvOmJObI0uB1nc3aMdY00UzQqx3uWBgsTCkYpCaukEkmu0Wyg
wU/ztsWf91ZI7tVX/Y6p0GB+xCiUZLNMklNMPZp9iQa9r1rP80Uvkf59HP5w
VJsGPaVkl49mC6Rm3UN2Wfo06CrezHISnieFD5rsOGpMA+GrhazxQj9IelbJ
RZlXifZlks/iymdIYy4cixnXaCBocuFzbOM3Ui7VOJrHkXheSadtrCaF5Oif
eCrDiQb3thljMf1TJIkdA33cbjSonBWUy/k3QVqLZL+T7kUDbTYd0f1s46Qa
diNO7ns0mD7nxR0iMEoKyEioSfOngZ9DOjMmN0y6KNBvzvWQBgfjmuhuaA2S
9pbu30p9RIOy2vnVEauvpF6ZyzmHn9AgoE8aoaw+UnJt3IXUGBowU7k9i6x7
SZYqvdOHntIgnXOHSCzvF9L/f28ALV4T7383d5P+D866h4U=
           "]]}, Annotation[#, "Charting`Private`Tag$3831#1"]& ]}}, {}}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"E\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*FractionBox[\\(\[Rho] \\((E)\\)\\), \
SuperscriptBox[\\(2\\), \\([N/2]\\)]]\\)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, AxesStyle -> GrayLevel[0], DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1024, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.6, 1.6}, {0., 1.1388820895779208`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Medium}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"N = 10\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.471412, 0.108766, 0.527016]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.471412, 0.108766, 0.527016]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.471412, 0.108766, 0.527016], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3142746666666667, 0.07251066666666667, 
                    0.35134400000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.471412`", ",", "0.108766`", ",", "0.527016`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.471412, 0.108766, 0.527016]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.471412, 0.108766, 0.527016], Editable -> False, 
                  Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 11\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3431304, 0.11581720000000001`, 0.6369784000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.3431304, 0.11581720000000001`, 
                    0.6369784000000001]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2287536, 0.07721146666666667, 0.4246522666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3431304`", ",", "0.11581720000000001`", ",", 
                    "0.6369784000000001`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.3431304, 0.11581720000000001`, 0.6369784000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                  Editable -> False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 12\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2748608, 0.1822636, 0.7272788]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2748608, 0.1822636, 0.7272788]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2748608, 0.1822636, 0.7272788], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.18324053333333334`, 0.12150906666666667`, 
                    0.48485253333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2748608`", ",", "0.1822636`", ",", "0.7272788`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2748608, 0.1822636, 0.7272788]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.2748608, 0.1822636, 0.7272788], Editable -> 
                  False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 13\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2480688, 0.2797284, 0.7879248]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2480688, 0.2797284, 0.7879248]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2480688, 0.2797284, 0.7879248], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.1653792, 0.1864856, 0.5252832000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2480688`", ",", "0.2797284`", ",", "0.7879248`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2480688, 0.2797284, 0.7879248]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.2480688, 0.2797284, 0.7879248], Editable -> 
                  False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 14\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2484884, 0.3863264, 0.813373]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2484884, 0.3863264, 0.813373]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2484884, 0.3863264, 0.813373], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.16565893333333334`, 0.25755093333333334`, 
                    0.5422486666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2484884`", ",", "0.3863264`", ",", "0.813373`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2484884, 0.3863264, 0.813373]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.2484884, 0.3863264, 0.813373], Editable -> False,
                   Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 15\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.266122, 0.486664, 0.802529]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.266122, 0.486664, 0.802529]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.266122, 0.486664, 0.802529], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.1774146666666667, 0.32444266666666666`, 
                    0.5350193333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.266122`", ",", "0.486664`", ",", "0.802529`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.266122, 0.486664, 0.802529]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.266122, 0.486664, 0.802529], Editable -> False, 
                  Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 16\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001]], {}}},
                     AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.19863973333333335`, 0.3771952, 0.5014924000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2979596`", ",", "0.5657928`", ",", 
                    "0.7522386000000001`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
                  Editable -> False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 17\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3386556, 0.6276854, 0.6832816]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3386556, 0.6276854, 0.6832816]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3386556, 0.6276854, 0.6832816], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2257704, 0.41845693333333334`, 0.4555210666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.3386556`", ",", "0.6276854`", ",", "0.6832816`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3386556, 0.6276854, 0.6832816]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.3386556, 0.6276854, 0.6832816], Editable -> 
                  False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 18\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38822480000000004`, 0.674195, 0.6035436000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.38822480000000004`, 0.674195, 
                    0.6035436000000001]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.38822480000000004`, 0.674195, 0.6035436000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2588165333333334, 0.4494633333333333, 
                    0.40236240000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.38822480000000004`", ",", "0.674195`", ",", 
                    "0.6035436000000001`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.38822480000000004`, 0.674195, 0.6035436000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.38822480000000004`, 0.674195, 0.6035436000000001], 
                  Editable -> False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 19\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.446557, 0.7074632, 0.5203932]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.446557, 0.7074632, 0.5203932]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.446557, 0.7074632, 0.5203932], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2977046666666667, 0.4716421333333333, 
                    0.34692880000000004`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.446557`", ",", "0.7074632`", ",", "0.5203932`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.446557, 0.7074632, 0.5203932]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.446557, 0.7074632, 0.5203932], Editable -> False,
                   Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 20\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.513417, 0.72992, 0.440682]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.513417, 0.72992, 0.440682]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.513417, 0.72992, 0.440682], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.342278, 0.48661333333333334`, 0.29378800000000005`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.513417`", ",", "0.72992`", ",", "0.440682`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.513417, 0.72992, 0.440682]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.513417, 0.72992, 0.440682], Editable -> False, 
                  Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 21\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5888042, 0.7409584, 0.37500680000000003`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.5888042, 0.7409584, 0.37500680000000003`]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5888042, 0.7409584, 0.37500680000000003`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.39253613333333337`, 0.4939722666666667, 
                    0.2500045333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.5888042`", ",", "0.7409584`", ",", 
                    "0.37500680000000003`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5888042, 0.7409584, 0.37500680000000003`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.5888042, 0.7409584, 0.37500680000000003`], 
                  Editable -> False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 22\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6660832000000001, 0.7430418, 0.32293540000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.6660832000000001, 0.7430418, 
                    0.32293540000000004`]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6660832000000001, 0.7430418, 0.32293540000000004`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.44405546666666673`, 0.4953612, 0.2152902666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.6660832000000001`", ",", "0.7430418`", ",", 
                    "0.32293540000000004`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6660832000000001, 0.7430418, 0.32293540000000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[
                  0.6660832000000001, 0.7430418, 0.32293540000000004`], 
                  Editable -> False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 23\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7408424, 0.7340177999999999, 0.2838318]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7408424, 0.7340177999999999, 0.2838318]], {}}},
                     AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7408424, 0.7340177999999999, 0.2838318], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.49389493333333334`, 0.4893452, 0.18922120000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7408424`", ",", "0.7340177999999999`", ",", 
                    "0.2838318`"}], "]"}], NumberMarks -> False]], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7408424, 0.7340177999999999, 0.2838318]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.7408424, 0.7340177999999999, 0.2838318], 
                  Editable -> False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 24\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8083416, 0.7110806, 0.255976]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8083416, 0.7110806, 0.255976]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8083416, 0.7110806, 0.255976], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5388944, 0.47405373333333334`, 0.17065066666666667`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8083416`", ",", "0.7110806`", ",", "0.255976`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8083416, 0.7110806, 0.255976]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.8083416, 0.7110806, 0.255976], Editable -> False,
                   Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 25\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.863512, 0.670771, 0.236564]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.863512, 0.670771, 0.236564]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.863512, 0.670771, 0.236564], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5756746666666667, 0.44718066666666667`, 
                    0.15770933333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.863512`", ",", "0.670771`", ",", "0.236564`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.863512, 0.670771, 0.236564]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.863512, 0.670771, 0.236564], Editable -> False, 
                  Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 26\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8935136, 0.6004149999999999, 0.2205464]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8935136, 0.6004149999999999, 0.2205464]], {}}},
                     AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5956757333333333, 0.4002766666666666, 
                    0.14703093333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8935136`", ",", "0.6004149999999999`", ",", 
                    "0.2205464`"}], "]"}], NumberMarks -> False]], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8935136, 0.6004149999999999, 0.2205464]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                  Editable -> False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 27\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9021174, 0.5055088, 0.2018252]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.9021174, 0.5055088, 0.2018252]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9021174, 0.5055088, 0.2018252], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6014116, 0.33700586666666665`, 0.13455013333333335`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.9021174`", ",", "0.5055088`", ",", "0.2018252`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9021174, 0.5055088, 0.2018252]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.9021174, 0.5055088, 0.2018252], Editable -> 
                  False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 28\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8929546, 0.3896616, 0.1794008]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8929546, 0.3896616, 0.1794008]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8929546, 0.3896616, 0.1794008], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5953030666666668, 0.2597744, 0.11960053333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8929546`", ",", "0.3896616`", ",", "0.1794008`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8929546, 0.3896616, 0.1794008]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.8929546, 0.3896616, 0.1794008], Editable -> 
                  False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 29\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8739574, 0.2607876, 0.15481040000000001`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.8739574, 0.2607876, 0.15481040000000001`]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8739574, 0.2607876, 0.15481040000000001`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5826382666666667, 0.17385840000000002`, 
                    0.10320693333333335`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.8739574`", ",", "0.2607876`", ",", 
                    "0.15481040000000001`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8739574, 0.2607876, 0.15481040000000001`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.8739574, 0.2607876, 0.15481040000000001`], 
                  Editable -> False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 30\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.857359, 0.131106, 0.132128], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5715726666666667, 0.08740400000000001, 
                    0.08808533333333333], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.857359`", ",", "0.131106`", ",", "0.132128`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.857359, 0.131106, 0.132128]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.857359, 0.131106, 0.132128], Editable -> False, 
                  Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.774353532854333*^9, 3.774353603258847*^9}, {
   3.774353647758851*^9, 3.774353690957365*^9}, {3.7743537253833666`*^9, 
   3.7743537549133644`*^9}, {3.7743537854353924`*^9, 3.774353794726393*^9}, {
   3.7743538410603943`*^9, 3.7743539008573933`*^9}, {3.774353951260394*^9, 
   3.774353955011394*^9}, {3.774353996381412*^9, 3.77435403283741*^9}, 
   3.7743540705204105`*^9, 3.7743541068784113`*^9, 3.774354140119412*^9, 
   3.774354685637022*^9, 3.7743548599355373`*^9, 3.7743585299895782`*^9, {
   3.774610407746639*^9, 3.7746104561460705`*^9}, {3.77461049561607*^9, 
   3.77461050681407*^9}, 3.7747616717259493`*^9, 3.774776789027866*^9, 
   3.774937427674531*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"51ad28cc-ca4e-46ed-b766-d4e9f51c28e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<rho.pdf\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.7743548942005377`*^9, 3.774354931845543*^9}, 
   3.774356382978058*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"10150fe5-2273-4faa-a290-094ebf63eac4"],

Cell[BoxData["\<\"rho.pdf\"\>"], "Output",
 CellChangeTimes->{3.7743549337075386`*^9, 3.7743585310385747`*^9, 
  3.774610512063071*^9, 3.7747767904508657`*^9, 3.774937433809534*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"5476aa9f-afae-4842-b478-2f74c453a305"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Entropy", "Subsection",
 CellChangeTimes->{{3.774610774155428*^9, 
  3.7746107748134212`*^9}},ExpressionUUID->"cca36425-428f-48bb-beea-\
1c1791f918a8"],

Cell["\<\
We can estimate the large-N high-temperature entropy by extrapolating the \
density of states around the center of the spectrum.
Similarly, we can estimate the large-N low-temperature entropy by \
extrapolating the density of states around the groundstate.\
\>", "Text",
 CellChangeTimes->{{3.7770158099233108`*^9, 
  3.7770158902423544`*^9}},ExpressionUUID->"0fbb4873-6c4a-4eb9-97b0-\
26311bb9e54a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SpectrumCentralBand", "[", "n_Integer", "]"}], "[", "w_Real", 
    "]"}], ":=", 
   RowBox[{"N", "@", 
    RowBox[{"MeanAround", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{"evs", ",", 
         RowBox[{"E_Real", "/;", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["w", "2"]}], "<", "E", "<", 
           FractionBox["w", "2"]}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"evs", ",", 
         RowBox[{"SpectrumData", "@", "n"}]}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SpectrumGSBand", "[", "n_Integer", "]"}], "[", "w_Real", "]"}], ":=", 
   RowBox[{"N", "@", 
    RowBox[{"MeanAround", "@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Count", "[", 
        RowBox[{"evs", ",", 
         RowBox[{"E_Real", "/;", 
          RowBox[{
           RowBox[{"E", "-", 
            RowBox[{"Min", "@", "evs"}]}], "<", "w"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"evs", ",", 
         RowBox[{"SpectrumData", "@", "n"}]}], "}"}]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.774610785169423*^9, 3.774610833949358*^9}, {
  3.774610927375231*^9, 3.7746109783547597`*^9}, {3.774611101907039*^9, 
  3.7746111179668016`*^9}, {3.774611150064807*^9, 3.77461115145081*^9}, {
  3.77461133745839*^9, 3.774611339886321*^9}, {3.7746114900522804`*^9, 
  3.774611500250268*^9}, {3.7746116741423054`*^9, 3.774611709965845*^9}, {
  3.774611810043226*^9, 3.774611831436762*^9}, {3.7746119279654703`*^9, 
  3.7746120124885907`*^9}, {3.7746735310842843`*^9, 3.7746735363212795`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"4c59c223-3398-44dc-b9b6-51349f05be0f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBand", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Log", "@", 
       RowBox[{
        RowBox[{"SpectrumCentralBand", "[", "n", "]"}], "[", ".3", "]"}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10", ",", "30", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7746744826171045`*^9, 3.7746744853197126`*^9}, {
  3.77477690094644*^9, 3.774776901032442*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"2cc34cfa-93ac-4f6d-8439-356cf37f04e8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"2.3844","0.0011"},
       "Around"],
      Around[2.3844328112803437`, 0.0010694704352526177`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"2.8812","0.0016"},
       "Around"],
      Around[2.8812427584947633`, 0.0015636180478993786`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     InterpretationBox[
      TemplateBox[{"3.4790","0.0008"},
       "Around"],
      Around[3.4790140558682787`, 0.000835768170004784]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     InterpretationBox[
      TemplateBox[{"4.0784","0.0009"},
       "Around"],
      Around[4.078414310405218, 0.0008623127172510414]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", 
     InterpretationBox[
      TemplateBox[{"4.7021","0.0006"},
       "Around"],
      Around[4.702112555772623, 0.0006287181339084429]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", 
     InterpretationBox[
      TemplateBox[{"5.3387","0.0007"},
       "Around"],
      Around[5.338701765337245, 0.0007339625601560108]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", 
     InterpretationBox[
      TemplateBox[{"5.9866","0.0006"},
       "Around"],
      Around[5.9866482799911465`, 0.0005761869908281975]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", 
     InterpretationBox[
      TemplateBox[{"6.6402","0.0007"},
       "Around"],
      Around[6.640202577825522, 0.0006706542149250904]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", 
     InterpretationBox[
      TemplateBox[{"7.2974","0.0007"},
       "Around"],
      Around[7.297429701183978, 0.0006564757209373313]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", 
     InterpretationBox[
      TemplateBox[{"7.9584","0.0008"},
       "Around"],
      Around[7.958445776335948, 0.0008451242749239481]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", 
     InterpretationBox[
      TemplateBox[{"8.6207","0.0010"},
       "Around"],
      Around[8.62067444236176, 0.0009915328144961201]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.774673461667778*^9, 3.774673542187279*^9, 
  3.774674487046711*^9, 3.7747768464248657`*^9, 3.7747769048904715`*^9, 
  3.774937494768607*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"b3acbdac-a33a-4785-a1e5-9f95ec2eed35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CentralBandFit", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"CentralBand", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"-", "3"}], ";;"}], "\[RightDoubleBracket]"}], "/.", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"x_", ",", "_"}], "]"}], "\[RuleDelayed]", "x"}]}], ",", "n", 
    ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7746736668128433`*^9, 3.7746736689408207`*^9}, {
  3.7746743313039436`*^9, 3.774674336489256*^9}, {3.7746744633048735`*^9, 
  3.774674489801716*^9}, {3.7746746674480753`*^9, 3.7746746702472935`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"d1b6c9a6-aa8d-4796-89b5-b772cf56ab57"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "1.3038632149507925`"}], "+", 
       RowBox[{"0.33081118529445314`", " ", "n"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-1.3038632149507925`, 
     0.33081118529445314`}, {{$CellContext`n}, {1, $CellContext`n}}, {0, 
     0}}, {{1., 1., 
    1.}}, {{26, 7.297429701183978}, {28, 7.958445776335948}, {
     30, 8.62067444236176}}, {{1., 26.}, {1., 28.}, {1., 30.}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`n}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7746743368302546`*^9, {3.774674475378109*^9, 3.7746744902987156`*^9}, 
   3.774674672620294*^9, 3.7746748053883724`*^9, 3.7747768467008657`*^9, 
   3.7747769105964975`*^9, 3.7749374950116396`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"31c3d8ae-5b77-411a-bf92-b830922ad8ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GSBand", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Log", "@", 
       RowBox[{
        RowBox[{"SpectrumGSBand", "[", "n", "]"}], "[", ".3", "]"}]}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "10", ",", "30", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7746744826171045`*^9, 3.7746744853197126`*^9}, {
  3.774674784583852*^9, 3.77467478971985*^9}, {3.7747769067714434`*^9, 
  3.7747769068154435`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"f0ff19ed-73e3-4090-89e3-6290c047e8e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", 
     InterpretationBox[
      TemplateBox[{"2.1652","0.0017"},
       "Around"],
      Around[2.1652098266077444`, 0.0016621301684353394`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", 
     InterpretationBox[
      TemplateBox[{"2.7297","0.0019"},
       "Around"],
      Around[2.7296575204485567`, 0.0018692105186137668`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", 
     InterpretationBox[
      TemplateBox[{"3.1429","0.0018"},
       "Around"],
      Around[3.1429181864051943`, 0.0018467810685924078`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", 
     InterpretationBox[
      TemplateBox[{"3.6001","0.0025"},
       "Around"],
      Around[3.600144291122172, 0.002473493811044017]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", 
     InterpretationBox[
      TemplateBox[{"4.0586","0.0027"},
       "Around"],
      Around[4.058589191993028, 0.0027140472702632847`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", 
     InterpretationBox[
      TemplateBox[{"4.5742","0.0033"},
       "Around"],
      Around[4.574227614279036, 0.0032754763930806646`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", 
     InterpretationBox[
      TemplateBox[{"5.0190","0.0034"},
       "Around"],
      Around[5.018985748469548, 0.0034043858013312394`]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", 
     InterpretationBox[
      TemplateBox[{"5.499","0.005"},
       "Around"],
      Around[5.499470899970631, 0.004934392037943216]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", 
     InterpretationBox[
      TemplateBox[{"5.984","0.006"},
       "Around"],
      Around[5.984408461383773, 0.006243737773437803]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"28", ",", 
     InterpretationBox[
      TemplateBox[{"6.489","0.006"},
       "Around"],
      Around[6.488634860050971, 0.006171925381398078]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", 
     InterpretationBox[
      TemplateBox[{"6.951","0.008"},
       "Around"],
      Around[6.950814768442584, 0.008050699737318284]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.774673461667778*^9, 3.774673542187279*^9, 
  3.774674487046711*^9, 3.774674792851852*^9, 3.774776849332862*^9, 
  3.7747769104665003`*^9, 3.7749375002696075`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"fb7d833d-b181-46b8-ac3d-2bccdbfc26f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GSBandFit", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"GSBand", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"-", "3"}], ";;"}], "\[RightDoubleBracket]"}], "/.", 
     RowBox[{
      RowBox[{"Around", "[", 
       RowBox[{"x_", ",", "_"}], "]"}], "\[RuleDelayed]", "x"}]}], ",", "n", 
    ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7746736668128433`*^9, 3.7746736689408207`*^9}, {
  3.7746743313039436`*^9, 3.774674336489256*^9}, {3.7746744633048735`*^9, 
  3.774674489801716*^9}, {3.7746746674480753`*^9, 3.7746746702472935`*^9}, {
  3.7746747952888494`*^9, 3.7746748022948503`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"8137db7f-34be-4b2a-9021-2c0267b89301"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "0.2902247861191919`"}], "+", 
       RowBox[{"0.24160157676470123`", " ", "n"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-0.2902247861191919, 
     0.24160157676470123`}, {{$CellContext`n}, {1, $CellContext`n}}, {0, 
     0}}, {{1., 1., 
    1.}}, {{26, 5.984408461383773}, {28, 6.488634860050971}, {
     30, 6.950814768442584}}, {{1., 26.}, {1., 28.}, {1., 30.}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`n}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.7746743368302546`*^9, {3.774674475378109*^9, 3.7746744902987156`*^9}, 
   3.774674672620294*^9, {3.7746747961088533`*^9, 3.7746748025913725`*^9}, 
   3.774776849616867*^9, 3.774776910801502*^9, 3.774937500396609*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"7d02d83d-39c5-4dc9-8551-e96136a9e8d7"]
}, Open  ]],

Cell["\<\
The plot below has its error bars hidden by the point markers.\
\>", "Text",
 CellChangeTimes->{{3.7770159476983566`*^9, 
  3.7770159751063547`*^9}},ExpressionUUID->"cd8a0098-1392-44bb-86fb-\
c826a0aebc97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"CentralBand", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"PointLegend", "[", 
         RowBox[{
          RowBox[{"{", "Red", "}"}], ",", 
          RowBox[{"{", "\"\<E~0\>\"", "}"}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"CentralBandFit", "[", "n", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "10", ",", "30"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"{", "Red", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "n"}], "}"}], ".", 
            RowBox[{"Around", "@@@", 
             RowBox[{"Transpose", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                "CentralBandFit", "[", "\"\<BestFitParameters\>\"", "]"}], 
                ",", 
                RowBox[{
                "CentralBandFit", "[", "\"\<ParameterErrors\>\"", "]"}]}], 
               "}"}]}]}]}], "}"}]}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"GSBand", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"{", "Blue", "}"}], ",", 
          RowBox[{
          "{", "\"\<E~\!\(\*SubscriptBox[\(E\), \(0\)]\)\>\"", "}"}]}], 
         "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"GSBandFit", "[", "n", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "10", ",", "30"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"{", "Blue", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "n"}], "}"}], ".", 
            RowBox[{"Around", "@@@", 
             RowBox[{"Transpose", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"GSBandFit", "[", "\"\<BestFitParameters\>\"", "]"}], 
                ",", 
                RowBox[{"GSBandFit", "[", "\"\<ParameterErrors\>\"", "]"}]}], 
               "}"}]}]}]}], "}"}]}], "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "1024"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<N\>\"", ",", "\"\<log[\[Rho](E)\[CapitalDelta]E]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", "Medium"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<\[CapitalDelta]E = 0.3\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7746735454202814`*^9, 3.774673547370886*^9}, {
  3.774674492681714*^9, 3.77467454052657*^9}, {3.7746746311136827`*^9, 
  3.7746747298971453`*^9}, {3.7746748102324033`*^9, 3.774675120343547*^9}, {
  3.774776920802848*^9, 3.7747769231558466`*^9}, {3.7747771715696335`*^9, 
  3.774777383361059*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"e144a76a-8cbc-4ea2-a2b4-39b794b6f4c7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{10., 2.383363340845091}, {10., 2.3844328112803437`}}], 
          
          LineBox[{{10., 2.3844328112803437`}, {10., 
           2.3855022817155964`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{12., 2.879679140446864}, {12., 2.8812427584947633`}}], 
          LineBox[{{12., 2.8812427584947633`}, {12., 2.882806376542663}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{14., 3.478178287698274}, {14., 3.4790140558682787`}}], 
          
          LineBox[{{14., 3.4790140558682787`}, {14., 
           3.4798498240382836`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{16., 4.0775519976879675`}, {16., 4.078414310405218}}], 
          LineBox[{{16., 4.078414310405218}, {16., 4.079276623122469}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{18., 4.7014838376387145`}, {18., 4.702112555772623}}], 
          LineBox[{{18., 4.702112555772623}, {18., 4.702741273906532}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{20., 5.337967802777088}, {20., 5.338701765337245}}], 
          LineBox[{{20., 5.338701765337245}, {20., 5.339435727897401}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{22., 5.986072093000319}, {22., 5.9866482799911465`}}], 
          LineBox[{{22., 5.9866482799911465`}, {22., 5.987224466981974}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{24., 6.639531923610597}, {24., 6.640202577825522}}], 
          LineBox[{{24., 6.640202577825522}, {24., 6.640873232040447}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{26., 7.29677322546304}, {26., 7.297429701183978}}], 
          LineBox[{{26., 7.297429701183978}, {26., 7.298086176904915}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{28., 7.957600652061024}, {28., 7.958445776335948}}], 
          LineBox[{{28., 7.958445776335948}, {28., 7.959290900610871}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], {}, {
          LineBox[{{30., 8.619682909547265}, {30., 8.62067444236176}}], 
          LineBox[{{30., 8.62067444236176}, {30., 8.621665975176256}}]}}}, {{
        Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10., 2.3855022817155964`}, 
             Offset[{3, 0}, {10., 2.3855022817155964`}]}, {{10., 
             2.3855022817155964`}, 
             Offset[{-3, 0}, {10., 2.3855022817155964`}]}, {{10., 
             2.383363340845091}, 
             Offset[{3, 0}, {10., 2.383363340845091}]}, {{10., 
             2.383363340845091}, 
             Offset[{-3, 0}, {10., 2.383363340845091}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{12., 2.882806376542663}, 
             Offset[{3, 0}, {12., 2.882806376542663}]}, {{12., 
             2.882806376542663}, 
             Offset[{-3, 0}, {12., 2.882806376542663}]}, {{12., 
             2.879679140446864}, 
             Offset[{3, 0}, {12., 2.879679140446864}]}, {{12., 
             2.879679140446864}, 
             Offset[{-3, 0}, {12., 2.879679140446864}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{14., 3.4798498240382836`}, 
             Offset[{3, 0}, {14., 3.4798498240382836`}]}, {{14., 
             3.4798498240382836`}, 
             Offset[{-3, 0}, {14., 3.4798498240382836`}]}, {{14., 
             3.478178287698274}, 
             Offset[{3, 0}, {14., 3.478178287698274}]}, {{14., 
             3.478178287698274}, 
             Offset[{-3, 0}, {14., 3.478178287698274}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{16., 4.079276623122469}, 
             Offset[{3, 0}, {16., 4.079276623122469}]}, {{16., 
             4.079276623122469}, 
             Offset[{-3, 0}, {16., 4.079276623122469}]}, {{16., 
             4.0775519976879675`}, 
             Offset[{3, 0}, {16., 4.0775519976879675`}]}, {{16., 
             4.0775519976879675`}, 
             Offset[{-3, 0}, {16., 4.0775519976879675`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{18., 4.702741273906532}, 
             Offset[{3, 0}, {18., 4.702741273906532}]}, {{18., 
             4.702741273906532}, 
             Offset[{-3, 0}, {18., 4.702741273906532}]}, {{18., 
             4.7014838376387145`}, 
             Offset[{3, 0}, {18., 4.7014838376387145`}]}, {{18., 
             4.7014838376387145`}, 
             Offset[{-3, 0}, {18., 4.7014838376387145`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{20., 5.339435727897401}, 
             Offset[{3, 0}, {20., 5.339435727897401}]}, {{20., 
             5.339435727897401}, 
             Offset[{-3, 0}, {20., 5.339435727897401}]}, {{20., 
             5.337967802777088}, 
             Offset[{3, 0}, {20., 5.337967802777088}]}, {{20., 
             5.337967802777088}, 
             Offset[{-3, 0}, {20., 5.337967802777088}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{22., 5.987224466981974}, 
             Offset[{3, 0}, {22., 5.987224466981974}]}, {{22., 
             5.987224466981974}, 
             Offset[{-3, 0}, {22., 5.987224466981974}]}, {{22., 
             5.986072093000319}, 
             Offset[{3, 0}, {22., 5.986072093000319}]}, {{22., 
             5.986072093000319}, 
             Offset[{-3, 0}, {22., 5.986072093000319}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{24., 6.640873232040447}, 
             Offset[{3, 0}, {24., 6.640873232040447}]}, {{24., 
             6.640873232040447}, 
             Offset[{-3, 0}, {24., 6.640873232040447}]}, {{24., 
             6.639531923610597}, 
             Offset[{3, 0}, {24., 6.639531923610597}]}, {{24., 
             6.639531923610597}, 
             Offset[{-3, 0}, {24., 6.639531923610597}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{26., 7.298086176904915}, 
             Offset[{3, 0}, {26., 7.298086176904915}]}, {{26., 
             7.298086176904915}, 
             Offset[{-3, 0}, {26., 7.298086176904915}]}, {{26., 
             7.29677322546304}, 
             Offset[{3, 0}, {26., 7.29677322546304}]}, {{26., 
             7.29677322546304}, 
             Offset[{-3, 0}, {26., 7.29677322546304}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{28., 7.959290900610871}, 
             Offset[{3, 0}, {28., 7.959290900610871}]}, {{28., 
             7.959290900610871}, 
             Offset[{-3, 0}, {28., 7.959290900610871}]}, {{28., 
             7.957600652061024}, 
             Offset[{3, 0}, {28., 7.957600652061024}]}, {{28., 
             7.957600652061024}, 
             Offset[{-3, 0}, {28., 7.957600652061024}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[1, 0, 0]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{30., 8.621665975176256}, 
             Offset[{3, 0}, {30., 8.621665975176256}]}, {{30., 
             8.621665975176256}, 
             Offset[{-3, 0}, {30., 8.621665975176256}]}, {{30., 
             8.619682909547265}, 
             Offset[{3, 0}, {30., 8.619682909547265}]}, {{30., 
             8.619682909547265}, 
             Offset[{-3, 0}, {30., 8.619682909547265}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}}}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         PointBox[{{10., 2.3844328112803437`}, {12., 2.8812427584947633`}, {
          14., 3.4790140558682787`}, {16., 4.078414310405218}, {18., 
          4.702112555772623}, {20., 5.338701765337245}, {22., 
          5.9866482799911465`}, {24., 6.640202577825522}, {26., 
          7.297429701183978}, {28., 7.958445776335948}, {30., 
          8.62067444236176}}]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVxXk4lHkAB/A3KbSjHENu71sj4zYHwvz47s62j014yvZoHe3WYnTQgbbH
apusO0pIVukg0y6FjFqRavAg0pYoRUWO7RCPq1xld//4PB9m+55NIUoURXn9
5/9/06tQpygOnnj/mS1XpWAQ/2YZZzEHGJdGdbMoVIzSqh5LOSg+ueW7xZoU
ehuPK2WwOIjtUWH76lNwiw7/aKrPwaqdoVnjFhSmH3L73Pkc7EpYncnzpLD7
6LnKw8EcfKrJP16WTmHz57SAhWYOVltkppZoLcJcXlXbUIEZjlkGXVUSKOG9
uUtWUMQadB4UEzcsRqko5MxjB3PUBCY18TyUIVbtu+u0nAuF5EpcfOgScBoq
1nO7uCi8PVJQs28pnjp2jlJyCxS5aU1uzFJBEO9CV3eKJdb5ZonPl6nCxqie
/c0mKygq7abbq9TwsNYhOtfKGkGk9Hlw1zIofD5zYz5Y44mWB7d74AtId+yl
t9ba4P0h931qwyxouwhElidtYaah/y5HbTnGZz1LErbawXlUvUWVvQK+N/zP
BRvZ43rM+PBuAw2wnQdSk5LscbaZFcX7QwNz5Xr0/nf2+HCz0ibMWhMb4qOb
Hvjx0NPQdvh+jSbqfQ7pfbzJAz8ySvnSl1q4eODKLycs+dB1SGPK2rUQvq2C
ssnh456inWhv00bg19vtMmb5GJmUpb0Z1Ma1OJe9EokABa7DkaPRbAhv1Pov
bROgjns7XTLPRp5cRyKzF6Ki947MVaqDnWo5CdVnhOBfFmxxX6GLH/0UXjmL
HECbCEXXsnVxh9LhDkU44GxhUZW/2UqoRhCO0zMHDE+sEwbKV+LAI40WHzdH
yN5GvvrbSQ/e2ay4nmJHjE9qWUQ26WGDl7zfXsMJl4vcC5K99MFrsZUkRjpB
yJw2mH2gD2lB+7zPSydsKJdYnf7BAFP7GVGfeC06BhURpQMG6Dibmz5UvhZv
bdPXj0UZ4mlddbJc1xkRJkNbZHOGaCy+WnQkxhl1XeGhfx02gvHIg476IWfI
ZKGs6eXGyLM4faXN0wWzBu8HirONceROeq7nDRf0FAxsTjczgY/h5qIWjivS
ppY1tspNII5oCtBMccXlkVthsWtNccFoO+felCsC5/oLA5tNsab+Uo53gAjE
rzXZz5xGpk2dZfstEQS6otu2O2iETSg/vGtJML51UJFfTiP46jidcpzgdUzn
83UTNCLifOfXnyCY8pJK90zS+Nm38gkri2ARY7X69ykaqVPRxzJyCAybpGHD
H2mUOc/Mncon8NK2nsicpzGrWHgsKyGoKIlT7V3C4EQ7K72hieDXHjtBjB6D
vMLwsMS7BKllzzoL9RlcjLov9mglyI1LONhmwOC6bsZs632Ccm53LW3MoMdf
O+xRJ0F/VKJHE8OA268vftVP8K368yC2FQN+ZYzJxUECv94kys2agWtC90zI
PwQ/yfmFEhsG3ub55W/eEhz6Pvl1tR2DyF20ydgYQVmRIHKbkEGs6MhMxQRB
zcEXOkcdGCSqv+qImiJo9kypqnRkkFtWeHR6mqBv7MUnFWcGBVJlSfUswUhD
ynmeC4OSjSFfxc4TzJ0SigNcGVSuajR2+0ygsuvlYLyIwa2JNTMLCwRst9Tk
UsLgX9qYGDI=
           "]]}, Annotation[#, "Charting`Private`Tag$4658#1"]& ]}}, {}}, {{{{
        Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{10., 2.163547696439309}, {10., 2.1652098266077444`}}], 
          
          LineBox[{{10., 2.1652098266077444`}, {10., 
           2.1668719567761796`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{12., 2.727788309929943}, {12., 2.7296575204485567`}}], 
          
          LineBox[{{12., 2.7296575204485567`}, {12., 
           2.7315267309671705`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{14., 3.141071405336602}, {14., 3.1429181864051943`}}], 
          
          LineBox[{{14., 3.1429181864051943`}, {14., 
           3.1447649674737868`}}]}}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{16., 3.5976707973111277`}, {16., 3.600144291122172}}], 
          LineBox[{{16., 3.600144291122172}, {16., 3.602617784933216}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{18., 4.055875144722765}, {18., 4.058589191993028}}], 
          LineBox[{{18., 4.058589191993028}, {18., 4.0613032392632915`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{20., 4.570952137885955}, {20., 4.574227614279036}}], 
          LineBox[{{20., 4.574227614279036}, {20., 4.577503090672117}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{22., 5.015581362668217}, {22., 5.018985748469548}}], 
          LineBox[{{22., 5.018985748469548}, {22., 5.022390134270879}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{24., 5.494536507932688}, {24., 5.499470899970631}}], 
          LineBox[{{24., 5.499470899970631}, {24., 5.504405292008574}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{26., 5.978164723610336}, {26., 5.984408461383773}}], 
          LineBox[{{26., 5.984408461383773}, {26., 5.990652199157211}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{28., 6.482462934669573}, {28., 6.488634860050971}}], 
          LineBox[{{28., 6.488634860050971}, {28., 6.4948067854323694`}}]}}, {
        Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], {}, {
          LineBox[{{30., 6.942764068705265}, {30., 6.950814768442584}}], 
          LineBox[{{30., 6.950814768442584}, {30., 6.958865468179902}}]}}}, {{
        Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{10., 2.1668719567761796`}, 
             Offset[{3, 0}, {10., 2.1668719567761796`}]}, {{10., 
             2.1668719567761796`}, 
             Offset[{-3, 0}, {10., 2.1668719567761796`}]}, {{10., 
             2.163547696439309}, 
             Offset[{3, 0}, {10., 2.163547696439309}]}, {{10., 
             2.163547696439309}, 
             Offset[{-3, 0}, {10., 2.163547696439309}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{12., 2.7315267309671705`}, 
             Offset[{3, 0}, {12., 2.7315267309671705`}]}, {{12., 
             2.7315267309671705`}, 
             Offset[{-3, 0}, {12., 2.7315267309671705`}]}, {{12., 
             2.727788309929943}, 
             Offset[{3, 0}, {12., 2.727788309929943}]}, {{12., 
             2.727788309929943}, 
             Offset[{-3, 0}, {12., 2.727788309929943}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{14., 3.1447649674737868`}, 
             Offset[{3, 0}, {14., 3.1447649674737868`}]}, {{14., 
             3.1447649674737868`}, 
             Offset[{-3, 0}, {14., 3.1447649674737868`}]}, {{14., 
             3.141071405336602}, 
             Offset[{3, 0}, {14., 3.141071405336602}]}, {{14., 
             3.141071405336602}, 
             Offset[{-3, 0}, {14., 3.141071405336602}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{16., 3.602617784933216}, 
             Offset[{3, 0}, {16., 3.602617784933216}]}, {{16., 
             3.602617784933216}, 
             Offset[{-3, 0}, {16., 3.602617784933216}]}, {{16., 
             3.5976707973111277`}, 
             Offset[{3, 0}, {16., 3.5976707973111277`}]}, {{16., 
             3.5976707973111277`}, 
             Offset[{-3, 0}, {16., 3.5976707973111277`}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{18., 4.0613032392632915`}, 
             Offset[{3, 0}, {18., 4.0613032392632915`}]}, {{18., 
             4.0613032392632915`}, 
             Offset[{-3, 0}, {18., 4.0613032392632915`}]}, {{18., 
             4.055875144722765}, 
             Offset[{3, 0}, {18., 4.055875144722765}]}, {{18., 
             4.055875144722765}, 
             Offset[{-3, 0}, {18., 4.055875144722765}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{20., 4.577503090672117}, 
             Offset[{3, 0}, {20., 4.577503090672117}]}, {{20., 
             4.577503090672117}, 
             Offset[{-3, 0}, {20., 4.577503090672117}]}, {{20., 
             4.570952137885955}, 
             Offset[{3, 0}, {20., 4.570952137885955}]}, {{20., 
             4.570952137885955}, 
             Offset[{-3, 0}, {20., 4.570952137885955}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{22., 5.022390134270879}, 
             Offset[{3, 0}, {22., 5.022390134270879}]}, {{22., 
             5.022390134270879}, 
             Offset[{-3, 0}, {22., 5.022390134270879}]}, {{22., 
             5.015581362668217}, 
             Offset[{3, 0}, {22., 5.015581362668217}]}, {{22., 
             5.015581362668217}, 
             Offset[{-3, 0}, {22., 5.015581362668217}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{24., 5.504405292008574}, 
             Offset[{3, 0}, {24., 5.504405292008574}]}, {{24., 
             5.504405292008574}, 
             Offset[{-3, 0}, {24., 5.504405292008574}]}, {{24., 
             5.494536507932688}, 
             Offset[{3, 0}, {24., 5.494536507932688}]}, {{24., 
             5.494536507932688}, 
             Offset[{-3, 0}, {24., 5.494536507932688}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{26., 5.990652199157211}, 
             Offset[{3, 0}, {26., 5.990652199157211}]}, {{26., 
             5.990652199157211}, 
             Offset[{-3, 0}, {26., 5.990652199157211}]}, {{26., 
             5.978164723610336}, 
             Offset[{3, 0}, {26., 5.978164723610336}]}, {{26., 
             5.978164723610336}, 
             Offset[{-3, 0}, {26., 5.978164723610336}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{28., 6.4948067854323694`}, 
             Offset[{3, 0}, {28., 6.4948067854323694`}]}, {{28., 
             6.4948067854323694`}, 
             Offset[{-3, 0}, {28., 6.4948067854323694`}]}, {{28., 
             6.482462934669573}, 
             Offset[{3, 0}, {28., 6.482462934669573}]}, {{28., 
             6.482462934669573}, 
             Offset[{-3, 0}, {28., 6.482462934669573}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}, {Antialiasing -> False, 
         Directive[
          RGBColor[0, 0, 1]], 
         GeometricTransformationBox[
          LineBox[{}], {{{1., 0.}, {0., 1.}}, {0., 0.}}], 
         GeometricTransformationBox[
          LineBox[{{{30., 6.958865468179902}, 
             Offset[{3, 0}, {30., 6.958865468179902}]}, {{30., 
             6.958865468179902}, 
             Offset[{-3, 0}, {30., 6.958865468179902}]}, {{30., 
             6.942764068705265}, 
             Offset[{3, 0}, {30., 6.942764068705265}]}, {{30., 
             6.942764068705265}, 
             Offset[{-3, 0}, {30., 6.942764068705265}]}}], {{{1., 0.}, {0., 
           1.}}, {0., 0.}}]}}}, {{{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         PointBox[{{10., 2.1652098266077444`}, {12., 2.7296575204485567`}, {
          14., 3.1429181864051943`}, {16., 3.600144291122172}, {18., 
          4.058589191993028}, {20., 4.574227614279036}, {22., 
          5.018985748469548}, {24., 5.499470899970631}, {26., 
          5.984408461383773}, {28., 6.488634860050971}, {30., 
          6.950814768442584}}]}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]]}, {}}, {{
         Directive[
          PointSize[0.011000000000000001`], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]]}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwVxX040wkAB/BNO1GTd21+qlWLWU3ztmX243vp6dKUR57xxOUuEeVanZdc
SCtvpRZ6Wc6VlKToRV666MhLD1EqI6WU0pEKHXvmZTzc3R+f57M0eO+WUB0K
hbLpP/+fxCg1oFDYKL2urc2lUmGZ/Hkeew4blXn99wtpVJR+Y+lt0GWj9pzq
bslcKt43Zuhk0tloTSm6UW9AhVvMnvElTDYGtgdk9zOpmGjjfHB3YMPKsmqv
nQMVvxy/WH4ohI3k9AOLa4KpkM6cCJx9xIZfxET82wYqpnLutfZfXoH0MR9N
pFIHQzai09tk1lAuCxgxDZyDW+LQ853ONgjeoknqImjw0PvQLFzAwQPJYIdm
kAb2w9KNnFccqPuyri0q+Q5dghffKGW2uOd5WnQ+SRfb7C+9enOMC/KOzQ53
37ngWTWYrd+yEr9X7l4wbKaHtmrnmOyVq5B6XP83db8e6rxnOHFjqyCZ8Quh
FetDvmsfK6iah+fRwk8uEfNgKnIUc8/aoa88itPoOh+jWklxStBqtJ8NGtw2
Mx++lQEXQ6z48EGBzKuNDjOXv9PT0vjIGE5M+ynPAFMlDFbkVz4KyLnLE7cv
gFdyTNNzf3tI/L4mqB0M0eB9kDH+lz2aDRO3Ro8Z4sr+m/FZXAdEeAq0K0KN
sGd7KYWndICKPm7CbjXCj+uCV2dqHXCVZThkY2eMiiOifWFhjvieKbX2P2cM
p8rqAN1WR3gGj7JOTBojp8w87CrfCXxe1872rSbYra9MqTrvhPfdQ/PX15vg
Z/+6TUqqM6a6t0bWLDdFLcWc0y9zRk+dWhisMIWejGQLXzsjn/NyA0Njiv3t
Ri3ebgK09xgTHVIzbD5DP9JdJMDj+Div+zVm8NpU9pFvJMTqcJH7NZY57Fvs
wlKjhIjs9DhYKDeH/LJq2rtHiETbeEvVgDk0kUvFHzzWYOyJ/gGdjRboyM1W
9JesgUDaKAgqs0BXfdXRMgsX9PJeVzwwX4jGojsFh+NcIDsqlDvuX4hFw887
Gvpd0NBUf131biFybP+42SoRIcm/4EwsGDhcq8iWVIpAf1Lx7ociBrwJaUEL
2xXR9YbRXBMmPGRNgcbHXOGpX9diEsXEJatg9hONK/qc8uTW3UxYNxQqNweK
MVzSOe7uZolTvHquqkaMl7f8qiJyLRGuprU1c0kczaJ11+sSCLkzyjqWQaLg
of6DJeEEZEd8pzdmkRgQFB5U7SIQ61v+kn6ahO31deKUCALpmpiTmUoSNxWH
Kr/ICNx2mZw6d4FEmZ+mrCKGgLZutvNqMYm6gffXJEkEslR0xcMmEj30e6di
cwnk5O8JT20mwTok9eHmEbgS/dRjw2MSO0ZGDd9eInDXIlP7+CmJvhc8xdoC
At0BpuHtL0gM5eanGdwgwPnI9Oj9SGKan5GQX0nAoTxu8ZU+Em75q1z97hNw
TXkzGfqJhNy8ZVKvmsBmmwsln7+QoGlpsbJaAlERrMUjIyTmNcT96tJEIEF8
eLJUTcLLmcEffEQg1aC3I1pD4mRhxXBuC4Hs2/nHJyZIGJ/4J4L2lMBlOS2s
SkvCd0bB/fMZgWKf0LUJ0yTO7lv5eVcbgfJljYvcZkh09j4qtGonUKO2npyd
JcGQ7tz5rIPAv/dbHDo=
           "]]}, Annotation[#, "Charting`Private`Tag$5147#1"]& ]}}, {}}}, {
    ImageSize -> 1024, AxesLabel -> {
       FormBox["\"N\"", TraditionalForm], 
       FormBox["\"log[\[Rho](E)\[CapitalDelta]E]\"", TraditionalForm]}, 
     AxesStyle -> GrayLevel[0], TicksStyle -> Medium, PlotLabel -> 
     FormBox["\"\[CapitalDelta]E = 0.3\"", TraditionalForm], DisplayFunction -> 
     Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {9.583333333333336, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{9.583333333333336, 30.}, {0, 8.621665975176256}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"E~0\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           RowBox[{
             InterpretationBox[
              TemplateBox[{"-1.304", "0.005"}, "Around"], 
              Around[-1.3038632149507925`, 0.004908954997758137]], "+", 
             RowBox[{
               InterpretationBox[
                TemplateBox[{"0.33081", "0.00018"}, "Around"], 
                Around[0.33081118529445314`, 0.00017502241685727265`]], " ", 
               TagBox["n", HoldForm]}]}]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"E~\\!\\(\\*SubscriptBox[\\(E\\), \\(0\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
           RowBox[{
             InterpretationBox[
              TemplateBox[{"-0.29", "0.17"}, "Around"], 
              Around[-0.2902247861191919, 0.17021761669926824`]], "+", 
             RowBox[{
               InterpretationBox[
                TemplateBox[{"0.242", "0.006"}, "Around"], 
                Around[0.24160157676470123`, 0.006068888119772212]], " ", 
               TagBox["n", HoldForm]}]}]}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.77467510662243*^9, 3.7746751209205155`*^9}, 
   3.7747768541368666`*^9, {3.7747769142955017`*^9, 3.774776923593846*^9}, 
   3.774777179011632*^9, {3.774777270515713*^9, 3.7747773050207276`*^9}, {
   3.774777346726028*^9, 3.7747773523530827`*^9}, 3.7747773841520596`*^9, 
   3.7749375081766376`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"4f9d68c9-d047-43b4-a13e-6c16bd972335"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<entropy.pdf\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.7746751258795147`*^9, 3.77467514125447*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"032564bd-62a0-41ed-b008-95ec553acfaa"],

Cell[BoxData["\<\"entropy.pdf\"\>"], "Output",
 CellChangeTimes->{3.7746751441974745`*^9, 3.77477739240806*^9, 
  3.77493753366661*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"5e476fe0-5dd4-42dc-b25c-33cfceedd25b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Spectral form factor", "Subsection",
 CellChangeTimes->{{3.7747683880740337`*^9, 
  3.7747683913060627`*^9}},ExpressionUUID->"ce2bd9c3-6d0a-4681-8788-\
b0831a0e7016"],

Cell["\<\
To speed up the evaluation of spectral form factors, we pre-compile the \
partition functions for each realization of the Hamiltonians we have already \
diagonalized.\
\>", "Text",
 CellChangeTimes->{{3.7770208459073987`*^9, 
  3.77702089550743*^9}},ExpressionUUID->"0586759c-6a4c-4022-a2a0-\
b118447f4cd8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "CompiledZs"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CompiledZs", "[", "n_Integer", "]"}], ":=", 
   RowBox[{
    RowBox[{"CompiledZs", "[", "n", "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Compile", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\[Beta]", ",", "_Complex"}], "}"}], "}"}], ",", 
        RowBox[{"Evaluate", "@", 
         RowBox[{"Total", "[", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[Beta]"}], " ", "evs"}]], "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"evs", ",", 
        RowBox[{"SpectrumData", "@", "n"}]}], "}"}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7747790712755947`*^9, 3.774779104985874*^9}, 
   3.774779749863126*^9, {3.7749385256991916`*^9, 3.7749385290571833`*^9}, {
   3.7749385725637035`*^9, 3.774938604067651*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"ce485506-824a-47fc-9c8d-eb0a3c8883a8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "SFF"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SFF", "[", "n_Integer", "]"}], "[", 
   RowBox[{"\[Beta]_Real", ",", "t_Real"}], "]"}], ":=", 
  RowBox[{"Mean", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"Abs", "@", 
         RowBox[{"Z", "[", 
          RowBox[{"\[Beta]", "+", 
           RowBox[{"\[ImaginaryI]", " ", "t"}]}], "]"}]}], 
        RowBox[{"Z", "[", "\[Beta]", "]"}]], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"Z", ",", 
       RowBox[{"CompiledZs", "@", "n"}]}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.774938724148982*^9, 3.774938822835906*^9}, {
  3.774938929459425*^9, 3.774938948272031*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"18da82c8-7f76-42b5-b6ce-f194daaa207b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "@", 
  RowBox[{"{", 
   RowBox[{"n", ",", "t"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.774766989678548*^9, 3.7747669919825506`*^9}, {
  3.7747678991647596`*^9, 3.774767900925753*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"eb30990f-3b27-4f78-81cf-fc23f7803f70"],

Cell[BoxData[
 DynamicBox[ToBoxes[{$CellContext`n, $CellContext`t}, StandardForm],
  ImageSizeCache->{61., {3., 10.}}]], "Output",
 CellChangeTimes->{3.774766992210546*^9, 3.774767901115755*^9, 
  3.7747780756180587`*^9, 3.7747798867144337`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"98c51b0c-2fb8-4e34-acd3-166f6a62e134"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "SFFPlot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SFFPlot", "[", "n_Integer", "]"}], "[", 
    RowBox[{"\[Beta]_Real", ",", "mint_", ",", "maxt_", ",", "numt_Integer"}],
     "]"}], "[", "color_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SFFPlot", "[", "n", "]"}], "[", 
     RowBox[{"\[Beta]", ",", "mint", ",", "maxt", ",", "numt"}], "]"}], "[", 
    "color", "]"}], "=", "\[IndentingNewLine]", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{
          RowBox[{"SFF", "[", "n", "]"}], "[", 
          RowBox[{"\[Beta]", ",", "t"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"10.", "^", 
          RowBox[{"Range", "[", 
           RowBox[{"mint", ",", "maxt", ",", 
            FractionBox[
             RowBox[{"maxt", "-", "mint"}], 
             RowBox[{"numt", "-", "1"}]]}], "]"}]}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "1024"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<t\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(f\), \(\[Beta]\)]\)(t)\>\""}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"TicksStyle", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", "color", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<N = \>\"", "<>", 
          RowBox[{"ToString", "@", "n"}]}], "}"}]}], "]"}]}]}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7747667422578316`*^9, 3.774767057710128*^9}, {
  3.7747673041755*^9, 3.7747673050434704`*^9}, {3.774767341136593*^9, 
  3.7747677395194607`*^9}, {3.7747678165595746`*^9, 3.7747678228625793`*^9}, {
  3.774767957391814*^9, 3.7747679746368065`*^9}, {3.774779874361429*^9, 
  3.7747798788764653`*^9}, {3.7749389723708158`*^9, 3.7749389791858187`*^9}, {
  3.774940502800499*^9, 3.774940513964465*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"8d31ab02-e8c7-4cfb-acd4-fda66d2a4215"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Beta]", "=", "1."}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"SFFPlot", "[", "n", "]"}], "[", 
         RowBox[{"\[Beta]", ",", 
          RowBox[{"-", "1"}], ",", "7", ",", "1000"}], "]"}], "[", 
        RowBox[{"MyColor", "@", "n"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"{", 
          RowBox[{"16", ",", "23", ",", "30"}], "}"}]}], "}"}]}], "]"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"\"\<\[Beta] = \>\"", "<>", 
       RowBox[{"ToString", "@", "\[Beta]"}]}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.3"}], ",", 
        RowBox[{"-", "16.125"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.774767619469555*^9, 3.7747676511325755`*^9}, {
   3.774767833806576*^9, 3.774767953341815*^9}, {3.774768090478181*^9, 
   3.7747680905761795`*^9}, {3.774781533356715*^9, 3.774781535506663*^9}, {
   3.7747815803266983`*^9, 3.774781580386677*^9}, {3.774937672148038*^9, 
   3.774937672660037*^9}, {3.7749379404255877`*^9, 3.774937940854588*^9}, {
   3.774937995454564*^9, 3.774937997567566*^9}, {3.7749383277570086`*^9, 
   3.774938329411257*^9}, {3.774938375270608*^9, 3.774938375987118*^9}, {
   3.774939076786913*^9, 3.774939085698022*^9}, {3.774939296479994*^9, 
   3.774939314238966*^9}, {3.7749396066181183`*^9, 3.7749396348635945`*^9}, {
   3.774939936652783*^9, 3.7749399624672217`*^9}, {3.774940142145194*^9, 
   3.774940191410247*^9}, {3.774940363875181*^9, 3.7749404172453976`*^9}, {
   3.7749407144575243`*^9, 3.7749407831944866`*^9}, {3.774940914431453*^9, 
   3.7749410491823463`*^9}, {3.7749411351199083`*^9, 3.7749411351619077`*^9}, 
   3.774941179802682*^9, {3.7749412986397486`*^9, 3.7749414533010645`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"7b272d1b-1f60-4468-8902-45277776d6e1"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2979596, 0.5657928, 0.7522386000000001]], 
         LineBox[CompressedData["
1:eJwVmHc8le8bx8nOHucc49h7j6JIztXQFElLaNjJyighK7KSQkKUSmSUiLKf
O6SoiIxvRkS2kL397t9fvc7r8dzPtd6fz3Unae12wm4LHR3dCAMd3f//JZ0q
Li+4sgWZdA+b6kuYE8f5p05MGm5BD2eudAzyniOimxXGlCS2oEe+7yaec1gQ
dbHWwQ4r9OjPuxeT33gsCTrjVMGMVnrEHb8WUiVmReziaM/ve02PAktZSn7o
nCeuNXAfFI2kR43znrJu5heIgojDv8xt6BFnpwaL376LxMSBW96Ju+nR34yL
1SO9Fwk5pkqOHxR61G+/5eCOkEvEpZqF59wzdOicSIrMEyVrIjVYY5fRVzqk
n7qT3eKnNdFOc2qJyKRDh7zWerPu2hB8G88vfwyiQzs/nW2pPWJLGFX00G2x
oEMVNYoes5x2RLgvJclAmw4xhj+uu/6fHVG901Tdj5sOoWA6+6Qce2LpLynG
7ccm4VNy8e7jUAfCzSmyfCR8k2h9vY3Wbu9I/BlaG72kv0lwz/0xu2t6mTC3
cRfsmt4gfoxdeSJo6EQ09Q4cOPlig3A5Ps7asOcKsd/yjPc38w1Cqdsue+Wg
M1H+X8PzA1wbRIp/3BjTWRdC45RBC1G9Tphu6co84uFKvGguoNO9vk5MfLx3
RPmhGyFiLKteqLxOUAI0V2/buBP3GpKslPvWCLuQ+6Zq9FcJ5oMcdzIS1ojZ
wqvPqzOuEv41gWWih9cIZmti3d/Yg/hHmx1JXF8ltpociU/a8CAcKuwpPIWr
hPvf0OYTxZ5E985Ow0j7VSJMkevauIcXYVp8zGuLyCoxtZvjRcYOb+Kz5odn
fk0rxKeii3Q1DNeI3a+3N8/dWiHCv1USMR3XiEKll5suO1eIMtbMeuO31wmF
LBG14YllQoI4/+3EQx8iTTrW8uLTZSJFvtdq9NYNgj99S/TPU8vEM8+PnHY3
fIlI6rXSE1uXiUvKlndEfPyIjaTR4S9VS8STbWU1dkH+hBfJimzouUTEXGBd
ehJ3kxi9/31/lfwSIbK0OKyYH0Cc59rvuaN7kcid8p60bw8kWqPeP31zb5HI
9/nBdyE0iDjMovxd0XCRoCSnGh6TDibQrccbz5YXiPEgjnjtz8GENh2fKvX1
AtHJ9yXR1DOEyPEPs3hgvUAsMTMK9cjcIiSWlyK5KAuE70ygNLnnFpHo7VwS
/mWeeM9wh7I7NZRgn+kdoguaJ5wcS2oTrMOIIFczku/2ecKozTvIWuM2MT9W
t292ZI7g6EoxmGQKJ5wd9Dyc0+aIMqHOnJCBcOL3wKv0QdM5Ir9Ra59LfQRx
+qJk03nmOcIw0M5z430k8bU7Yb2jbJZQYL9eEJkfRewxZ1UxdZslBEuNHtm9
iSbet/mda5CeJbgcnUkTZXcIlRNTEfv+myFYrSacfJtiiGeN1u8r7swQ/KWP
Xa9O3iUEj7YPau+ZIdjuVjcKc9wjYj4dFsif/0d0EkZPH2beIxj2V+5VyPlH
UCbWjg0euE/4II2rT8//I/aZVdPp/71PTOpnPBHm/0c0pvkytyfHEballMb4
T9PE5q1Pv6eM4omf2tFrHP7TxG+6ooufmRMI48INpdsa04Sevebb9E8JRITV
n8KN+inCf6t3SEXsA8Lz9Bfuf1pTRGIWjc36QiJx3qTQeeDRJGHZQVHt1HlI
HDqUXN/GOEkcfhGc5E5OIrbvCZL77PKXoLjsbvfcSCLE9RxulbVPEOd6kly0
p5IJ9m3GfXm0CeKucc8m22gKMaesvfvJy3EiXm3Y/vDEI6JPhppyn3ec6Kyc
aTVeTiW+iDIs3vIdI05M5Mz78Dwm3pPHzK4NjBJyReE8SlpPiKfczW8cjUaJ
r7P7ybbq6cQd1hJOi+IRIjC8IOX8l3TiOv0Tp2NiI8Q1I477u1yeErYrYZ9o
4cOEkVIy13bSM+LYrLOM1vQQoeW198ytmmeE7oRZsIz5ELH86+Ssvc9zQnZQ
7xe5epAwNxOpE9ueQXD/ktzFpjxItG+3lf27kEEst7Mmrcb/IU4Kr/wjf3hB
DDZNzf1dGyDoA4ULBuIyie+f20377AaIezbzmWnOWUTFh8rXLY39RKjrnpn7
xi+JrLIM9o87+gnjh9MveXSziftvox3fp/8m/vHwLTir5BA38zw+ZrP9JvaU
TO5cV8glHF+YS6V69BFXVl1kRdTziEz94A3q+17Ct695UJr2iripZlJCH/mL
ML/9c7eP+WvihISox9C5HiLvyLl8/4B8Qp5vXPmLSjfhcUDju9GZN8QGQ+lg
/kYn4fnP64Po/Bvix/ztJwnffxKVH2QDR5MKiLzhk+Y3nv1H1JmqxIztLSSC
f0rxn/fqIMQ/qr2zmi0kznyZ/rr3QDtBfbRFOiTnLaFSWXVbXrCNcD0u4Zns
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
WA/P+Pb+YWBWg4b66r5z+P3PW3kJL241YFGIUNQIICHdR3uTBwXVQNVB8JI9
5j9X2cvztJQajJtOSy7h+5JoxYtjn5TVoGPTMacdx3vXqEN+p7Ya7KrZH8yK
7/ub3axbsg3UIH1WbY9KEfZnF71uoUNqMOtjInoV9+/3+pV3UaZq4GVdlXUI
7+9md9PurZ5Tg2CYfX/lGeZZrMnJ2VYN6CWv8P7E91vtfDrDHhc1oFa2aDVj
vcmiaYkbX1cDilr9yk28fwp+t1muClIDp1GRg4JYn6IuPvihHqUGmit81jGY
99Xpulfp8TjfSdnAAbyfOAcvhfOm4fcPrXlFY/56eJWsQzLVQCrnUtEOPL/G
zyz0Z/PVgKnqgN8RzD/SiiHblqqBALPnkR5cD82aqunWajUwUfF/boN5em42
3WD4VQ2UXwSwG+L5Evgj+eJdmxr8LGDLv4X1IMzLLFC+F9dPW8rUsgv7M2OY
edKIGoT4ris9w/Pr+ODdNrYZNTB3I9HeY3/7KTvC6buqBgovOC43/CahI++E
RsYY1cEtdw+TDZ7n8gNHqy241OFtKc+eJqyXqh3+qV8p6pDo9snZF7//2OH1
td2S6pBqLaDI//99e6n3+GsldXCXtvhs7I95juBVFt+uDuWokYkZP58V3Md0
b7c6sETUoEbcf9tsr166g+pQuzkXkIv37TbdzNKrx9VhWOJrzn68rx5o6Ijv
N1eHwy8dkzvw/ff9OTZXMxt1KJWSdmjH9yXFcb1Dtc7qwGjIgcYeYp79nKW0
r6mDAkdh0Cbe5zg4Hq+9CFSHiJtPXuXg826mNrWTI9UhTNGck4L3gUkV+oLw
OHVA27R22WL+LlZqRS89Uof84I9f9mC9az5ma3f5hTo0Bu95QMV+tffXA1rn
a3X4lbRAzsD3z7eun4SOlqiDg0mz/xiuj8zm0mz5B3U4ZjYxdt4G8xyr1Kjy
RR3mdKpszmI+WSUsX6a1qgM58CKLItarG29iQrh+qYOX79MY4RLMMxCWgcPq
UHl1y5Imvl9aNE/rTE+rw7PE7XyFeP6+XZLivbSiDmyll3Y8w/otvpw9P0Kv
AbGqcb082I/Ofqi2fsqsAQzs4seGUkjoXmRXkzm7BnDwn3jagvW93nROn49H
Ax57mG6Vx/ehLcKcOQ0CGhBk+PzGe1wvvX5Zyi0hDWBnazW8nUNCnjkGobvE
NGBN9lDRh2oS+h8IU5Sx
          "]]}}, {{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2979596, 0.5657928, 0.7522386000000001]]}}, {{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.2979596, 0.5657928, 0.7522386000000001]]}, {}}, {{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.2979596, 0.5657928, 
           0.7522386000000001]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.7408424, 0.7340177999999999, 0.2838318]], 
         LineBox[CompressedData["
1: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
2eX64e+ZqvDOJfeZNF6ffSeztxi/V4ULM9xZCjiPgze7+HLKVeGhZc2XTLwf
dxAUGpL/rArnPi3FGk3Koa9Pd1ZF16uCUcFh8+hZnGety0nM7fh9DDu58h/i
+oye+3r3qcII1XSAVo3rs+2vfX/HVCFANEMoNV8O3evlVDk4rwqZPrMDgng/
weStx1a9gd8PCbsl4fG6xHKuS4dLDbZ1eMUXn8J5fphc/FJYDZ7YrMRU4Hpj
R/3xUFJWDai8939P4/3Op/ebnhE0NSgYKxyrwuu/rqm2+bK6Gpw15d5lYojr
c7Mb+ex2NbggpBcTgNdXqZOPVjtADRhN+VrSF3B9nq9usbJUA10WpuUP+PeV
8MWccjs1kHkwzHcSj/d5CeU76s5qUNZFs3bE/UfXyyPuqafU4LaMyMI8rv/7
tt81FvRSg58aqr0xeH+PvlRIBV1VgwDeWx3P8fzUPjw1Mx2iBrsvrnTG4/1V
xjDp+/G7auAXzNk6U4bzfPXAq8Y4NVB7WyB/FhFQOHdY8K6namDze/kKryYR
LSQWHi14je83tmf4Cp7PHipDOvR8NSgdvcSw0sT1uVRK6HGZGjDp3dCb3oLz
bGU5ylGtBrx/FzzrwnF97rz+6coPNShx12Jjwd9D3fNt6nCrGiSoHv6UyoHz
vNbl79irBhX7x8uzuXGe7wnZ1Y6qAV36aTgZj38wwUTdYE4NDK4Gpsbgfmrm
7WXO7HU1cL0kqs4nT0QnjF/0ynGqQ/ris49Gp4jo149fZfeE1GE2r5P1mwWu
z65cjzek1SE6ueuV2QbO85Se10WqOnQ5r1e99SIg5aBzlj1q6lCXaV+8ifdL
T4RSaLa66iBtO1FU/ArnOf3HRhVDHWKrV3v78Xy+oc3UvsVCHRr7hwsW8fo8
WaX9PuOAOpiZuLGw4v7b9cCJe2JO6lBfZH80bA/ut/seeYSfVIfV8GuH/fF6
uOvy550LF9RB9CHhsQ/uhwtYl2Q9/NXB/G5RpNUnXJ8fKS+0BquDz+LD6L94
vXlMO/pzT5Q6hJ6ZP/IP90uchXfflDxSBwns4BMDvP+9ursyTCVVHdzy7l+u
x+v7aMuUS9IrddiUsuNs5yOio6fIenx56uCV9NiYTYuI6hYOiN4oVQdLH2Ej
DXx/49thExMf1eEL23ftv3i9yZX874vLd3U4Hh9oFJuM6/ProfT6X+rgezjw
1RLuJx7ukA6AHnXgibq0ZxteP1i/WtrnjaiDvKm+pDp+Hh/HAC3KrDpon2qg
MsvhfnvkLU/smjo82MHRpyZCRA7XuvtZOTRA6XzJ4eo6AqrhEcZ8BDXAgvpA
xg3vJ/SSTBIHpDSAQ7v152ncD2ep+ly2p2hAnWXxw/J5XJ/LX+z9oqoBqjnc
3zJ1cH22blXcoaMB47xihy/i/cPmby6WTGMNONNzK2gS90de5/V/S+/RgOQD
XFJWNALqXT/33x1bDXjjn3hFAO9H7e6nRK8ewfe37EwUySWgT8T6s57uGsAy
/+i2/Q8C0slh2v3nvAa8R+v/dhFxfWZskbe5ogGPio2lArfhPP88sVwZpAHD
coxiCVFcn4/FNWne0QDTgJtLpsO4Pk9/fpsWqwE/Bf5Gz+H+1TN46bZwigY0
2qik1Sjj+iys4hbyUgNOPMl6cX8fAdk8O2o4m6MBtVKpMf34+mjLPQn3Eg0I
TlJwWerBef5YOd38QQMu33gn8ASvtxl207W76/D5Q71zZbh/Eesnv/ivRQOa
F3TuXF/HefaxC1Ts1oBowpF162U5tMgW7pgwrAEBc3mGjXh/cTruv63cMxpw
2nSp+inez7TTh/mvrWrAFsucSx9wv2j5n/TwKJsmLPKax+3uIKAyM6sPRwU0
4WqHz8vZ3TjPrQHJdZKa0GsfMWngSECpHu/8jMiasMv5uJEj/n5CS93736lo
Qlbwbd0l/H7BEcKq8ts0gXX+QuhBvJ7NSu1ijzbSBCv4L9YVr8fumT7dTOaa
0HRxf8xiIq7Pei9LLu3XhCii7kcK/r5mta2xfY6acMBXskM3goCKjnBfsDuh
CbE72B5H4X5TeUx/zydPTZDUfqQfSiCiJ9c9KTp+mkAS+JwEOO98fKlrLwI1
YZw4NaytQkQ3kut/SURqQs8o69aGRwQ0qcacd/uhJrism1/MnMP1uWJL1FKS
JvANaniTcX4b9rqfPPNCE943WF/8rUtEJl1xjI53mlDrO0U4N01A7y98kbYq
1gSHrt7QVzhftM2l2bIqTbiSZW6x4UhEjx+o/FD7pglEb/tlXzweXCSn1ynN
mqA1PfXkwl6c59x7IQJdmhCk/y5RAO8/RwFzChzSBP8Az2cKq3LoaMO07vS0
Jth9/hZzDo/H9+MU4eMrmkA7NMyUhdcb+eXM+WFmLWg2LrovtB33w1Uf3NI5
tOCtj9SAQwsBRUd21jvyaoFnF0eQ+mPcH9vOGYoIaYFW9spWwM/PIsP/plYM
/36NLNuB9xP6fXTJUGkt2Kb86kEQBxFdfmMcZkDUAvdanUXbZwT0P405dOY=

          "]]}}, {{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.7408424, 0.7340177999999999, 0.2838318]]}}, {{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.7408424, 0.7340177999999999, 0.2838318]]}, {}}, {{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[
          0.7408424, 0.7340177999999999, 
           0.2838318]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.857359, 0.131106, 0.132128]], 
         LineBox[CompressedData["
1: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
6ygQHf6GzZoJBb7orcS+p+5bGC9txFw/dH7SQVXY6zu0vOboBkyncYlf6+kn
7Nq12ZMlB+qxI3dqd3+L+4zl/QnfYepWi4mLDpAeRFVjh+tJ5QICX7HUPmfL
79FfMNE8ZNCQ+RkbuvxGqzfxK1Z01yUzya4Ku166oVrlVQ127Pyc2pHJj1hZ
qLDucE0tJnsg7jY74QP2fqJuW8FcHYbM1vL9M0LY3pzExIC79VizTeLE5dJS
TIQTp3t5QwOmJ1v/XYa3EHMIeTCW+7MBu9EhgJ5a52IDD9q1baIbsXLzS3an
SVlY0M0LKHLzN8yraVT13ptHmPXs4pq8pW+YZeXbluDQW9iMaICAMNaEcfo0
3fJ6DnMeY3pJzeHN2PzKtbFhk3hOveBJ/0P7WrCa8f8y6iTSOAxfU/vF9a2Y
4OG+9ozLLzn1e1YkpuW+Y9m/jfg/nH3DqXJsa07hasN2E3g0dHSLOEsGTWt3
T7dhS/uqDe//fsup8tbf5DfRjjVZWT1f04A4Wnv3V/4314Exjr3UM2aXc0i7
lc/uE+rELoVIlZ2KqOBsve++PEbqwhoenrF9PlDFkW8p0bm4/SdGLW1r69pc
zRn81qlZYtqNBbSaHJN7+JVj+t1o9nFnN/Zp6tHk9oVaztF9k7X5IT2YhOBV
zuases4qf5CjrnYvZiSfH+rS1sDxa99Wuru7FztKGvwSKPCNo1Ky2HH8Xh8W
tU5JOla/iWMSMWST49SPFcH2va/cmjliTQIXArQGsG674Iefb7dwyg+Lfuab
GMBEXF/392OtnBnzgJRXn35heid6GFyj3znc9YdulT8fxA6ckzmlotrO8dMs
P5F0ewi7ft280MC6g3M6Mmtv1NXfWE584LL92R+cy3Xqf2YuDmMdTzK2nHza
yUnO6jExvDaC8ed2RIQ3dXHqF8IX3sT+wRS7+Yfsubs5tT9+nfr28i/GHtSI
PJDYzdn5G6VyfRvFNo9u0D6p08OZzjJVbuYex3bP2DcEVfZw6Nfit2iljmNe
S57+4a69nLZT/z6lbJ3ALvNeU0iY7uUkBpccjx6bwOKFH5Q8iezjvExHsbRH
k1imVIFrDqGfc8lHwiLHaQrDFOu4sOJ+juo5hSEPpWmsSWPoydedA5wHZ1Vk
7nRPY78p3JbtgwOcgPCH1r6vZ7AVtvLw4MVfHJPdmqmWYbOYtP766Bm5Qc7e
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
          "]]}}, {{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.857359, 0.131106, 0.132128]]}}, {{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.857359, 0.131106, 0.132128]]}, {}}, {{
         Directive[
          PointSize[0.004583333333333334], 
          AbsoluteThickness[1.6], 
          RGBColor[0.857359, 0.131106, 0.132128]]}, {}}}, {{}, {}}}}, {
    PlotLabel -> FormBox["\"\[Beta] = 1.\"", TraditionalForm], PlotRange -> 
     All, AxesOrigin -> {-2.3, -16.125}, DisplayFunction -> Identity, 
     GridLines -> {None, None}, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(\[Beta]\\)]\\)(t)\"", 
        TraditionalForm]}, 
     AxesOrigin -> {-3.0781085444538463`, -7.849079840504227}, AxesStyle -> 
     GrayLevel[0], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 1024, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Exp[#]& )[
            Part[#, 1]], 
           (Exp[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3.0781085444538463`, 
      16.11809565095832}, {-7.849079840504227, -0.0015335644781069473`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, TicksStyle -> Medium}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"N = 16\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001]], {}}},
                     AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.19863973333333335`, 0.3771952, 0.5014924000000001], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.2979596`", ",", "0.5657928`", ",", 
                    "0.7522386000000001`"}], "]"}], NumberMarks -> False]], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2979596, 0.5657928, 0.7522386000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.2979596, 0.5657928, 0.7522386000000001], 
                  Editable -> False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 23\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7408424, 0.7340177999999999, 0.2838318]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7408424, 0.7340177999999999, 0.2838318]], {}}},
                     AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7408424, 0.7340177999999999, 0.2838318], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.49389493333333334`, 0.4893452, 0.18922120000000003`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.7408424`", ",", "0.7340177999999999`", ",", 
                    "0.2838318`"}], "]"}], NumberMarks -> False]], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7408424, 0.7340177999999999, 0.2838318]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.7408424, 0.7340177999999999, 0.2838318], 
                  Editable -> False, Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N = 30\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.857359, 0.131106, 0.132128]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.857359, 0.131106, 0.132128], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5715726666666667, 0.08740400000000001, 
                    0.08808533333333333], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.857359`", ",", "0.131106`", ",", "0.132128`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.857359, 0.131106, 0.132128]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.857359, 0.131106, 0.132128], Editable -> False, 
                  Selectable -> False], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}]}], 
             "]"}]& ), Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7749376730500364`*^9, 3.7749377189823985`*^9, 3.7749379845375843`*^9, 
   3.7749380555375795`*^9, 3.7749383652112875`*^9, 3.7749384088021507`*^9, 
   3.77493903280189*^9, 3.774939121794963*^9, {3.7749395907620754`*^9, 
   3.7749396140081816`*^9}, 3.7749398113736258`*^9, 3.7749401245921903`*^9, 
   3.7749403247571845`*^9, 3.7749405283034935`*^9, {3.7749406964924927`*^9, 
   3.774940716981494*^9}, {3.774940748854495*^9, 3.774940757765913*^9}, {
   3.7749409062124834`*^9, 3.774941069637911*^9}, 3.774941168296877*^9, {
   3.774941282051715*^9, 3.7749414535300355`*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"7be01768-b735-4677-b2df-73afb544d2bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<SFF.pdf\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.774941060733334*^9, 3.7749410661218777`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"cb07713b-77aa-47b1-b722-1ff117b99c09"],

Cell[BoxData["\<\"SFF.pdf\"\>"], "Output",
 CellChangeTimes->{3.774941079565912*^9, 3.774941364866361*^9, 
  3.7749414574550333`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"bf1a87ce-9775-4970-be90-d1e373b817a0"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Symbolic implementation of Dirac gamma functions", "Section",
 CellChangeTimes->{{3.7741813876110373`*^9, 3.7741813886970263`*^9}, {
  3.774610516189077*^9, 3.7746105178180704`*^9}, {3.7770145778626895`*^9, 
  3.7770145859416847`*^9}},ExpressionUUID->"2e240afb-3284-4d62-b829-\
48a393367255"],

Cell[CellGroupData[{

Cell["Recursive definition of symbolic Gamma matrices", "Subsection",
 CellChangeTimes->{{3.774610236509547*^9, 3.774610245947509*^9}, {
  3.777014625270735*^9, 3.7770146327107325`*^9}, {3.777021100914398*^9, 
  3.7770211021464*^9}},ExpressionUUID->"5e6e7899-0bcc-4a4c-8365-b891b06fd81e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "id"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"id", "[", "n_Integer", "]"}], ":=", 
   RowBox[{
    RowBox[{"id", "[", "n", "]"}], "=", 
    RowBox[{"CircleTimes", "@@", 
     RowBox[{"Table", "[", 
      RowBox[{"s\[DoubleStruckOne]", ",", 
       RowBox[{"{", 
        RowBox[{"Floor", "[", 
         RowBox[{"n", "/", "2"}], "]"}], "}"}]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.762586720497892*^9, 3.762586723278015*^9}, {
  3.762586782914296*^9, 3.7625867865092373`*^9}, {3.7741816438488436`*^9, 
  3.774181662037843*^9}, {3.7741824340730653`*^9, 3.774182439030678*^9}, {
  3.774258218835978*^9, 3.774258218858915*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b2d67143-f2e3-49e7-bfbe-4072aa236d88"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "CircleTimes"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"CircleTimes", ",", "Flat"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircleTimes", "[", 
     RowBox[{"x___", ",", 
      RowBox[{"a_", " ", "y_"}], ",", "z___"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"FreeQ", "[", 
      RowBox[{"a", ",", "s\[DoubleStruckOne]"}], "]"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"a", ",", "\[Sigma]"}], "]"}]}]}], ":=", 
   RowBox[{"a", " ", 
    RowBox[{"CircleTimes", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.762586830034075*^9, 3.7625868416304903`*^9}, {
   3.762586875739889*^9, 3.7625869259190426`*^9}, 3.7741816958010373`*^9, {
   3.774182190036991*^9, 3.7741822088862443`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"9d1de5cf-ebe6-4c30-bd85-9642e79178b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "CenterDot"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CenterDot", "[", 
    RowBox[{"x___", ",", 
     RowBox[{"u_", "+", "v_"}], ",", "y___"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"CenterDot", "[", 
     RowBox[{"x", ",", "u", ",", "y"}], "]"}], "+", 
    RowBox[{"CenterDot", "[", 
     RowBox[{"x", ",", "v", ",", "y"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CenterDot", "[", 
     RowBox[{"x___", ",", 
      RowBox[{"a_", " ", "y_"}], ",", "z___"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"FreeQ", "[", 
      RowBox[{"a", ",", "s\[DoubleStruckOne]"}], "]"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"a", ",", "\[Sigma]"}], "]"}]}]}], ":=", 
   RowBox[{"a", " ", 
    RowBox[{"CenterDot", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CenterDot", "[", 
    RowBox[{"x___", ",", 
     RowBox[{"CircleTimes", "@", "u__"}], ",", 
     RowBox[{"CircleTimes", "@", "v__"}], ",", "y___"}], "]"}], ":=", 
   RowBox[{"CenterDot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Inner", "[", 
      RowBox[{"CenterDot", ",", 
       RowBox[{"{", "u", "}"}], ",", 
       RowBox[{"{", "v", "}"}], ",", "CircleTimes"}], "]"}], ",", "y"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CenterDot", "[", "x_", "]"}], ":=", "x"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CenterDot", "[", 
    RowBox[{"x___", ",", "s\[DoubleStruckOne]", ",", "y___"}], "]"}], ":=", 
   RowBox[{"CenterDot", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CenterDot", "[", 
    RowBox[{"x___", ",", 
     RowBox[{"\[Sigma]", "[", "a_", "]"}], ",", 
     RowBox[{"\[Sigma]", "[", "b_", "]"}], ",", "y___"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"a", ",", "b"}], "]"}], 
     RowBox[{"CenterDot", "[", 
      RowBox[{"x", ",", "s\[DoubleStruckOne]", ",", "y"}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"CenterDot", "[", 
         RowBox[{"x", ",", 
          RowBox[{"\[Sigma]", "[", "c", "]"}], ",", "y"}], "]"}], 
        RowBox[{"Signature", "@", 
         RowBox[{"{", 
          RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "3"}], "}"}]}], "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7625895717460756`*^9, 3.7625896854294524`*^9}, {
   3.762589751332076*^9, 3.7625898023845835`*^9}, {3.762589833702767*^9, 
   3.762589876836782*^9}, {3.762590797023897*^9, 3.7625908829923115`*^9}, {
   3.762591270975619*^9, 3.7625912994710035`*^9}, {3.774181789671099*^9, 
   3.774181807975067*^9}, 3.7741818723120775`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"20e81ac6-2fb8-4bba-83ef-f64114d3bb7f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "s\[CapitalGamma]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s\[CapitalGamma]", "[", "2", "]"}], "[", "1", "]"}], "=", 
   RowBox[{"\[Sigma]", "[", "1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s\[CapitalGamma]", "[", "2", "]"}], "[", "2", "]"}], "=", 
   RowBox[{"\[Sigma]", "[", "2", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", 
      RowBox[{"n_Integer", "?", "EvenQ"}], "]"}], "[", "a_Integer", "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "a", "\[LessEqual]", 
     RowBox[{"n", "-", "2"}]}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], "=", 
    RowBox[{"CircleTimes", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s\[CapitalGamma]", "[", 
        RowBox[{"n", "-", "2"}], "]"}], "[", "a", "]"}], ",", 
      RowBox[{"\[Sigma]", "[", "3", "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", 
      RowBox[{"n_Integer", "?", "EvenQ"}], "]"}], "[", "a_Integer", "]"}], "/;", 
    RowBox[{"a", "\[Equal]", 
     RowBox[{"n", "-", "1"}]}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], "=", 
    RowBox[{"-", 
     RowBox[{"CircleTimes", "[", 
      RowBox[{
       RowBox[{"id", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "1", "]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", 
      RowBox[{"n_Integer", "?", "EvenQ"}], "]"}], "[", "a_Integer", "]"}], "/;", 
    RowBox[{"a", "\[Equal]", "n"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], "=", 
    RowBox[{"-", 
     RowBox[{"CircleTimes", "[", 
      RowBox[{
       RowBox[{"id", "[", 
        RowBox[{"n", "-", "2"}], "]"}], ",", 
       RowBox[{"\[Sigma]", "[", "2", "]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", 
      RowBox[{"n_Integer", "?", "OddQ"}], "]"}], "[", "a_Integer", "]"}], "/;", 
    RowBox[{"a", "<", "n"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], "=", 
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", 
      RowBox[{"n", "-", "1"}], "]"}], "[", "a", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", 
      RowBox[{"n_Integer", "?", "OddQ"}], "]"}], "[", "a_Integer", "]"}], "/;", 
    RowBox[{"a", "\[Equal]", "n"}]}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "a", "]"}], "=", 
    RowBox[{
     SuperscriptBox["\[ImaginaryI]", 
      FractionBox[
       RowBox[{"n", "-", "1"}], "2"]], " ", 
     RowBox[{"CenterDot", "@@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"s\[CapitalGamma]", "[", 
          RowBox[{"n", "-", "1"}], "]"}], "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"n", "-", "1"}]}], "}"}]}], "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6883334589895353`*^9, 3.688333474771318*^9}, 
   3.6883335124235477`*^9, {3.688333556224598*^9, 3.688333741200082*^9}, {
   3.6883337779448357`*^9, 3.688333887016243*^9}, {3.68833396220844*^9, 
   3.688333980471264*^9}, {3.688334562223674*^9, 3.688334573542512*^9}, {
   3.688334729630495*^9, 3.68833474123827*^9}, {3.6883349211275454`*^9, 
   3.6883349233101587`*^9}, {3.688334996798181*^9, 3.688335056262494*^9}, {
   3.6883351001201878`*^9, 3.688335147789673*^9}, {3.688335322454672*^9, 
   3.688335334183578*^9}, {3.688335375526884*^9, 3.688335392178022*^9}, {
   3.6883354517185383`*^9, 3.6883354582134323`*^9}, {3.688335746867311*^9, 
   3.688335765998025*^9}, {3.6883359240861473`*^9, 3.688335975182886*^9}, {
   3.68833609942206*^9, 3.688336104349493*^9}, {3.7625866467692347`*^9, 
   3.7625866906856694`*^9}, {3.762586795502277*^9, 3.762586827470047*^9}, {
   3.774181465610462*^9, 3.774181581190419*^9}, 3.7741817123933706`*^9, {
   3.7741822310291376`*^9, 3.7741822472222986`*^9}, {3.7741823061023607`*^9, 
   3.774182325115409*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b654ef27-85f2-4bdf-892c-0e9e679cd8a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpRep", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s\[DoubleStruckOne]", "\[Rule]", 
      RowBox[{"IdentityMatrix", "[", 
       RowBox[{"2", ",", "SparseArray"}], "]"}]}], ",", 
     RowBox[{"\[Sigma]", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"SparseArray", "@", 
         RowBox[{"PauliMatrix", "@", "#"}]}], "&"}], ")"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.774184205852685*^9, 3.77418420825284*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"7c7d58ab-32cc-49c1-9423-678f9f8cdf7c"],

Cell[CellGroupData[{

Cell["\<\
Check that this definition coincides with the previous one upon replacement\
\>", "Subsubsection",
 CellChangeTimes->{{3.777020959859398*^9, 
  3.7770209860994*^9}},ExpressionUUID->"b22c2f6c-431c-4256-aeb3-ac68ad67f2f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "i", "]"}], 
        "\[Equal]", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "n", "]"}], "[", "i", "]"}]}], "/.", 
       "ExpRep"}], "/.", 
      RowBox[{"CircleTimes", "\[Rule]", "KroneckerProduct"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.774182336021368*^9, 3.7741823987119346`*^9}, {
  3.774184210719841*^9, 3.774184211917845*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"68ecfb86-760f-4e17-8d58-68f5888c2fc7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.77418432495942*^9, 3.774258230341916*^9, 3.774258279324915*^9, {
   3.77702117910747*^9, 3.7770211955214376`*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"4f4af340-7278-4e68-9397-3189306a887e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Check the anti-commutation relations symbolically", "Subsubsection",
 CellChangeTimes->{{3.7770209975873957`*^9, 
  3.7770210098914294`*^9}},ExpressionUUID->"de3c2f30-33f8-4e97-9b9c-\
9a97db1fa8b4"],

Cell["\<\
This should be much faster than before, because no large matrices ever \
intervene.\
\>", "Text",
 CellChangeTimes->{{3.777021110150429*^9, 
  3.777021132482399*^9}},ExpressionUUID->"7aa5e18f-9af1-411e-bda8-\
953fbe0d608f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"And", "@@", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "i", "]"}], 
        "\[CenterDot]", 
        RowBox[{
         RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "j", "]"}]}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "j", "]"}], 
        "\[CenterDot]", 
        RowBox[{
         RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "i", "]"}]}]}], 
      "\[Equal]", 
      RowBox[{"2", 
       RowBox[{"id", "[", "n", "]"}], 
       RowBox[{"KroneckerDelta", "[", 
        RowBox[{"i", ",", "j"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "4", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "n"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.774181852759102*^9, 3.774181896842822*^9}, {
   3.7741819486469593`*^9, 3.7741820990828643`*^9}, 3.7741824189699426`*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"61fed4a7-0a1d-48eb-95fc-b8201f5fb56c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7741818635845604`*^9, 3.774181893411821*^9}, {
   3.774181967152567*^9, 3.774181973398568*^9}, {3.774182030339636*^9, 
   3.774182100449831*^9}, 3.7741822143681045`*^9, {3.774182425119053*^9, 
   3.7741824432646627`*^9}, 3.774184329269457*^9, 3.774258281491915*^9, {
   3.777021179816469*^9, 3.77702120246447*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"577a7578-7f95-4197-98bc-e4f463e23d01"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Construct the SYK Hamiltonian", "Subsection",
 CellChangeTimes->{{3.7770210303073983`*^9, 
  3.7770210344363985`*^9}},ExpressionUUID->"b4aac93f-22ca-488f-991b-\
8a408be09b35"],

Cell[TextData[{
 "We construct the Hamiltonian operating with Pauli matrices symbolically and \
only perform the ",
 StyleBox["KroneckerProduct",
  FontWeight->"Bold"],
 "\[CloseCurlyQuote]s in the end.\nWe memoize partial ",
 StyleBox["KroneckerProduct",
  FontWeight->"Bold"],
 "\[CloseCurlyQuote]s to save some time."
}], "Text",
 CellChangeTimes->{{3.7770210707244253`*^9, 3.777021090515396*^9}, {
  3.777021137410438*^9, 3.777021139907439*^9}, {3.7770212220514383`*^9, 
  3.7770212532184706`*^9}},ExpressionUUID->"d3aa5ad6-c51b-46dd-8200-\
89975b0d057f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "EvalCircleTimes"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EvalCircleTimes", "[", "x_", "]"}], ":=", 
   RowBox[{"x", "/.", "ExpRep"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EvalCircleTimes", "[", 
   RowBox[{"x__", ",", "y_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"EvalCircleTimes", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"EvalCircleTimes", "[", "x", "]"}], ",", 
     RowBox[{"y", "/.", "ExpRep"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.774182856217491*^9, 3.7741828813466473`*^9}, {
  3.774182913876811*^9, 3.7741829728549337`*^9}, {3.7741830034218893`*^9, 
  3.7741830169935203`*^9}, {3.774184095886585*^9, 3.774184148944026*^9}, {
  3.774184191794034*^9, 3.7741841965577145`*^9}, {3.7741843491025553`*^9, 
  3.774184361758568*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"81941baf-bda5-4420-89fb-e69cfabf75b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "@", "sH"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sH", "[", "n_Integer", "]"}], ":=", 
  RowBox[{
   FractionBox["1", "4"], 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Coupling", "@", "n"}], " ", 
       RowBox[{
        RowBox[{
         RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "i", "]"}], 
        "\[CenterDot]", 
        RowBox[{
         RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "j", "]"}], 
        "\[CenterDot]", 
        RowBox[{
         RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "k", "]"}], 
        "\[CenterDot]", 
        RowBox[{
         RowBox[{"s\[CapitalGamma]", "[", "n", "]"}], "[", "l", "]"}]}]}], "/.", 
      RowBox[{"CircleTimes", "\[Rule]", "EvalCircleTimes"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"l", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"k", "-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"j", "-", "1"}]}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7741824474446344`*^9, 3.7741824814274216`*^9}, {
  3.7742582864209757`*^9, 3.774258315417932*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"85415b62-206a-4edc-803f-95dd27dce48e"],

Cell[CellGroupData[{

Cell["Timings", "Subsubsection",
 CellChangeTimes->{{3.7770211538104396`*^9, 
  3.777021154482439*^9}},ExpressionUUID->"cad35e45-b3a8-48a6-a8a5-\
52c9b3a749f3"],

Cell["\<\
These timings show symbolic evaluation is not necessarily better than the \
naive approach in this case.\
\>", "Text",
 CellChangeTimes->{{3.7770215828829527`*^9, 
  3.777021603841954*^9}},ExpressionUUID->"60cd018d-a288-4896-ba07-\
8a017d88be03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sH", "[", "20", "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{3.774183205712409*^9, 
  3.7742583447479596`*^9},ExpressionUUID->"be63fb33-7838-4b8a-8b82-\
f4061a7f4c93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.6622031`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["262144", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1024", ",", "1024"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["262144", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1024", ",", "1024"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.25`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.014059164398356916`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "321"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.04351821763014247`"}], "+", 
                    RowBox[{"0.040424518701969`", " ", "\[ImaginaryI]"}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "193"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.018202445315411438`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.001521283789545672`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "961"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.018649978804796963`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.003568113016959807`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local8"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 6301424, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8265311377015684365652737234028159366068942985128942773776, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local8", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<262144>, {1024, 1024}]"& )],
    False,
    BoxID -> 8265311377015684365652737234028159366068942985128942773776,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7741832299234085`*^9, {3.7741843700285554`*^9, 3.7741843921176972`*^9}, {
   3.774258325471958*^9, 3.7742583290249586`*^9}},
 CellLabel->"Out[55]=",ExpressionUUID->"08d4a088-b9f1-4718-9067-8da0d14f83fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sH", "[", "22", "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7770212673954372`*^9, 3.7770212674274416`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"e7dd52ea-e319-4d48-8a0c-68b621200214"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.8952901`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["790528", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2048", ",", "2048"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["790528", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"2048", ",", "2048"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.1884765625`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.040104749548431615`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "641"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.007890947348613807`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.012971498668183845`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "385"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.0038979848708432597`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.00653466322097738`", " ", "\[ImaginaryI]"}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1921"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.0137987495018076`"}], "+", 
                    RowBox[{"0.008534532062598205`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local6"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 18991856, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8271473168908239458835489586368707787301770182775417990760, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local6", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<790528>, {2048, 2048}]"& )],
    False,
    BoxID -> 8271473168908239458835489586368707787301770182775417990760,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.7770212770944376`*^9, 3.777021282729438*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"53bdfd5d-0669-4c04-9e1f-65dbe4f79a22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sH", "[", "24", "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{{3.7741824885863857`*^9, 3.7741825051435895`*^9}, {
   3.774182539353636*^9, 3.7741825779902954`*^9}, {3.7741827108430233`*^9, 
   3.774182722070605*^9}, {3.774182760450843*^9, 3.774182767012895*^9}, {
   3.774183033556534*^9, 3.7741830959410563`*^9}, 3.7742583483639584`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"f4092963-ac1d-4030-897d-895613b36b2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.9894525`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2301952", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"4096", ",", "4096"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2301952", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"4096", ",", "4096"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.13720703125`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.037000617478541546`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1281"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.0005792224129188284`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.012804299862111701`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "769"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.026882940338621264`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.007147115084897623`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3841"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.003621912938242962`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.005582463872344614`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local8"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 55284464, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8265311377015684365652737234028159366105836473276510838544, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local8", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<2301952>, {4096, 4096}]"& )],
    False,
    BoxID -> 8265311377015684365652737234028159366105836473276510838544,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.774183055953632*^9, 3.774183087300024*^9}, 
   3.774183152069025*^9, 3.774183189999262*^9, 3.7741832259614077`*^9, {
   3.7741844253416977`*^9, 3.7741844647956953`*^9}, {3.7742583531059585`*^9, 
   3.774258362694958*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"4a8baa66-005c-4e35-9816-8d3382029724"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sH", "[", "26", "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellChangeTimes->{3.777021281298438*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"ab7ccf81-f164-44fb-94d7-50296dc6d91f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"65.6339138`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6504448", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"8192", ",", "8192"}], "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["6504448", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"8192", ",", "8192"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.096923828125`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.05019574692606435`"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2561"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.011649172251094455`", "\[VeryThinSpace]"}], 
                    "-", 
                    RowBox[{"0.01636318880996282`", " ", "\[ImaginaryI]"}]}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1537"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.000056821152946286146`"}], "+", 
                    RowBox[{"0.021330680887857674`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "7681"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.01969958026182304`", "\[VeryThinSpace]"}], "-", 
                    
                    RowBox[{"0.0018167037097708543`", " ", 
                    "\[ImaginaryI]"}]}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                    LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local6"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 156173080, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8271473168908239458835489586368707787338663670924651500640, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local6", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<6504448>, {8192, 8192}]"& )],
    False,
    BoxID -> 8271473168908239458835489586368707787338663670924651500640,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.777021410955439*^9, 3.777021519302954*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"f7ee1865-96ee-4dd5-bc57-1d88856b4c28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sH", "[", "28", "]"}], "//", "AbsoluteTiming"}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"a7010cb2-5f9d-467e-b9f5-cd198636f46c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"259.1538765`", ",", 
   TagBox[
    TemplateBox[{RowBox[{
        StyleBox[
         TagBox["SparseArray", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           TemplateBox[{
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["17907712", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"16384", ",", "16384"}], "}"}], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                   GraphicsBox[
                    RasterBox[
                    SparseArray[
                    Automatic, {10, 10}, 0.93, {
                    1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                    0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                    0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                    AspectRatio -> 1, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                    FrameStyle -> Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameLabel -> {None, None}, 
                    FrameTicks -> {{None, None}, {None, None}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["17907712", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"16384", ",", "16384"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0.06671142578125`", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                    TagBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.04416869195717385`", "\[VeryThinSpace]"}], "+", 
                    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5121"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.009238553118673179`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.012429691993148046`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3073"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"-", "0.015836720209330617`"}], "+", 
                    RowBox[{"0.006297928212082292`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "15361"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    RowBox[{"0.003602884903087268`", "\[VeryThinSpace]"}], 
                    "+", 
                    RowBox[{"0.009592829504598232`", " ", "\[ImaginaryI]"}]}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
            "SummaryPanel"], 
           ButtonBox[
            DynamicBox[
             ToBoxes[
              If[
               
               Or[$VersionNumber < 11.2, CurrentValue["RunningEvaluator"] =!= 
                "Local8"], 
               Style["This object cannot be used as input.", "SummaryEmbed"], 
               BoxForm`EmbedSummaryLabel[SparseArray, 429916952, 
                Dynamic[Typeset`embedState$$]]], StandardForm]], 
            ButtonFunction :> 
            BoxForm`EmbedSummaryInterpretation[
             SparseArray, 
              8265311377015684365652737234028159366161176705501172007312, 
              EvaluationBox[], 
              Dynamic[Typeset`embedState$$], StandardForm], DefaultBaseStyle -> 
            "SummaryEmbedButton", BaseStyle -> {"DialogStyle"}, Enabled -> 
            Dynamic[
              
              And[$VersionNumber >= 11.2, CurrentValue["RunningEvaluator"] === 
               "Local8", Typeset`embedState$$ === "Ready"]], Appearance -> 
            Inherited, Method -> Inherited, Evaluator -> Automatic]}, 
          "SummaryEmbedGrid"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->("SparseArray[<17907712>, {16384, 16384}]"& )],
    False,
    BoxID -> 8265311377015684365652737234028159366161176705501172007312,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.7742592962461004`*^9, 3.7742595670071*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"88e5df7b-3610-4ec3-bbf7-0d130b26eaaa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sConstructionTimingData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "1.6622031`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "3.8952901`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"24", ",", "7.9894525`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26", ",", "65.6339138`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "259.1538765`"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.777021306258438*^9, 3.77702133869144*^9}, 
   3.777021550850952*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"9af25552-1c9f-45b6-aa7d-5dc12003fda2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "@", "sConstructionTimingData"}]], "Input",
 CellChangeTimes->{{3.777014818055216*^9, 3.7770148245192223`*^9}, {
   3.777014912663464*^9, 3.777014914277499*^9}, 3.7770153690776606`*^9, 
   3.7770213706434383`*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"600a7b37-288b-4a27-ab9b-fc5dffb524b8"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{20., 0.508143891133245}, {22., 1.3597681566519022`}, {24., 
      2.0781222342764223`}, {26., 4.184092541021153}, {28., 
      5.5574220030420705`}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{19.83333333333334, 0.11300922407227956`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{19.83333333333334, 28.}, {0.11300922407227956`, 
   5.5574220030420705`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.003065458786462, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.090076835776092, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.170119543449628, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.24422751560335, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.313220387090301, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.3777589082278725`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.777014822044219*^9, 3.7770148247512546`*^9}, 
   3.7770149148934975`*^9, 3.777015369558689*^9, 3.777021556025955*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"ecb6d26b-f511-4500-b6b0-b041445bc9a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sConstructionTimingFit", "=", 
  RowBox[{"LinearModelFit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"First", "@", "#"}], ",", 
        RowBox[{"Log", "@", 
         RowBox[{"Last", "@", "#"}]}]}], "}"}], "&"}], "/@", 
     "sConstructionTimingData"}], ",", "n", ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.777014845943239*^9, 3.7770149612224665`*^9}, {
  3.777015359108658*^9, 3.7770153602606564`*^9}, {3.7770154728366895`*^9, 
  3.7770154816406593`*^9}, {3.777021374707438*^9, 3.777021379027437*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"a261d3d7-20e4-4772-94f6-7665b3db2bd7"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{
       RowBox[{"-", "12.769946964599376`"}], "+", 
       RowBox[{"0.6461440304093472`", " ", "n"}]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Linear", {-12.769946964599376`, 
     0.6461440304093472}, {{$CellContext`n}, {1, $CellContext`n}}, {0, 0}}, {{
    1., 1., 1., 1., 
    1.}}, {{20, 0.508143891133245}, {22, 1.3597681566519022`}, {
     24, 2.0781222342764223`}, {26, 4.184092541021153}, {
     28, 5.5574220030420705`}}, {{1., 20.}, {1., 22.}, {1., 24.}, {1., 26.}, {
    1., 28.}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`n}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7770148681584234`*^9, 3.7770149614064646`*^9}, 
   3.7770154819686575`*^9, 3.777021562264988*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"1bf4d8ef-f465-47c2-ad62-b972b70e8cf7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "@", 
  RowBox[{
  "sConstructionTimingFit", "[", "\"\<BestFitParameters\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.777015484421689*^9, 3.7770154879906836`*^9}, 
   3.77702140397344*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"0f885a70-4b80-4c2b-aa7e-e28dd7e96469"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.8450014958632827`*^-6", ",", "1.9081687841522377`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7770154883896914`*^9, 3.7770215638579845`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"65c83a47-92ee-40b8-acaa-9734fa94e2d5"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Local6",
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 177, 3, 121, "Title",ExpressionUUID->"ec764c89-c64c-4887-bf19-b4004e9bb687"],
Cell[760, 27, 356, 7, 106, "Subtitle",ExpressionUUID->"5e63d016-1cad-4eac-9c22-eef1a37bc86d"],
Cell[CellGroupData[{
Cell[1141, 38, 190, 3, 83, "Section",ExpressionUUID->"60663fdc-62c2-4f45-9293-3c0c5a742cac"],
Cell[1334, 43, 243, 6, 43, "Text",ExpressionUUID->"c9baf84a-9889-494a-a9dc-3efc9158eea0"],
Cell[1580, 51, 266, 5, 35, "Input",ExpressionUUID->"9d73f7a0-515c-4291-8c59-8868d52901a2"],
Cell[1849, 58, 241, 6, 43, "Text",ExpressionUUID->"d9ffa46d-eff5-4ab0-91f9-8a346ceb31e3"],
Cell[2093, 66, 245, 4, 35, "Input",ExpressionUUID->"a2464c78-c19e-402e-852e-f63dc48352fe"],
Cell[2341, 72, 665, 16, 35, "Input",ExpressionUUID->"4284db04-0fe0-44df-a5ca-2e42a84077a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3043, 93, 303, 4, 83, "Section",ExpressionUUID->"d2044a06-64bc-4e1f-ab04-7d53089f9773"],
Cell[3349, 99, 303, 6, 43, "Text",ExpressionUUID->"e2723a58-861d-4c35-a90e-54ce1f0e375d"],
Cell[CellGroupData[{
Cell[3677, 109, 237, 4, 67, "Subsection",ExpressionUUID->"36f645d8-5231-47ff-b962-2712904d9a03"],
Cell[3917, 115, 962, 21, 65, "Input",ExpressionUUID->"1ae86c48-897e-4983-8f88-8e01d801fb9e"],
Cell[4882, 138, 4677, 121, 212, "Input",ExpressionUUID->"7a77583f-3f46-432a-b9b5-024f3cb01ea2"],
Cell[CellGroupData[{
Cell[9584, 263, 178, 3, 56, "Subsubsection",ExpressionUUID->"3c9f5345-1549-4709-ba56-8d62af2e7116"],
Cell[CellGroupData[{
Cell[9787, 270, 1378, 33, 35, "Input",ExpressionUUID->"83b120b5-92a7-4318-8bc8-90226f9d6cb6"],
Cell[11168, 305, 3662, 51, 40, "Output",ExpressionUUID->"1aa3755d-a2b8-4b7f-8b64-ee0f84c6bbf5"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14891, 363, 195, 3, 67, "Subsection",ExpressionUUID->"f08c7519-51f1-4da4-96ff-dd8d7db14c57"],
Cell[15089, 368, 1537, 42, 60, "Input",ExpressionUUID->"1fd11f44-9733-40c0-82ae-5218ecbae9d6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16675, 416, 233, 4, 83, "Section",ExpressionUUID->"3326fcb1-8cc1-4982-9f16-678dea9a82e4"],
Cell[CellGroupData[{
Cell[16933, 424, 188, 3, 67, "Subsection",ExpressionUUID->"e4ce44a5-0c5f-4e61-a85b-b1ba8164b47d"],
Cell[17124, 429, 440, 11, 64, "Input",ExpressionUUID->"fa128d58-41a3-4666-8920-78343b80f5a0"],
Cell[17567, 442, 970, 27, 77, "Input",ExpressionUUID->"4caec03b-2077-4ae2-a57a-6d3da8d9540a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18574, 474, 274, 4, 67, "Subsection",ExpressionUUID->"c9ad6da9-0238-46f1-86cb-dbed9d90a730"],
Cell[18851, 480, 710, 16, 60, "Input",ExpressionUUID->"b746cefa-7b8b-4e44-9b54-19fc23729291"],
Cell[19564, 498, 771, 18, 60, "Input",ExpressionUUID->"76cd20cf-8d80-4059-9e0b-70d6f8ed9b36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20372, 521, 157, 3, 67, "Subsection",ExpressionUUID->"5052dcb9-f46d-4f5d-a793-beb7b4450d0a"],
Cell[CellGroupData[{
Cell[20554, 528, 179, 3, 56, "Subsubsection",ExpressionUUID->"90ba2a21-e14e-47f6-93aa-3bd0075125e9"],
Cell[20736, 533, 610, 16, 43, "Text",ExpressionUUID->"ed9aa7a9-bc4c-449e-839a-ce50ae3ff854"],
Cell[CellGroupData[{
Cell[21371, 553, 236, 4, 35, "Input",ExpressionUUID->"997f2288-5c9e-4ef1-9ccc-10896a3ba2a4"],
Cell[21610, 559, 11680, 235, 110, "Output",ExpressionUUID->"17ed9499-f6ca-4388-a5d0-74556d59609a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33327, 799, 214, 4, 35, "Input",ExpressionUUID->"34939057-4c3d-4e3a-a5d7-5c0ed863b62b"],
Cell[33544, 805, 11588, 231, 110, "Output",ExpressionUUID->"6109be97-fbb9-49ef-bfe5-af2bd55c45a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45169, 1041, 272, 6, 35, "Input",ExpressionUUID->"edf77c7c-1d5c-4f32-8bf4-db4f30ba747e"],
Cell[45444, 1049, 11739, 237, 105, "Output",ExpressionUUID->"2ec00bbc-28e9-4117-83cd-fccbd20c21d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57220, 1291, 212, 4, 35, "Input",ExpressionUUID->"41b120fa-0739-42b7-bd8c-050ea7b562db"],
Cell[57435, 1297, 11547, 230, 110, "Output",ExpressionUUID->"2d82950c-9e7a-4ffe-9108-1cc05163be39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69019, 1532, 570, 10, 35, "Input",ExpressionUUID->"8158ac2a-78ed-4a74-a512-1a8dc660b169"],
Cell[69592, 1544, 12080, 242, 105, "Output",ExpressionUUID->"7578781f-20bd-470c-a465-b8df6d04bd39"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81709, 1791, 240, 4, 35, "Input",ExpressionUUID->"9588f5ac-425b-48af-8978-629c0f385593"],
Cell[81952, 1797, 11824, 239, 110, "Output",ExpressionUUID->"897c9ccd-cdeb-4b9e-9c07-e64cf460f7e3"]
}, Open  ]],
Cell[93791, 2039, 757, 19, 35, "Input",ExpressionUUID->"1f5d9a74-854e-4832-be43-f0ccb1965d19"],
Cell[CellGroupData[{
Cell[94573, 2062, 301, 4, 35, "Input",ExpressionUUID->"a6ba0b3e-7716-40d1-b7af-63a501425701"],
Cell[94877, 2068, 7007, 150, 304, "Output",ExpressionUUID->"9615f3ff-b532-4602-8a11-43750c7464ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101921, 2223, 627, 16, 35, "Input",ExpressionUUID->"5e37ff64-e3e6-48ec-b4af-6aea513a5e6e"],
Cell[102551, 2241, 1059, 28, 63, "Output",ExpressionUUID->"8f03cb18-2c87-4776-89a6-452088bde1cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103647, 2274, 273, 5, 35, "Input",ExpressionUUID->"d05118e7-c3a4-404b-9401-2d113a9715bb"],
Cell[103923, 2281, 240, 5, 40, "Output",ExpressionUUID->"a4c78afa-1e99-425d-8d5a-a939b145c03f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[104212, 2292, 182, 3, 45, "Subsubsection",ExpressionUUID->"e00b4a12-d083-4cc0-bb3a-d67c0f525074"],
Cell[104397, 2297, 288, 6, 43, "Text",ExpressionUUID->"642ffa29-04de-43ec-b92d-99e5ff5f7a41"],
Cell[CellGroupData[{
Cell[104710, 2307, 204, 3, 35, "Input",ExpressionUUID->"5e07705c-c8a2-410e-a8be-68295d560f4b"],
Cell[104917, 2312, 235, 4, 40, "Output",ExpressionUUID->"82b3e69a-30ab-4a43-b446-32222f8ce3c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105189, 2321, 559, 13, 35, "Input",ExpressionUUID->"bbc05f8e-9d3a-4388-a15a-7a6dc771e801"],
Cell[105751, 2336, 714, 14, 54, "Message",ExpressionUUID->"fcda6f2d-e7f0-4283-b233-abc2cdea3c24"],
Cell[106468, 2352, 714, 14, 54, "Message",ExpressionUUID->"96b0c19b-c0b8-4d17-9e5b-778f73629e35"],
Cell[107185, 2368, 475, 12, 40, "Output",ExpressionUUID->"310ca902-0487-45cf-99cf-c44db3462442"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107697, 2385, 230, 3, 35, "Input",ExpressionUUID->"749826ba-2763-455b-83f4-a86a2ec9409b"],
Cell[107930, 2390, 6073, 132, 304, "Output",ExpressionUUID->"82454546-b240-4429-96d2-82be17c2808d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114040, 2527, 693, 17, 35, "Input",ExpressionUUID->"5541f0fc-84c8-4768-b43d-35af2f3c03d1"],
Cell[114736, 2546, 921, 25, 63, "Output",ExpressionUUID->"2b977f86-2832-45f1-a1b5-153c6bb60984"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115694, 2576, 280, 6, 35, "Input",ExpressionUUID->"0cf213b1-a4d6-4213-930b-81feb7c495c6"],
Cell[115977, 2584, 263, 5, 44, "Output",ExpressionUUID->"b9c71cc1-728e-47c3-b8e5-dfe71d3982ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116277, 2594, 304, 7, 35, "Input",ExpressionUUID->"ea3cc2c8-81b2-49fd-b385-7bf538485132"],
Cell[116584, 2603, 714, 14, 54, "Message",ExpressionUUID->"12141a6b-bead-4471-ba43-bd9fdc0e59f3"],
Cell[117301, 2619, 716, 14, 54, "Message",ExpressionUUID->"7a712cde-4223-4694-9b66-85c0274eeaf6"],
Cell[118020, 2635, 716, 14, 54, "Message",ExpressionUUID->"041fd85c-5874-4431-ab65-6c7aac4105d9"],
Cell[118739, 2651, 469, 10, 29, "Message",ExpressionUUID->"3df15ee0-4b80-4d66-a7b5-04b1f6ab5230"],
Cell[119211, 2663, 233, 4, 40, "Output",ExpressionUUID->"a681db3f-59ff-46c4-8bb1-8d1b6e0ea897"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119517, 2675, 328, 5, 83, "Section",ExpressionUUID->"afb6e1d3-0595-41c0-85a9-ebe362b026f5"],
Cell[119848, 2682, 1531, 38, 156, "Input",ExpressionUUID->"8092d336-384c-43bd-b123-40dad2b5077f"],
Cell[121382, 2722, 1311, 33, 190, "Input",ExpressionUUID->"452e25c1-e1bb-4e4f-95fe-a4dbf422c6ce"],
Cell[122696, 2757, 1268, 32, 195, "Input",ExpressionUUID->"f36a3e75-4f6d-4ff2-ad40-747cc12b3a0b"],
Cell[CellGroupData[{
Cell[123989, 2793, 234, 4, 56, "Subsubsection",ExpressionUUID->"465c5cbc-cab7-4599-a6aa-fff18f46498a"],
Cell[CellGroupData[{
Cell[124248, 2801, 325, 6, 35, "Input",ExpressionUUID->"9dab88a9-b439-4f6f-84a6-bb21ff33fe5b"],
Cell[124576, 2809, 379, 6, 40, "Output",ExpressionUUID->"5b67343f-bc03-4cd7-ace3-38afccfdf6a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124992, 2820, 732, 19, 41, "Input",ExpressionUUID->"5e72edca-eb9d-4231-8092-31c0803587ae"],
Cell[125727, 2841, 790, 15, 54, "Message",ExpressionUUID->"1632d0f4-90ed-458d-89e9-2116cfd34544"],
Cell[126520, 2858, 792, 15, 54, "Message",ExpressionUUID->"4835250a-a432-4fb8-afef-c818edb73e5e"],
Cell[127315, 2875, 792, 15, 54, "Message",ExpressionUUID->"c7be7388-b63c-4b62-888a-4e2e7c5ce8c2"],
Cell[128110, 2892, 548, 11, 29, "Message",ExpressionUUID->"2c5cfab3-aa0b-48f1-9a44-92204ec0d917"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128695, 2908, 364, 7, 35, "Input",ExpressionUUID->"99248e7f-a357-4ed0-b5f3-237ef7c44269"],
Cell[129062, 2917, 617, 11, 40, "Output",ExpressionUUID->"1e2c1f85-a3c5-4a4f-8a04-5cdc50af9dd2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[129728, 2934, 175, 3, 45, "Subsubsection",ExpressionUUID->"deaa22e4-8c49-4678-a810-10b5c96b1d6f"],
Cell[129906, 2939, 332, 7, 35, "Input",ExpressionUUID->"8b4b14a4-68ec-464d-86f5-a98e25461e5b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130287, 2952, 159, 3, 83, "Section",ExpressionUUID->"d934a958-ed21-401e-bbd6-403b1206dc1a"],
Cell[CellGroupData[{
Cell[130471, 2959, 163, 2, 67, "Subsection",ExpressionUUID->"b4ff6934-13b4-419c-bb70-888f15feef5f"],
Cell[130637, 2963, 297, 8, 43, "Text",ExpressionUUID->"c9525060-89f6-4ab8-946a-51aa10de6dfa"],
Cell[130937, 2973, 2104, 48, 173, "Input",ExpressionUUID->"3bf4e01e-9943-4893-96ff-a7c7f5f01248"],
Cell[133044, 3023, 384, 9, 52, "Input",ExpressionUUID->"00a930da-d446-40a8-b69a-e4d5bace615e"],
Cell[CellGroupData[{
Cell[133453, 3036, 925, 17, 35, "Input",ExpressionUUID->"1dfd22b6-06d2-469c-9564-3e62ddb8e597"],
Cell[134381, 3055, 470177, 8190, 840, "Output",ExpressionUUID->"51ad28cc-ca4e-46ed-b766-d4e9f51c28e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604595, 11250, 269, 5, 35, "Input",ExpressionUUID->"10150fe5-2273-4faa-a290-094ebf63eac4"],
Cell[604867, 11257, 260, 3, 40, "Output",ExpressionUUID->"5476aa9f-afae-4842-b478-2f74c453a305"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[605176, 11266, 157, 3, 46, "Subsection",ExpressionUUID->"cca36425-428f-48bb-beea-1c1791f918a8"],
Cell[605336, 11271, 410, 8, 71, "Text",ExpressionUUID->"0fbb4873-6c4a-4eb9-97b0-26311bb9e54a"],
Cell[605749, 11281, 1793, 46, 75, "Input",ExpressionUUID->"4c59c223-3398-44dc-b9b6-51349f05be0f"],
Cell[CellGroupData[{
Cell[607567, 11331, 557, 14, 35, "Input",ExpressionUUID->"2cc34cfa-93ac-4f6d-8439-356cf37f04e8"],
Cell[608127, 11347, 2439, 73, 65, "Output",ExpressionUUID->"b3acbdac-a33a-4785-a1e5-9f95ec2eed35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610603, 11425, 700, 15, 35, "Input",ExpressionUUID->"d1b6c9a6-aa8d-4796-89b5-b772cf56ab57"],
Cell[611306, 11442, 1050, 28, 63, "Output",ExpressionUUID->"31c3d8ae-5b77-411a-bf92-b830922ad8ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612393, 11475, 600, 15, 35, "Input",ExpressionUUID->"f0ff19ed-73e3-4090-89e3-6290c047e8e1"],
Cell[612996, 11492, 2452, 73, 65, "Output",ExpressionUUID->"fb7d833d-b181-46b8-ac3d-2bccdbfc26f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[615485, 11570, 743, 16, 35, "Input",ExpressionUUID->"8137db7f-34be-4b2a-9021-2c0267b89301"],
Cell[616231, 11588, 1070, 28, 63, "Output",ExpressionUUID->"7d02d83d-39c5-4dc9-8551-e96136a9e8d7"]
}, Open  ]],
Cell[617316, 11619, 216, 5, 43, "Text",ExpressionUUID->"cd8a0098-1392-44bb-86fb-c826a0aebc97"],
Cell[CellGroupData[{
Cell[617557, 11628, 3493, 86, 156, "Input",ExpressionUUID->"e144a76a-8cbc-4ea2-a2b4-39b794b6f4c7"],
Cell[621053, 11716, 49046, 1014, 843, "Output",ExpressionUUID->"4f9d68c9-d047-43b4-a13e-6c16bd972335"]
}, Open  ]],
Cell[CellGroupData[{
Cell[670136, 12735, 246, 4, 35, "Input",ExpressionUUID->"032564bd-62a0-41ed-b008-95ec553acfaa"],
Cell[670385, 12741, 214, 3, 40, "Output",ExpressionUUID->"5e476fe0-5dd4-42dc-b25c-33cfceedd25b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[670648, 12750, 172, 3, 46, "Subsection",ExpressionUUID->"ce2bd9c3-6d0a-4681-8788-b0831a0e7016"],
Cell[670823, 12755, 317, 7, 43, "Text",ExpressionUUID->"0586759c-6a4c-4022-a2a0-b118447f4cd8"],
Cell[671143, 12764, 1056, 27, 64, "Input",ExpressionUUID->"ce485506-824a-47fc-9c8d-eb0a3c8883a8"],
Cell[672202, 12793, 871, 23, 83, "Input",ExpressionUUID->"18da82c8-7f76-42b5-b6ce-f194daaa207b"],
Cell[CellGroupData[{
Cell[673098, 12820, 300, 6, 35, "Input",ExpressionUUID->"eb30990f-3b27-4f78-81cf-fc23f7803f70"],
Cell[673401, 12828, 324, 5, 40, "Output",ExpressionUUID->"98c51b0c-2fb8-4e34-acd3-166f6a62e134"]
}, Open  ]],
Cell[673740, 12836, 2367, 57, 135, "Input",ExpressionUUID->"8d31ab02-e8c7-4cfb-acd4-fda66d2a4215"],
Cell[CellGroupData[{
Cell[676132, 12897, 2206, 45, 156, "Input",ExpressionUUID->"7b272d1b-1f60-4468-8902-45277776d6e1"],
Cell[678341, 12944, 84616, 1487, 848, "Output",ExpressionUUID->"7be01768-b735-4677-b2df-73afb544d2bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762994, 14436, 247, 5, 35, "Input",ExpressionUUID->"cb07713b-77aa-47b1-b722-1ff117b99c09"],
Cell[763244, 14443, 216, 4, 40, "Output",ExpressionUUID->"bf1a87ce-9775-4970-be90-d1e373b817a0"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[763521, 14454, 298, 4, 83, "Section",ExpressionUUID->"2e240afb-3284-4d62-b829-48a393367255"],
Cell[CellGroupData[{
Cell[763844, 14462, 288, 3, 67, "Subsection",ExpressionUUID->"5e6e7899-0bcc-4a4c-8365-b891b06fd81e"],
Cell[764135, 14467, 797, 19, 60, "Input",ExpressionUUID->"b2d67143-f2e3-49e7-bfbe-4072aa236d88"],
Cell[764935, 14488, 962, 23, 84, "Input",ExpressionUUID->"9d1de5cf-ebe6-4c30-bd85-9642e79178b7"],
Cell[765900, 14513, 2994, 81, 180, "Input",ExpressionUUID->"20e81ac6-2fb8-4bba-83ef-f64114d3bb7f"],
Cell[768897, 14596, 4538, 118, 212, "Input",ExpressionUUID->"b654ef27-85f2-4bdf-892c-0e9e679cd8a6"],
Cell[773438, 14716, 569, 15, 35, "Input",ExpressionUUID->"7c7d58ab-32cc-49c1-9423-678f9f8cdf7c"],
Cell[CellGroupData[{
Cell[774032, 14735, 230, 4, 56, "Subsubsection",ExpressionUUID->"b22c2f6c-431c-4256-aeb3-ac68ad67f2f1"],
Cell[CellGroupData[{
Cell[774287, 14743, 799, 21, 35, "Input",ExpressionUUID->"68ecfb86-760f-4e17-8d58-68f5888c2fc7"],
Cell[775089, 14766, 249, 4, 40, "Output",ExpressionUUID->"4f4af340-7278-4e68-9397-3189306a887e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[775387, 14776, 204, 3, 45, "Subsubsection",ExpressionUUID->"de3c2f30-33f8-4e97-9b9c-9a97db1fa8b4"],
Cell[775594, 14781, 233, 6, 43, "Text",ExpressionUUID->"7aa5e18f-9af1-411e-bda8-953fbe0d608f"],
Cell[CellGroupData[{
Cell[775852, 14791, 1187, 32, 35, "Input",ExpressionUUID->"61fed4a7-0a1d-48eb-95fc-b8201f5fb56c"],
Cell[777042, 14825, 447, 6, 40, "Output",ExpressionUUID->"577a7578-7f95-4197-98bc-e4f463e23d01"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[777550, 14838, 181, 3, 67, "Subsection",ExpressionUUID->"b4aac93f-22ca-488f-991b-8a408be09b35"],
Cell[777734, 14843, 559, 13, 71, "Text",ExpressionUUID->"d3aa5ad6-c51b-46dd-8200-89975b0d057f"],
Cell[778296, 14858, 989, 22, 84, "Input",ExpressionUUID->"81941baf-bda5-4420-89fb-e69cfabf75b2"],
Cell[779288, 14882, 1377, 38, 77, "Input",ExpressionUUID->"85415b62-206a-4edc-803f-95dd27dce48e"],
Cell[CellGroupData[{
Cell[780690, 14924, 160, 3, 56, "Subsubsection",ExpressionUUID->"cad35e45-b3a8-48a6-a8a5-52c9b3a749f3"],
Cell[780853, 14929, 256, 6, 43, "Text",ExpressionUUID->"60cd018d-a288-4896-ba07-8a017d88be03"],
Cell[CellGroupData[{
Cell[781134, 14939, 219, 5, 35, "Input",ExpressionUUID->"be63fb33-7838-4b8a-8b82-f4061a7f4c93"],
Cell[781356, 14946, 11796, 238, 105, "Output",ExpressionUUID->"08d4a088-b9f1-4718-9067-8da0d14f83fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[793189, 15189, 242, 4, 35, "Input",ExpressionUUID->"e7dd52ea-e319-4d48-8a0c-68b621200214"],
Cell[793434, 15195, 11635, 232, 110, "Output",ExpressionUUID->"53bdfd5d-0669-4c04-9e1f-65dbe4f79a22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[805106, 15432, 468, 7, 35, "Input",ExpressionUUID->"f4092963-ac1d-4030-897d-895613b36b2d"],
Cell[805577, 15441, 11947, 240, 105, "Output",ExpressionUUID->"4a8baa66-005c-4e35-9816-8d3382029724"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817561, 15686, 214, 4, 35, "Input",ExpressionUUID->"ab7ccf81-f164-44fb-94d7-50296dc6d91f"],
Cell[817778, 15692, 11607, 231, 110, "Output",ExpressionUUID->"f7ee1865-96ee-4dd5-bc57-1d88856b4c28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[829422, 15928, 172, 3, 35, "Input",ExpressionUUID->"a7010cb2-5f9d-467e-b9f5-cd198636f46c"],
Cell[829597, 15933, 11767, 237, 105, "Output",ExpressionUUID->"88e5df7b-3610-4ec3-bbf7-0d130b26eaaa"]
}, Open  ]],
Cell[841379, 16173, 656, 17, 35, "Input",ExpressionUUID->"9af25552-1c9f-45b6-aa7d-5dc12003fda2"],
Cell[CellGroupData[{
Cell[842060, 16194, 330, 5, 35, "Input",ExpressionUUID->"600a7b37-288b-4a27-ab9b-fc5dffb524b8"],
Cell[842393, 16201, 7444, 159, 304, "Output",ExpressionUUID->"ecb6d26b-f511-4500-b6b0-b041445bc9a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[849874, 16365, 669, 15, 35, "Input",ExpressionUUID->"a261d3d7-20e4-4772-94f6-7665b3db2bd7"],
Cell[850546, 16382, 1043, 28, 63, "Output",ExpressionUUID->"1bf4d8ef-f465-47c2-ad62-b972b70e8cf7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[851626, 16415, 303, 7, 35, "Input",ExpressionUUID->"0f885a70-4b80-4c2b-aa7e-e28dd7e96469"],
Cell[851932, 16424, 263, 5, 44, "Output",ExpressionUUID->"65c83a47-92ee-40b8-acaa-9734fa94e2d5"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

